version: 2.1

orbs:
  win: circleci/windows@1.0.0
  aws-s3: circleci/aws-s3@1.0.11

commands:
  set_s3_pkg_urls:
    steps:
      - run:
          name: Set S3 URLs according to date and git hash
          command: |
            echo "export S3_PKG_BUCKET=salto-cli-releases" >> $BASH_ENV
            echo "export PKG_PREFIX=$(git log -1 --format=format:'%cd_%h' --date=format:'%Y%m%d-%H%M%S')" >> $BASH_ENV
            source $BASH_ENV
            echo "export S3_PKG_HASH_PREFIX=s3://${S3_PKG_BUCKET}/${CIRCLE_BRANCH}/${PKG_PREFIX}" >> $BASH_ENV
            source $BASH_ENV

  upload_pkg:
    parameters:
        workspace_dir:
          type: string

        out_filename:
          type: string

    steps:
      - set_s3_pkg_urls

      - store_artifacts:
          path: packages/<< parameters.workspace_dir >>/pkg
          destination: pkg/<< parameters.out_filename >>

      - aws-s3/copy:
          from: packages/<< parameters.workspace_dir >>/pkg/*
          to: ${S3_PKG_HASH_PREFIX}/<< parameters.out_filename >>

  package_cli:
    description: Create a standalone CLI executable

    parameters:
      out_filename:
        type: string

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Remove node_modules
          command: rm -r node_modules packages/*/node_modules

      - run:
          name: Rebuild node_modules
          command: yarn install --pure-lockfile --ignore-scripts

      - run:
          name: Build native executable
          command: yarn workspace @salto/cli run package

      - upload_pkg:
          workspace_dir: cli
          out_filename: cli/<< parameters.out_filename >>

jobs:
  build:
    docker:
      - image: saltolabs/salto:0.0.8

    steps:
      - restore_cache:
          keys:
            - v1-source-{{ .Branch }}
            - v1-source-

      - checkout

      - save_cache:
          key: v1-source-{{ .Branch }}
          paths: .git

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-yarn-deps-{{ arch }}-{{ checksum "yarn.lock" }}
            - v1-yarn-deps-{{ arch }}-
            - v1-yarn-deps-

      - run: yarn --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn

          key: v1-yarn-deps-{{ arch }}-{{ checksum "yarn.lock" }}

      - run: yarn build

      - persist_to_workspace:
          root: .
          paths: '*'

  unittest:
    docker:
      - image: circleci/node:12.10

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Run Jest tests
          command: yarn run jest --forceExit --detectOpenHandles --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/unittests/test-results.xml"


      - store_test_results:
          path: reports

      - run:
          name: Upload coverage to codecov.io
          command: npx codecov -F unit_test -f coverage/*.json

  e2e_test:
    docker:
      - image: circleci/node:12.10

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Run E2E tests
          command: yarn run jest --forceExit --detectOpenHandles --reporters=default --reporters=jest-junit
          no_output_timeout: 20m
          environment:
            RUN_E2E_TESTS: '1'
            JEST_JUNIT_OUTPUT: "reports/e2e/test-results.xml"

      - store_test_results:
          path: reports

      - run:
          name: Upload coverage to codecov.io
          command: npx codecov -F e2e_test -f coverage/*.json

  package_cli_windows:
    executor:
      name: win/vs2019
      shell: bash.exe

    working_directory: c:\workspace

    steps:
      - run:
          name: Install yarn
          command: npm i --g yarn

      - package_cli:
          out_filename: "windows/salto.exe"

  package_cli_linux:
    docker:
      - image: circleci/node:12.10

    steps:
      - package_cli:
          out_filename: "linux/salto"

  package_cli_osx:
    macos:
      xcode: "11.0"

    steps:
      - run:
          name: Install yarn
          command: npm i --g yarn

      - package_cli:
          out_filename: "osx/salto"

  package_vscode_extension:
    docker:
      - image: circleci/node:12.10

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Create a VSIX file
          command: yarn workspace salto-vscode package

      - upload_pkg:
          workspace_dir: salto-vscode
          out_filename: vscode/salto.vsix

  sync_s3_pkg_latest:
    docker:
      - image: circleci/python

    steps:
      - attach_workspace:
          at: .

      - set_s3_pkg_urls

      - aws-s3/sync:
          from: ${S3_PKG_HASH_PREFIX}/
          to: s3://${S3_PKG_BUCKET}/${CIRCLE_BRANCH}/latest/
          arguments: '--delete'

      - run:
          name: Create a marker file with the git hash
          command: touch ./PACKAGED_FROM.${PKG_PREFIX}

      - aws-s3/copy:
          from: ./PACKAGED_FROM.${PKG_PREFIX}
          to: s3://${S3_PKG_BUCKET}/${CIRCLE_BRANCH}/latest/


workflows:
  version: 2

  commit:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master

      - unittest:
          requires:
            - build

      - package_cli_windows:
          requires:
            - unittest

      - package_cli_linux:
          requires:
            - unittest

      - package_cli_osx:
          requires:
            - unittest

      - package_vscode_extension:
          requires:
            - unittest

      - sync_s3_pkg_latest:
          requires:
            - package_cli_windows
            - package_cli_linux
            - package_cli_osx
            - package_vscode_extension

  post-commit:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master

      - unittest:
          requires:
            - build

      - e2e_test:
          requires:
            - unittest

      - package_cli_windows:
          # Note: Temporarily removed requirement for e2e due to flaky e2e tests.
          requires:
            - build
          #   - e2e_test

      - package_cli_linux:
          # Note: Temporarily removed requirement for e2e due to flaky e2e tests.
          requires:
            - build
          #   - e2e_test

      - package_cli_osx:
          # Note: Temporarily removed requirement for e2e due to flaky e2e tests.
          requires:
            - build
          #   - e2e_test

      - package_vscode_extension:
          requires:
            - build
          #   - e2e_test

      - sync_s3_pkg_latest:
          requires:
            - package_cli_windows
            - package_cli_linux
            - package_cli_osx
            - package_vscode_extension
