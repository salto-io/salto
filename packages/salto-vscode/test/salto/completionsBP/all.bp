type vs_str is string {
    annotations {
        string label {

        }

        boolean _required {

        }
    }
}

type vs_num is number {
    annotations {
        string label {

        }
        number max_value {

        }
    }
}

type vs_bool is boolean {
    annotations {
        string label {

        }
    }
}

type vs_person {
    vs_str first_name {
        label = "First Name"
        _required = true  
    }
    vs_str last_name {
        label = "Last Name"
    }
    vs_num age {
        label = "Age"
        max_value = 99
    }
}

type vs_car {
    vs_person car_owner {

    }
    vs_str model {
        label = "Car Model"
        _required = false
    }
    vs_num year {
        label = "Year"
        max_value = 2020
    }
}

type vs_loan {
    vs_car propety {

    }
    vs_person loaner {
    
    }
    vs_str reason {
        label = "Why is the loan taking place"
    }
    vs_bool weekends_only {
        label = "Is the car loaned only in weekends"
    }
}

vs_person lavi {
    first_name = "Lavi"
    last_name = "Ronn Sharir"
    age = 4
}

vs_person evyatar {
    first_name = "Evyatar"
    last_name = "Ronn Sharir"
    age = 2
}

vs_loan weekend_car {
    reason = "She likes me. I brought her her first grandson."
    loaner = {
        first_name = "Roi"
        last_name = "Ronn"
        age = 35
    }
    propety = {
        car_owner = {
            first_name = "Ruth"
            last_name = "Ronn"
            age = 61
        }
        model = "Honda Jazz"
        year = 2016
    }
    weekends_only = true
    risk = "ticket"
}

vs_loan not_a_loan {
    nothing {
        attr = "value"
    }    
}

type vs_loan {
    vs_str risk {
        _restriction = {
            values = [
                "accident",
                "ticket",
                "to much fun"
            ]
        }
    }
}

type vs_person {
    list vs_str nicknames {

    }
}

vs_person hadar {
    first_name = "hadar"
    last_name = "sharir"
    nicknames = ["You", "would", "have", "loved", "to", "know", "wouldn't", "you"]
}

type vs_ref_tester {
    vs_str field_ref_simple {
        label = vs_weekend_car.reason
    }
    vs_str field_ref_nested {
        label = vs_weekend_car.propety.car_owner.first_name
    }
    vs_str anno_ref_simple {
        label = vs_loan.reason.label
    }
    vs_str in_string {
        label = "${vs_loan.reason.label}"
    }
    vs_str in_string_pre {
        label = "pre_${vs_loan.reason.label}"
    }
    vs_str in_string_space {
        label = "    ${vs_loan.reason.label}"
    }
    vs_str in_string_complex {
        label = "X X ${vs_loan.reason.label}"
    }
    vs_str anno_complex {
        label = vs_foo.fname.owner.first_name
    }
}

type vs_name is string {
    annotations {
        vs_person owner {

        }
    }

    owner {
        first_name = "Roi"
        last_name = "Ronn"
        age= 35
    }
}

type vs_foo {
    vs_name fname {
        owner = {
            first_name = "OK"
        }
    }
}
