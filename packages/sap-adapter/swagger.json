{
  "openapi": "3.0.1",
  "info": {
    "title": "Service for namespace MCMService",
    "description": "This service is located at [https://services.odata.org/service-root/](https://services.odata.org/service-root/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[MCMInstances{bg:dodgerblue}]++-*>[MCMInstances],[Differences2Predecessors{bg:dodgerblue}]++-*>[Differences2Predecessors],[DifferenceOnActors{bg:dodgerblue}]++-*>[DifferenceOnActors],[DifferenceOnMarketLocations{bg:dodgerblue}]++-*>[DifferenceOnMarketLocations],[DifferenceOnMeteringLocations{bg:dodgerblue}]++-*>[DifferenceOnMeteringLocations],[DifferenceOnAddresses{bg:dodgerblue}]++-*>[DifferenceOnAddresses],[MCMInstancesPD{bg:dodgerblue}]++-*>[MCMInstancesPD],[ObjectAddresses{bg:dodgerblue}]++-*>[ObjectAddresses],[MeteringLocations{bg:dodgerblue}]++-*>[MeteringLocations],[MeteringLocationsPD{bg:dodgerblue}]++-*>[MeteringLocationsPD],[MeteringTasks{bg:dodgerblue}]++-*>[MeteringTasks],[MeteringTasksPD{bg:dodgerblue}]++-*>[MeteringTasksPD],[MarketLocations{bg:dodgerblue}]++-*>[MarketLocations],[MarketLocationsPD{bg:dodgerblue}]++-*>[MarketLocationsPD],[MCIOperandMappings{bg:dodgerblue}]++-*>[MCIOperandMappings],[MCICalculationRules{bg:dodgerblue}]++-*>[MCICalculationRules],[MCICalculationRuleSteps{bg:dodgerblue}]++-*>[MCICalculationRuleSteps],[MCIMarketLocationUsages{bg:dodgerblue}]++-*>[MCIMarketLocationUsages],[Actors{bg:dodgerblue}]++-*>[Actors],[MCIMarketLocationActors{bg:dodgerblue}]++-*>[MCIMarketLocationActors],[ActorsPD{bg:dodgerblue}]++-*>[ActorsPD],[ActorsPDExternalReferences{bg:dodgerblue}]++-*>[ActorsPDExternalReferences],[CircuitPlanNodeConnections{bg:dodgerblue}]++-*>[CircuitPlanNodeConnections],[MCIErrors{bg:dodgerblue}]++-*>[MCIErrors],[MCIChangeProcesses{bg:dodgerblue}]++-*>[MCIChangeProcesses],[MCIInstanceCharacteristics{bg:dodgerblue}]++-*>[MCIInstanceCharacteristics],[MCIStatus{bg:dodgerblue}]++-*>[MCIStatus],[PowerRangeTypes{bg:dodgerblue}]++-*>[PowerRangeTypes],[EnergySourceTypes{bg:dodgerblue}]++-*>[EnergySourceTypes],[GridTypes{bg:dodgerblue}]++-*>[GridTypes],[ActorExternalReferenceTypes{bg:dodgerblue}]++-*>[ActorExternalReferenceTypes],[ExternalReferenceSystems{bg:dodgerblue}]++-*>[ExternalReferenceSystems],[MeasuringTypes{bg:dodgerblue}]++-*>[MeasuringTypes],[OrdererTypes{bg:dodgerblue}]++-*>[OrdererTypes],[MCMFormulaConfiguration{bg:dodgerblue}]++-*>[MCMFormulaConfiguration],[LocationStructureActors{bg:dodgerblue}]++-*>[LocationStructureActors],[LocationStructureMeteringLocations{bg:dodgerblue}]++-*>[LocationStructureMeteringLocations],[LocationStructureMeteringTasks{bg:dodgerblue}]++-*>[LocationStructureMeteringTasks],[MarketLocationStructure{bg:dodgerblue}]++-*>[MarketLocationStructure],[MeasurementConceptModels{bg:dodgerblue}]++-*>[MeasurementConceptModels],[MCDMarketLocations{bg:dodgerblue}]++-*>[MCDMarketLocations],[MCDOperandMappings{bg:dodgerblue}]++-*>[MCDOperandMappings],[MCDCalculationRules{bg:dodgerblue}]++-*>[MCDCalculationRules],[MCDMarketLocationActors{bg:dodgerblue}]++-*>[MCDMarketLocationActors],[MCDMarketLocationUsages{bg:dodgerblue}]++-*>[MCDMarketLocationUsages],[MCMFormulas{bg:dodgerblue}]++-*>[MCMFormulas],[MCMFormulaSteps{bg:dodgerblue}]++-*>[MCMFormulaSteps],[MeasurementConceptClasses{bg:dodgerblue}]++-*>[MeasurementConceptClasses],[MCCMeteringLocations{bg:dodgerblue}]++-*>[MCCMeteringLocations],[MCCMeteringTasks{bg:dodgerblue}]++-*>[MCCMeteringTasks],[MCCMeteringProcedures{bg:dodgerblue}]++-*>[MCCMeteringProcedures],[MCCActors{bg:dodgerblue}]++-*>[MCCActors],[InputMCMInstances{bg:dodgerblue}]++-*>[InputMCMInstances],[InputMCMInstancesPD{bg:dodgerblue}]++-*>[InputMCMInstancesPD],[InputMCIChangeProcesses{bg:dodgerblue}]++-*>[InputMCIChangeProcesses],[DivisionTypes{bg:dodgerblue}]++-*>[DivisionTypes],[MCIOverallStatusTypes{bg:dodgerblue}]++-*>[MCIOverallStatusTypes],[Countries{bg:dodgerblue}]++-*>[Countries],[MeteringLocationTypes{bg:dodgerblue}]++-*>[MeteringLocationTypes],[GridLevelTypes{bg:dodgerblue}]++-*>[GridLevelTypes],[MeteringLocationPurposeTypes{bg:dodgerblue}]++-*>[MeteringLocationPurposeTypes],[DirectionTypes{bg:dodgerblue}]++-*>[DirectionTypes],[MeteringTaskTypes{bg:dodgerblue}]++-*>[MeteringTaskTypes],[MeteringProcedureTypes{bg:dodgerblue}]++-*>[MeteringProcedureTypes],[MCIRateTypes{bg:dodgerblue}]++-*>[MCIRateTypes],[MarketLocationTypes{bg:dodgerblue}]++-*>[MarketLocationTypes],[ForecastBasisTypes{bg:dodgerblue}]++-*>[ForecastBasisTypes],[MCIFlatrateTypes{bg:dodgerblue}]++-*>[MCIFlatrateTypes],[MarketLocationUsageTypes{bg:dodgerblue}]++-*>[MarketLocationUsageTypes],[ActorTypes{bg:dodgerblue}]++-*>[ActorTypes],[ActorDirectionTypes{bg:dodgerblue}]++-*>[ActorDirectionTypes],[MCIProcessReasonTypes{bg:dodgerblue}]++-*>[MCIProcessReasonTypes],[MCIChangeProcessTypes{bg:dodgerblue}]++-*>[MCIChangeProcessTypes],[ConfigurableEntityTypes{bg:dodgerblue}]++-*>[ConfigurableEntityTypes],[ConfigurableCharacteristicTypes{bg:dodgerblue}]++-*>[ConfigurableCharacteristicTypes],[MCIStatusTypes{bg:dodgerblue}]++-*>[MCIStatusTypes],[MCIProcessStatusTypes{bg:dodgerblue}]++-*>[MCIProcessStatusTypes],[MCDModelTypes{bg:dodgerblue}]++-*>[MCDModelTypes],[MCDStatusTypes{bg:dodgerblue}]++-*>[MCDStatusTypes],[MCDRepeatableOperandMappings{bg:dodgerblue}]++-*>[MCDRepeatableOperandMappings],[MCDMeteringLocationPurposes{bg:dodgerblue}]++-*>[MCDMeteringLocationPurposes],[MCClassTypes{bg:dodgerblue}]++-*>[MCClassTypes],[MCCNodeConnections{bg:dodgerblue}]++-*>[MCCNodeConnections],[PowerRangeTypes_texts{bg:dodgerblue}]++-*>[PowerRangeTypes_texts],[EnergySourceTypes_texts{bg:dodgerblue}]++-*>[EnergySourceTypes_texts],[GridTypes_texts{bg:dodgerblue}]++-*>[GridTypes_texts],[ActorExternalReferenceTypes_texts{bg:dodgerblue}]++-*>[ActorExternalReferenceTypes_texts],[ExternalReferenceSystems_texts{bg:dodgerblue}]++-*>[ExternalReferenceSystems_texts],[MeasuringTypes_texts{bg:dodgerblue}]++-*>[MeasuringTypes_texts],[OrdererTypes_texts{bg:dodgerblue}]++-*>[OrdererTypes_texts],[MeasurementConceptModels_texts{bg:dodgerblue}]++-*>[MeasurementConceptModels_texts],[MeasurementConceptClasses_texts{bg:dodgerblue}]++-*>[MeasurementConceptClasses_texts],[MCCMeteringLocations_texts{bg:dodgerblue}]++-*>[MCCMeteringLocations_texts],[DivisionTypes_texts{bg:dodgerblue}]++-*>[DivisionTypes_texts],[MCIOverallStatusTypes_texts{bg:dodgerblue}]++-*>[MCIOverallStatusTypes_texts],[Countries_texts{bg:dodgerblue}]++-*>[Countries_texts],[MeteringLocationTypes_texts{bg:dodgerblue}]++-*>[MeteringLocationTypes_texts],[GridLevelTypes_texts{bg:dodgerblue}]++-*>[GridLevelTypes_texts],[MeteringLocationPurposeTypes_texts{bg:dodgerblue}]++-*>[MeteringLocationPurposeTypes_texts],[DirectionTypes_texts{bg:dodgerblue}]++-*>[DirectionTypes_texts],[MeteringTaskTypes_texts{bg:dodgerblue}]++-*>[MeteringTaskTypes_texts],[MeteringProcedureTypes_texts{bg:dodgerblue}]++-*>[MeteringProcedureTypes_texts],[MCIRateTypes_texts{bg:dodgerblue}]++-*>[MCIRateTypes_texts],[MarketLocationTypes_texts{bg:dodgerblue}]++-*>[MarketLocationTypes_texts],[ForecastBasisTypes_texts{bg:dodgerblue}]++-*>[ForecastBasisTypes_texts],[MCIFlatrateTypes_texts{bg:dodgerblue}]++-*>[MCIFlatrateTypes_texts],[MarketLocationUsageTypes_texts{bg:dodgerblue}]++-*>[MarketLocationUsageTypes_texts],[ActorTypes_texts{bg:dodgerblue}]++-*>[ActorTypes_texts],[ActorDirectionTypes_texts{bg:dodgerblue}]++-*>[ActorDirectionTypes_texts],[MCIProcessReasonTypes_texts{bg:dodgerblue}]++-*>[MCIProcessReasonTypes_texts],[MCIChangeProcessTypes_texts{bg:dodgerblue}]++-*>[MCIChangeProcessTypes_texts],[ConfigurableEntityTypes_texts{bg:dodgerblue}]++-*>[ConfigurableEntityTypes_texts],[ConfigurableCharacteristicTypes_texts{bg:dodgerblue}]++-*>[ConfigurableCharacteristicTypes_texts],[MCIStatusTypes_texts{bg:dodgerblue}]++-*>[MCIStatusTypes_texts],[MCIProcessStatusTypes_texts{bg:dodgerblue}]++-*>[MCIProcessStatusTypes_texts],[MCDModelTypes_texts{bg:dodgerblue}]++-*>[MCDModelTypes_texts],[MCDStatusTypes_texts{bg:dodgerblue}]++-*>[MCDStatusTypes_texts],[MCClassTypes_texts{bg:dodgerblue}]++-*>[MCClassTypes_texts],[MCMInstances{bg:orange}],[MCMInstances]-*>[MeteringLocations{bg:orange}],[MCMInstances]-*>[MarketLocations{bg:orange}],[MCMInstances]-*>[MCIOperandMappings{bg:orange}],[MCMInstances]-*>[Actors{bg:orange}],[MCMInstances]-0..1>[GridTypes{bg:orange}],[MCMInstances]-0..1>[DivisionTypes{bg:orange}],[MCMInstances]-0..1>[OrdererTypes{bg:orange}],[MCMInstances]-*>[ObjectAddresses{bg:orange}],[MCMInstances]-0..1>[ObjectAddresses{bg:orange}],[MCMInstances]-*>[MCIChangeProcesses{bg:orange}],[MCMInstances]-0..1>[MCMInstances{bg:orange}],[MCMInstances]-0..1>[Differences2Predecessors{bg:orange}],[MCMInstances]-0..1>[MeasurementConceptModels{bg:orange}],[MCMInstances]-0..1>[MeasurementConceptClasses{bg:orange}],[MCMInstances]-0..1>[MCIOverallStatusTypes{bg:orange}],[MCMInstances]-0..1>[MCIStatus{bg:orange}],[Differences2Predecessors{bg:orange}],[Differences2Predecessors]-0..1>[MCMInstances{bg:orange}],[Differences2Predecessors]-0..1>[MCMInstances{bg:orange}],[Differences2Predecessors]-0..1>[DifferenceOnActors{bg:orange}],[Differences2Predecessors]-0..1>[DifferenceOnMarketLocations{bg:orange}],[Differences2Predecessors]-0..1>[DifferenceOnMeteringLocations{bg:orange}],[Differences2Predecessors]-0..1>[DifferenceOnAddresses{bg:orange}],[DifferenceOnActors{bg:orange}],[DifferenceOnActors]-0..1>[MCMInstances{bg:orange}],[DifferenceOnActors]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference],[DifferenceOnActors]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference],[DifferenceOnActors]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference],[DifferenceOnActors]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference],[DifferenceOnActors]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference],[DifferenceOnMarketLocations{bg:orange}],[DifferenceOnMarketLocations]-0..1>[MCMInstances{bg:orange}],[DifferenceOnMarketLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference],[DifferenceOnMarketLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference],[DifferenceOnMarketLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference],[DifferenceOnMarketLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference],[DifferenceOnMarketLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference],[DifferenceOnMeteringLocations{bg:orange}],[DifferenceOnMeteringLocations]-0..1>[MCMInstances{bg:orange}],[DifferenceOnMeteringLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference],[DifferenceOnMeteringLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference],[DifferenceOnMeteringLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference],[DifferenceOnMeteringLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference],[DifferenceOnMeteringLocations]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference],[DifferenceOnAddresses{bg:orange}],[DifferenceOnAddresses]-0..1>[MCMInstances{bg:orange}],[DifferenceOnAddresses]++-*[DifferenceOnAddresses_added],[DifferenceOnAddresses]++-*[DifferenceOnAddresses_changed],[DifferenceOnAddresses]++-*[DifferenceOnAddresses_deleted],[DifferenceOnAddresses]++-*[DifferenceOnAddresses_unchanged],[DifferenceOnAddresses]++-*[DifferenceOnAddresses_ambiguous],[MCMInstancesPD{bg:orange}],[MCMInstancesPD]->[MCIChangeProcesses{bg:orange}],[MCMInstancesPD]-*>[MeteringLocationsPD{bg:orange}],[MCMInstancesPD]-*>[MarketLocationsPD{bg:orange}],[MCMInstancesPD]-*>[ActorsPD{bg:orange}],[ObjectAddresses{bg:orange}],[ObjectAddresses]->[MCMInstances{bg:orange}],[ObjectAddresses]-0..1>[Countries{bg:orange}],[MeteringLocations{bg:orange}],[MeteringLocations]->[MCMInstances{bg:orange}],[MeteringLocations]-0..1>[MeteringLocationTypes{bg:orange}],[MeteringLocations]-0..1>[MCCMeteringLocations{bg:orange}],[MeteringLocations]-0..1>[GridTypes{bg:orange}],[MeteringLocations]-0..1>[GridLevelTypes{bg:orange}],[MeteringLocations]-0..1>[ObjectAddresses{bg:orange}],[MeteringLocations]-0..1>[MeteringLocationPurposeTypes{bg:orange}],[MeteringLocations]-*>[MeteringTasks{bg:orange}],[MeteringLocations]-*>[CircuitPlanNodeConnections{bg:orange}],[MeteringLocations]-*>[CircuitPlanNodeConnections{bg:orange}],[MeteringLocationsPD{bg:orange}],[MeteringLocationsPD]->[MCMInstancesPD{bg:orange}],[MeteringLocationsPD]-0..1>[MeteringLocations{bg:orange}],[MeteringLocationsPD]-0..1>[MeasuringTypes{bg:orange}],[MeteringLocationsPD]-*>[MeteringTasksPD{bg:orange}],[MeteringTasks{bg:orange}],[MeteringTasks]->[MeteringLocations{bg:orange}],[MeteringTasks]-0..1>[DirectionTypes{bg:orange}],[MeteringTasks]-0..1>[MeteringTaskTypes{bg:orange}],[MeteringTasks]-0..1>[MCCMeteringTasks{bg:orange}],[MeteringTasks]-0..1>[MeteringProcedureTypes{bg:orange}],[MeteringTasksPD{bg:orange}],[MeteringTasksPD]->[MeteringLocationsPD{bg:orange}],[MeteringTasksPD]-0..1>[MeteringTasks{bg:orange}],[MeteringTasksPD]-0..1>[MCIRateTypes{bg:orange}],[MarketLocations{bg:orange}],[MarketLocations]->[MCMInstances{bg:orange}],[MarketLocations]-0..1>[MarketLocationTypes{bg:orange}],[MarketLocations]-0..1>[DirectionTypes{bg:orange}],[MarketLocations]-0..1>[MCDMarketLocations{bg:orange}],[MarketLocations]-*>[MCICalculationRules{bg:orange}],[MarketLocations]-*>[Actors{bg:orange}],[MarketLocations]-*>[MCIMarketLocationActors{bg:orange}],[MarketLocations]-0..1>[ObjectAddresses{bg:orange}],[MarketLocationsPD{bg:orange}],[MarketLocationsPD]->[MCMInstancesPD{bg:orange}],[MarketLocationsPD]-0..1>[MarketLocations{bg:orange}],[MarketLocationsPD]-0..1>[ForecastBasisTypes{bg:orange}],[MarketLocationsPD]-0..1>[MCIFlatrateTypes{bg:orange}],[MCIOperandMappings{bg:orange}],[MCIOperandMappings]->[MCMInstances{bg:orange}],[MCIOperandMappings]-0..1>[MeteringTasks{bg:orange}],[MCICalculationRules{bg:orange}],[MCICalculationRules]->[MarketLocations{bg:orange}],[MCICalculationRules]-0..1>[MeteringProcedureTypes{bg:orange}],[MCICalculationRules]-0..1>[MCDCalculationRules{bg:orange}],[MCICalculationRules]-*>[MCICalculationRuleSteps{bg:orange}],[MCICalculationRules]-*>[MCIMarketLocationUsages{bg:orange}],[MCICalculationRuleSteps{bg:orange}],[MCICalculationRuleSteps]-0..1>[MeteringTasks{bg:orange}],[MCIMarketLocationUsages{bg:orange}],[MCIMarketLocationUsages]->[MCICalculationRules{bg:orange}],[MCIMarketLocationUsages]-0..1>[MarketLocationUsageTypes{bg:orange}],[Actors{bg:orange}],[Actors]->[MCMInstances{bg:orange}],[Actors]-0..1>[ActorTypes{bg:orange}],[Actors]-0..1>[ActorDirectionTypes{bg:orange}],[Actors]-0..1>[MCCActors{bg:orange}],[Actors]-0..1>[PowerRangeTypes{bg:orange}],[Actors]-*>[CircuitPlanNodeConnections{bg:orange}],[Actors]-*>[CircuitPlanNodeConnections{bg:orange}],[Actors]-0..1>[MarketLocations{bg:orange}],[Actors]-*>[MCIMarketLocationActors{bg:orange}],[Actors]-0..1>[EnergySourceTypes{bg:orange}],[Actors]-0..1>[ObjectAddresses{bg:orange}],[Actors]-0..1>[GridLevelTypes{bg:orange}],[MCIMarketLocationActors{bg:orange}],[MCIMarketLocationActors]->[Actors{bg:orange}],[MCIMarketLocationActors]->[MarketLocations{bg:orange}],[ActorsPD{bg:orange}],[ActorsPD]->[MCMInstancesPD{bg:orange}],[ActorsPD]->[Actors{bg:orange}],[ActorsPD]-*>[ActorsPDExternalReferences{bg:orange}],[ActorsPDExternalReferences{bg:orange}],[ActorsPDExternalReferences]->[ActorsPD{bg:orange}],[ActorsPDExternalReferences]-0..1>[ActorExternalReferenceTypes{bg:orange}],[ActorsPDExternalReferences]-0..1>[ExternalReferenceSystems{bg:orange}],[CircuitPlanNodeConnections{bg:orange}],[CircuitPlanNodeConnections]-0..1>[Actors{bg:orange}],[CircuitPlanNodeConnections]-0..1>[MeteringLocations{bg:orange}],[CircuitPlanNodeConnections]-0..1>[Actors{bg:orange}],[CircuitPlanNodeConnections]-0..1>[MeteringLocations{bg:orange}],[MCIErrors{bg:orange}],[MCIErrors]->[MCIStatus{bg:orange}],[MCIChangeProcesses{bg:orange}],[MCIChangeProcesses]->[MCMInstances{bg:orange}],[MCIChangeProcesses]-0..1>[MCIProcessReasonTypes{bg:orange}],[MCIChangeProcesses]-0..1>[MCIChangeProcessTypes{bg:orange}],[MCIChangeProcesses]-0..1>[MCIStatus{bg:orange}],[MCIChangeProcesses]-0..1>[MCMInstancesPD{bg:orange}],[MCIChangeProcesses]-*>[MCIInstanceCharacteristics{bg:orange}],[MCIInstanceCharacteristics{bg:orange}],[MCIInstanceCharacteristics]->[MCIChangeProcesses{bg:orange}],[MCIInstanceCharacteristics]-0..1>[ConfigurableEntityTypes{bg:orange}],[MCIInstanceCharacteristics]-0..1>[ConfigurableCharacteristicTypes{bg:orange}],[MCIStatus{bg:orange}],[MCIStatus]-0..1>[MCIChangeProcesses{bg:orange}],[MCIStatus]->[MCIStatusTypes{bg:orange}],[MCIStatus]->[MCIProcessStatusTypes{bg:orange}],[MCIStatus]-*>[MCIErrors{bg:orange}],[PowerRangeTypes{bg:orange}],[PowerRangeTypes]-*>[PowerRangeTypes_texts{bg:orange}],[PowerRangeTypes]-0..1>[PowerRangeTypes_texts{bg:orange}],[EnergySourceTypes{bg:orange}],[EnergySourceTypes]-*>[EnergySourceTypes_texts{bg:orange}],[EnergySourceTypes]-0..1>[EnergySourceTypes_texts{bg:orange}],[GridTypes{bg:orange}],[GridTypes]-*>[GridTypes_texts{bg:orange}],[GridTypes]-0..1>[GridTypes_texts{bg:orange}],[ActorExternalReferenceTypes{bg:orange}],[ActorExternalReferenceTypes]-*>[ActorExternalReferenceTypes_texts{bg:orange}],[ActorExternalReferenceTypes]-0..1>[ActorExternalReferenceTypes_texts{bg:orange}],[ExternalReferenceSystems{bg:orange}],[ExternalReferenceSystems]-*>[ExternalReferenceSystems_texts{bg:orange}],[ExternalReferenceSystems]-0..1>[ExternalReferenceSystems_texts{bg:orange}],[MeasuringTypes{bg:orange}],[MeasuringTypes]-*>[MeasuringTypes_texts{bg:orange}],[MeasuringTypes]-0..1>[MeasuringTypes_texts{bg:orange}],[OrdererTypes{bg:orange}],[OrdererTypes]-*>[OrdererTypes_texts{bg:orange}],[OrdererTypes]-0..1>[OrdererTypes_texts{bg:orange}],[MCMFormulaConfiguration{bg:orange}],[MCMFormulaConfiguration]-*>[MCMFormulaSteps{bg:orange}],[LocationStructureActors{bg:orange}],[LocationStructureActors]-0..1>[MarketLocations{bg:orange}],[LocationStructureMeteringLocations{bg:orange}],[LocationStructureMeteringLocations]-*>[LocationStructureMeteringTasks{bg:orange}],[LocationStructureMeteringTasks{bg:orange}],[MarketLocationStructure{bg:orange}],[MarketLocationStructure]-0..1>[MarketLocationTypes{bg:orange}],[MarketLocationStructure]-0..1>[DirectionTypes{bg:orange}],[MarketLocationStructure]-*>[LocationStructureMeteringLocations{bg:orange}],[MarketLocationStructure]-*>[LocationStructureActors{bg:orange}],[MeasurementConceptModels{bg:orange}],[MeasurementConceptModels]-0..1>[MCDModelTypes{bg:orange}],[MeasurementConceptModels]-0..1>[MeasurementConceptClasses{bg:orange}],[MeasurementConceptModels]-0..1>[MCDStatusTypes{bg:orange}],[MeasurementConceptModels]-0..1>[DivisionTypes{bg:orange}],[MeasurementConceptModels]-*>[MCDMarketLocations{bg:orange}],[MeasurementConceptModels]-*>[MCDOperandMappings{bg:orange}],[MeasurementConceptModels]-*>[MCDRepeatableOperandMappings{bg:orange}],[MeasurementConceptModels]-*>[MCDMeteringLocationPurposes{bg:orange}],[MeasurementConceptModels]-*>[MeasurementConceptModels_texts{bg:orange}],[MeasurementConceptModels]-0..1>[MeasurementConceptModels_texts{bg:orange}],[MCDMarketLocations{bg:orange}],[MCDMarketLocations]->[MeasurementConceptModels{bg:orange}],[MCDMarketLocations]-0..1>[MarketLocationTypes{bg:orange}],[MCDMarketLocations]-0..1>[DirectionTypes{bg:orange}],[MCDMarketLocations]-*>[MCDMarketLocationActors{bg:orange}],[MCDMarketLocations]-*>[MCDCalculationRules{bg:orange}],[MCDOperandMappings{bg:orange}],[MCDOperandMappings]->[MeasurementConceptModels{bg:orange}],[MCDOperandMappings]-0..1>[MCCMeteringTasks{bg:orange}],[MCDOperandMappings]-0..1>[MeteringTaskTypes{bg:orange}],[MCDOperandMappings]-0..1>[DirectionTypes{bg:orange}],[MCDCalculationRules{bg:orange}],[MCDCalculationRules]-0..1>[MCDMarketLocations{bg:orange}],[MCDCalculationRules]->[MeteringProcedureTypes{bg:orange}],[MCDCalculationRules]-0..1>[MCMFormulas{bg:orange}],[MCDCalculationRules]-*>[MCDMarketLocationUsages{bg:orange}],[MCDMarketLocationActors{bg:orange}],[MCDMarketLocationActors]->[MCDMarketLocations{bg:orange}],[MCDMarketLocationActors]->[MCCActors{bg:orange}],[MCDMarketLocationActors]-0..1>[ActorDirectionTypes{bg:orange}],[MCDMarketLocationActors]-0..1>[ActorTypes{bg:orange}],[MCDMarketLocationUsages{bg:orange}],[MCDMarketLocationUsages]->[MCDCalculationRules{bg:orange}],[MCDMarketLocationUsages]-0..1>[MarketLocationUsageTypes{bg:orange}],[MCMFormulas{bg:orange}],[MCMFormulas]-*>[MCMFormulaSteps{bg:orange}],[MCMFormulaSteps{bg:orange}],[MCMFormulaSteps]-0..1>[MCCMeteringTasks{bg:orange}],[MeasurementConceptClasses{bg:orange}],[MeasurementConceptClasses]-0..1>[MCClassTypes{bg:orange}],[MeasurementConceptClasses]-0..1>[DivisionTypes{bg:orange}],[MeasurementConceptClasses]-*>[MCCMeteringLocations{bg:orange}],[MeasurementConceptClasses]-*>[MCCActors{bg:orange}],[MeasurementConceptClasses]-*>[MeasurementConceptClasses_texts{bg:orange}],[MeasurementConceptClasses]-0..1>[MeasurementConceptClasses_texts{bg:orange}],[MCCMeteringLocations{bg:orange}],[MCCMeteringLocations]->[MeasurementConceptClasses{bg:orange}],[MCCMeteringLocations]-0..1>[MeteringLocationTypes{bg:orange}],[MCCMeteringLocations]-*>[MCCMeteringTasks{bg:orange}],[MCCMeteringLocations]-*>[MCCNodeConnections{bg:orange}],[MCCMeteringLocations]-*>[MCCNodeConnections{bg:orange}],[MCCMeteringLocations]-*>[MCCMeteringLocations_texts{bg:orange}],[MCCMeteringLocations]-0..1>[MCCMeteringLocations_texts{bg:orange}],[MCCMeteringTasks{bg:orange}],[MCCMeteringTasks]->[MCCMeteringLocations{bg:orange}],[MCCMeteringTasks]-0..1>[MeteringTaskTypes{bg:orange}],[MCCMeteringTasks]-*>[MCCMeteringProcedures{bg:orange}],[MCCMeteringTasks]-0..1>[DirectionTypes{bg:orange}],[MCCMeteringProcedures{bg:orange}],[MCCMeteringProcedures]-0..1>[MCCMeteringTasks{bg:orange}],[MCCMeteringProcedures]-0..1>[MeteringProcedureTypes{bg:orange}],[MCCActors{bg:orange}],[MCCActors]->[MeasurementConceptClasses{bg:orange}],[MCCActors]-0..1>[ActorTypes{bg:orange}],[MCCActors]-0..1>[ActorDirectionTypes{bg:orange}],[MCCActors]-0..1>[EnergySourceTypes{bg:orange}],[MCCActors]-0..1>[PowerRangeTypes{bg:orange}],[MCCActors]-*>[MCDMarketLocationActors{bg:orange}],[MCCActors]-*>[MCCNodeConnections{bg:orange}],[MCCActors]-*>[MCCNodeConnections{bg:orange}],[InputMCMInstances{bg:orange}],[InputMCMInstances]-*>[ObjectAddresses{bg:orange}],[InputMCMInstances]-0..1>[MeasurementConceptModels{bg:orange}],[InputMCMInstances]-0..1>[MeasurementConceptClasses{bg:orange}],[InputMCMInstances]-0..1>[DivisionTypes{bg:orange}],[InputMCMInstances]-*>[InputMCIChangeProcesses{bg:orange}],[InputMCMInstancesPD{bg:orange}],[InputMCMInstancesPD]->[MCIChangeProcesses{bg:orange}],[InputMCIChangeProcesses{bg:orange}],[InputMCIChangeProcesses]->[MCMInstances{bg:orange}],[InputMCIChangeProcesses]-0..1>[MCIProcessReasonTypes{bg:orange}],[InputMCIChangeProcesses]-0..1>[InputMCMInstancesPD{bg:orange}],[InputMCIChangeProcesses]-*>[MCIInstanceCharacteristics{bg:orange}],[DivisionTypes{bg:orange}],[DivisionTypes]-*>[DivisionTypes_texts{bg:orange}],[DivisionTypes]-0..1>[DivisionTypes_texts{bg:orange}],[MCIOverallStatusTypes{bg:orange}],[MCIOverallStatusTypes]-*>[MCIOverallStatusTypes_texts{bg:orange}],[MCIOverallStatusTypes]-0..1>[MCIOverallStatusTypes_texts{bg:orange}],[Countries{bg:orange}],[Countries]-*>[Countries_texts{bg:orange}],[Countries]-0..1>[Countries_texts{bg:orange}],[MeteringLocationTypes{bg:orange}],[MeteringLocationTypes]-*>[MeteringLocationTypes_texts{bg:orange}],[MeteringLocationTypes]-0..1>[MeteringLocationTypes_texts{bg:orange}],[GridLevelTypes{bg:orange}],[GridLevelTypes]-*>[GridLevelTypes_texts{bg:orange}],[GridLevelTypes]-0..1>[GridLevelTypes_texts{bg:orange}],[MeteringLocationPurposeTypes{bg:orange}],[MeteringLocationPurposeTypes]-*>[MeteringLocationPurposeTypes_texts{bg:orange}],[MeteringLocationPurposeTypes]-0..1>[MeteringLocationPurposeTypes_texts{bg:orange}],[DirectionTypes{bg:orange}],[DirectionTypes]-*>[DirectionTypes_texts{bg:orange}],[DirectionTypes]-0..1>[DirectionTypes_texts{bg:orange}],[MeteringTaskTypes{bg:orange}],[MeteringTaskTypes]-0..1>[DivisionTypes{bg:orange}],[MeteringTaskTypes]-*>[MeteringTaskTypes_texts{bg:orange}],[MeteringTaskTypes]-0..1>[MeteringTaskTypes_texts{bg:orange}],[MeteringProcedureTypes{bg:orange}],[MeteringProcedureTypes]-*>[MeteringProcedureTypes_texts{bg:orange}],[MeteringProcedureTypes]-0..1>[MeteringProcedureTypes_texts{bg:orange}],[MCIRateTypes{bg:orange}],[MCIRateTypes]-*>[MCIRateTypes_texts{bg:orange}],[MCIRateTypes]-0..1>[MCIRateTypes_texts{bg:orange}],[MarketLocationTypes{bg:orange}],[MarketLocationTypes]-*>[MarketLocationTypes_texts{bg:orange}],[MarketLocationTypes]-0..1>[MarketLocationTypes_texts{bg:orange}],[ForecastBasisTypes{bg:orange}],[ForecastBasisTypes]-*>[ForecastBasisTypes_texts{bg:orange}],[ForecastBasisTypes]-0..1>[ForecastBasisTypes_texts{bg:orange}],[MCIFlatrateTypes{bg:orange}],[MCIFlatrateTypes]-*>[MCIFlatrateTypes_texts{bg:orange}],[MCIFlatrateTypes]-0..1>[MCIFlatrateTypes_texts{bg:orange}],[MarketLocationUsageTypes{bg:orange}],[MarketLocationUsageTypes]-*>[MarketLocationUsageTypes_texts{bg:orange}],[MarketLocationUsageTypes]-0..1>[MarketLocationUsageTypes_texts{bg:orange}],[ActorTypes{bg:orange}],[ActorTypes]-*>[ActorTypes_texts{bg:orange}],[ActorTypes]-0..1>[ActorTypes_texts{bg:orange}],[ActorDirectionTypes{bg:orange}],[ActorDirectionTypes]-*>[ActorDirectionTypes_texts{bg:orange}],[ActorDirectionTypes]-0..1>[ActorDirectionTypes_texts{bg:orange}],[MCIProcessReasonTypes{bg:orange}],[MCIProcessReasonTypes]-*>[MCIProcessReasonTypes_texts{bg:orange}],[MCIProcessReasonTypes]-0..1>[MCIProcessReasonTypes_texts{bg:orange}],[MCIChangeProcessTypes{bg:orange}],[MCIChangeProcessTypes]-*>[MCIChangeProcessTypes_texts{bg:orange}],[MCIChangeProcessTypes]-0..1>[MCIChangeProcessTypes_texts{bg:orange}],[ConfigurableEntityTypes{bg:orange}],[ConfigurableEntityTypes]-*>[ConfigurableEntityTypes_texts{bg:orange}],[ConfigurableEntityTypes]-0..1>[ConfigurableEntityTypes_texts{bg:orange}],[ConfigurableCharacteristicTypes{bg:orange}],[ConfigurableCharacteristicTypes]-*>[ConfigurableCharacteristicTypes_texts{bg:orange}],[ConfigurableCharacteristicTypes]-0..1>[ConfigurableCharacteristicTypes_texts{bg:orange}],[MCIStatusTypes{bg:orange}],[MCIStatusTypes]-*>[MCIStatusTypes_texts{bg:orange}],[MCIStatusTypes]-0..1>[MCIStatusTypes_texts{bg:orange}],[MCIProcessStatusTypes{bg:orange}],[MCIProcessStatusTypes]-*>[MCIProcessStatusTypes_texts{bg:orange}],[MCIProcessStatusTypes]-0..1>[MCIProcessStatusTypes_texts{bg:orange}],[MCDModelTypes{bg:orange}],[MCDModelTypes]-*>[MCDModelTypes_texts{bg:orange}],[MCDModelTypes]-0..1>[MCDModelTypes_texts{bg:orange}],[MCDStatusTypes{bg:orange}],[MCDStatusTypes]-*>[MCDStatusTypes_texts{bg:orange}],[MCDStatusTypes]-0..1>[MCDStatusTypes_texts{bg:orange}],[MCDRepeatableOperandMappings{bg:orange}],[MCDRepeatableOperandMappings]->[MeasurementConceptModels{bg:orange}],[MCDRepeatableOperandMappings]-0..1>[MCCMeteringLocations{bg:orange}],[MCDMeteringLocationPurposes{bg:orange}],[MCDMeteringLocationPurposes]->[MeasurementConceptModels{bg:orange}],[MCDMeteringLocationPurposes]->[MCCMeteringLocations{bg:orange}],[MCDMeteringLocationPurposes]-0..1>[MeteringLocationPurposeTypes{bg:orange}],[MCClassTypes{bg:orange}],[MCClassTypes]-*>[MCClassTypes_texts{bg:orange}],[MCClassTypes]-0..1>[MCClassTypes_texts{bg:orange}],[MCCNodeConnections{bg:orange}],[MCCNodeConnections]-0..1>[MCCActors{bg:orange}],[MCCNodeConnections]-0..1>[MCCMeteringLocations{bg:orange}],[MCCNodeConnections]-0..1>[MCCActors{bg:orange}],[MCCNodeConnections]-0..1>[MCCMeteringLocations{bg:orange}],[PowerRangeTypes_texts{bg:orange}],[EnergySourceTypes_texts{bg:orange}],[GridTypes_texts{bg:orange}],[ActorExternalReferenceTypes_texts{bg:orange}],[ExternalReferenceSystems_texts{bg:orange}],[MeasuringTypes_texts{bg:orange}],[OrdererTypes_texts{bg:orange}],[MeasurementConceptModels_texts{bg:orange}],[MeasurementConceptClasses_texts{bg:orange}],[MCCMeteringLocations_texts{bg:orange}],[DivisionTypes_texts{bg:orange}],[MCIOverallStatusTypes_texts{bg:orange}],[Countries_texts{bg:orange}],[MeteringLocationTypes_texts{bg:orange}],[GridLevelTypes_texts{bg:orange}],[MeteringLocationPurposeTypes_texts{bg:orange}],[DirectionTypes_texts{bg:orange}],[MeteringTaskTypes_texts{bg:orange}],[MeteringProcedureTypes_texts{bg:orange}],[MCIRateTypes_texts{bg:orange}],[MarketLocationTypes_texts{bg:orange}],[ForecastBasisTypes_texts{bg:orange}],[MCIFlatrateTypes_texts{bg:orange}],[MarketLocationUsageTypes_texts{bg:orange}],[ActorTypes_texts{bg:orange}],[ActorDirectionTypes_texts{bg:orange}],[MCIProcessReasonTypes_texts{bg:orange}],[MCIChangeProcessTypes_texts{bg:orange}],[ConfigurableEntityTypes_texts{bg:orange}],[ConfigurableCharacteristicTypes_texts{bg:orange}],[MCIStatusTypes_texts{bg:orange}],[MCIProcessStatusTypes_texts{bg:orange}],[MCDModelTypes_texts{bg:orange}],[MCDStatusTypes_texts{bg:orange}],[MCClassTypes_texts{bg:orange}],[ProcessProgress],[ProcessProgress]++-0..1[ProcessProgressStatus],[ProcessProgress]++-0..1[ProcessProgressStatus],[ProcessProgress]++-*[ProcessProgressFailedValidation],[ProcessProgressStatus],[ProcessProgressFailedValidation],[sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference]++-0..1[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference]++-0..1[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference]++-0..1[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences]++-*[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference],[sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference],[DifferenceOnAddresses_added],[DifferenceOnAddresses_added]-0..1>[Countries{bg:orange}],[DifferenceOnAddresses_changed],[DifferenceOnAddresses_changed]-0..1>[Countries{bg:orange}],[DifferenceOnAddresses_deleted],[DifferenceOnAddresses_deleted]-0..1>[Countries{bg:orange}],[DifferenceOnAddresses_unchanged],[DifferenceOnAddresses_unchanged]-0..1>[Countries{bg:orange}],[DifferenceOnAddresses_ambiguous],[DifferenceOnAddresses_ambiguous]-0..1>[Countries{bg:orange}])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:orange}],[EntitySet/Singleton/Operation{bg:dodgerblue}])",
    "version": ""
  },
  "servers": [
    {
      "url": "https://services.odata.org/service-root"
    }
  ],
  "paths": {
    "/MCMInstances": {
      "get": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Get entities from MCMInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "idText",
                  "idText desc",
                  "version",
                  "version desc",
                  "description",
                  "description desc",
                  "leadingGrid_code",
                  "leadingGrid_code desc",
                  "division_code",
                  "division_code desc",
                  "orderer_code",
                  "orderer_code desc",
                  "leadingAddress_id",
                  "leadingAddress_id desc",
                  "predecessor_id",
                  "predecessor_id desc",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "difference2Predecessor_measurementConceptInstance_id desc",
                  "measurementModel_id",
                  "measurementModel_id desc",
                  "measurementClass_id",
                  "measurementClass_id desc",
                  "overallStatus_code",
                  "overallStatus_code desc",
                  "status_id",
                  "status_id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "installedOn",
                  "installedOn desc",
                  "installedUntil",
                  "installedUntil desc",
                  "commercialSetupOn",
                  "commercialSetupOn desc",
                  "physicalShutdownOn",
                  "physicalShutdownOn desc",
                  "commercialShutdownOn",
                  "commercialShutdownOn desc",
                  "deviceInstallationsReady",
                  "deviceInstallationsReady desc",
                  "marketLocationsComplete",
                  "marketLocationsComplete desc",
                  "allDevicesRemoved",
                  "allDevicesRemoved desc",
                  "allMarketLocationsRemoved",
                  "allMarketLocationsRemoved desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMInstances",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMInstances"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Add new entity to MCMInstances",
        "requestBody": {
          "description": "Measurement Concept Instance / Messkonzept Instanz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})": {
      "get": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Get entity from MCMInstances by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Update entity in MCMInstances",
        "requestBody": {
          "description": "Measurement Concept Instance / Messkonzept Instanz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCMInstances-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/MCMService.getLocationStructure()": {
      "get": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke function getLocationStructure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationStructure",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationStructure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.checkProgress()": {
      "get": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke function checkProgress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.ProcessProgress"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.initChange": {
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke action initChange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataForNewInstanceVersion": {
                    "title": "Measurement Concept Instance / Messkonzept Instanz",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/MCMService.InputMCMInstances"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstances"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.initShutdown": {
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke action initShutdown",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataForNewInstanceVersion": {
                    "title": "Measurement Concept Instance / Messkonzept Instanz",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/MCMService.InputMCMInstances"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstances"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.notifyAllDeviceInstallationsReady": {
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke action notifyAllDeviceInstallationsReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstances"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.notifyAllMarketLocationsComplete": {
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke action notifyAllMarketLocationsComplete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstances"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.notifyAllDevicesRemoved": {
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke action notifyAllDevicesRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstances"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/MCMService.notifyAllMarketLocationsRemoved": {
      "post": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Invoke action notifyAllMarketLocationsRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstances"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstances({id})/meteringLocations": {
      "get": {
        "tags": [
          "MCMInstances",
          "MeteringLocations"
        ],
        "summary": "Get entities from related meteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "position",
                  "position desc",
                  "modelMeteringLocation_id",
                  "modelMeteringLocation_id desc",
                  "meteringLocationId",
                  "meteringLocationId desc",
                  "grid_code",
                  "grid_code desc",
                  "altitude",
                  "altitude desc",
                  "gridLevel_code",
                  "gridLevel_code desc",
                  "address_id",
                  "address_id desc",
                  "lossTransformerSupply",
                  "lossTransformerSupply desc",
                  "lossLineSupply",
                  "lossLineSupply desc",
                  "lossTransformerDemand",
                  "lossTransformerDemand desc",
                  "lossLineDemand",
                  "lossLineDemand desc",
                  "meteringLocationPurpose_code",
                  "meteringLocationPurpose_code desc",
                  "disconnectable",
                  "disconnectable desc",
                  "transformerRequired",
                  "transformerRequired desc",
                  "deviceSerialId",
                  "deviceSerialId desc",
                  "removalDate",
                  "removalDate desc",
                  "locationRemoved",
                  "locationRemoved desc",
                  "installationDate",
                  "installationDate desc",
                  "locationInstalled",
                  "locationInstalled desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstances",
          "MeteringLocations"
        ],
        "summary": "Add new entity to related meteringLocations",
        "requestBody": {
          "description": "MCM Instance Metering Locations / MKV Instanz Messlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/marketLocations": {
      "get": {
        "tags": [
          "MCMInstances",
          "MarketLocations"
        ],
        "summary": "Get entities from related marketLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "modelMarketLocation_id",
                  "modelMarketLocation_id desc",
                  "marketLocationId",
                  "marketLocationId desc",
                  "virtualMarketLocation",
                  "virtualMarketLocation desc",
                  "address_id",
                  "address_id desc",
                  "billingProcedure",
                  "billingProcedure desc",
                  "settlementProcedure",
                  "settlementProcedure desc",
                  "removalDate",
                  "removalDate desc",
                  "locationRemoved",
                  "locationRemoved desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "locationComplete",
                  "locationComplete desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstances",
          "MarketLocations"
        ],
        "summary": "Add new entity to related marketLocations",
        "requestBody": {
          "description": "MCM Instance Market Locations / MKV Instanz Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocations-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/operandMappings": {
      "get": {
        "tags": [
          "MCMInstances",
          "MCIOperandMappings"
        ],
        "summary": "Get entities from related operandMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "operand",
                  "operand desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "operand",
                  "meteringTask_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIOperandMappings",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIOperandMappings"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/actors": {
      "get": {
        "tags": [
          "MCMInstances",
          "Actors"
        ],
        "summary": "Get entities from related actors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "modelActor_id",
                  "modelActor_id desc",
                  "powerRange_code",
                  "powerRange_code desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "energySource_code",
                  "energySource_code desc",
                  "address_id",
                  "address_id desc",
                  "gridLevel_code",
                  "gridLevel_code desc",
                  "isOwnConsumption",
                  "isOwnConsumption desc",
                  "installationDate",
                  "installationDate desc",
                  "actorInstalled",
                  "actorInstalled desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "actorComplete",
                  "actorComplete desc",
                  "removalDate",
                  "removalDate desc",
                  "actorRemoved",
                  "actorRemoved desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Actors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Actors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstances",
          "Actors"
        ],
        "summary": "Add new entity to related actors",
        "requestBody": {
          "description": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Actors-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/leadingGrid": {
      "get": {
        "tags": [
          "MCMInstances",
          "GridTypes"
        ],
        "summary": "Get related leadingGrid",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/division": {
      "get": {
        "tags": [
          "MCMInstances",
          "DivisionTypes"
        ],
        "summary": "Get related division",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/orderer": {
      "get": {
        "tags": [
          "MCMInstances",
          "OrdererTypes"
        ],
        "summary": "Get related orderer",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/addresses": {
      "get": {
        "tags": [
          "MCMInstances",
          "ObjectAddresses"
        ],
        "summary": "Get entities from related addresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "country_code",
                  "country_code desc",
                  "cityID",
                  "cityID desc",
                  "cityName",
                  "cityName desc",
                  "postalCode",
                  "postalCode desc",
                  "streetID",
                  "streetID desc",
                  "streetName",
                  "streetName desc",
                  "houseNumber",
                  "houseNumber desc",
                  "floorNumber",
                  "floorNumber desc",
                  "supplement",
                  "supplement desc",
                  "houseNumberSupplement",
                  "houseNumberSupplement desc",
                  "latitude",
                  "latitude desc",
                  "longitude",
                  "longitude desc",
                  "cityDistrict",
                  "cityDistrict desc",
                  "timeZone",
                  "timeZone desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ObjectAddresses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstances",
          "ObjectAddresses"
        ],
        "summary": "Add new entity to related addresses",
        "requestBody": {
          "description": "MCM Instance Object Addresses - Virtual fields for instance ui",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/leadingAddress": {
      "get": {
        "tags": [
          "MCMInstances",
          "ObjectAddresses"
        ],
        "summary": "Get related leadingAddress",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/changeProcesses": {
      "get": {
        "tags": [
          "MCMInstances",
          "MCIChangeProcesses"
        ],
        "summary": "Get entities from related changeProcesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "externalOrderId",
                  "externalOrderId desc",
                  "externalProcessId",
                  "externalProcessId desc",
                  "processReason_code",
                  "processReason_code desc",
                  "processType_code",
                  "processType_code desc",
                  "status_id",
                  "status_id desc",
                  "finished",
                  "finished desc",
                  "modifiedAt",
                  "modifiedAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIChangeProcesses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstances",
          "MCIChangeProcesses"
        ],
        "summary": "Add new entity to related changeProcesses",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/predecessor": {
      "get": {
        "tags": [
          "MCMInstances"
        ],
        "summary": "Get related predecessor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/difference2Predecessor": {
      "get": {
        "tags": [
          "MCMInstances",
          "Differences2Predecessors"
        ],
        "summary": "Get related difference2Predecessor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "calculatedAt",
                  "predecessor_id",
                  "actors_measurementConceptInstance_id",
                  "marketLocations_measurementConceptInstance_id",
                  "meteringLocations_measurementConceptInstance_id",
                  "addresses_measurementConceptInstance_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "predecessor",
                  "actors",
                  "marketLocations",
                  "meteringLocations",
                  "addresses"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Differences2Predecessors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/measurementModel": {
      "get": {
        "tags": [
          "MCMInstances",
          "MeasurementConceptModels"
        ],
        "summary": "Get related measurementModel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/measurementClass": {
      "get": {
        "tags": [
          "MCMInstances",
          "MeasurementConceptClasses"
        ],
        "summary": "Get related measurementClass",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/overallStatus": {
      "get": {
        "tags": [
          "MCMInstances",
          "MCIOverallStatusTypes"
        ],
        "summary": "Get related overallStatus",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstances({id})/status": {
      "get": {
        "tags": [
          "MCMInstances",
          "MCIStatus"
        ],
        "summary": "Get related status",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "instanceStatus_code",
                  "processStatus_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "instanceStatus",
                  "processStatus",
                  "errors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatus"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors": {
      "get": {
        "tags": [
          "Differences2Predecessors"
        ],
        "summary": "Get entities from Differences2Predecessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "calculatedAt",
                  "calculatedAt desc",
                  "predecessor_id",
                  "predecessor_id desc",
                  "actors_measurementConceptInstance_id",
                  "actors_measurementConceptInstance_id desc",
                  "marketLocations_measurementConceptInstance_id",
                  "marketLocations_measurementConceptInstance_id desc",
                  "meteringLocations_measurementConceptInstance_id",
                  "meteringLocations_measurementConceptInstance_id desc",
                  "addresses_measurementConceptInstance_id",
                  "addresses_measurementConceptInstance_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "calculatedAt",
                  "predecessor_id",
                  "actors_measurementConceptInstance_id",
                  "marketLocations_measurementConceptInstance_id",
                  "meteringLocations_measurementConceptInstance_id",
                  "addresses_measurementConceptInstance_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "predecessor",
                  "actors",
                  "marketLocations",
                  "meteringLocations",
                  "addresses"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Differences2Predecessors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Differences2Predecessors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Differences2Predecessors({measurementConceptInstance_id})": {
      "get": {
        "tags": [
          "Differences2Predecessors"
        ],
        "summary": "Get entity from Differences2Predecessors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "calculatedAt",
                  "predecessor_id",
                  "actors_measurementConceptInstance_id",
                  "marketLocations_measurementConceptInstance_id",
                  "meteringLocations_measurementConceptInstance_id",
                  "addresses_measurementConceptInstance_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "predecessor",
                  "actors",
                  "marketLocations",
                  "meteringLocations",
                  "addresses"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Differences2Predecessors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors({measurementConceptInstance_id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "Differences2Predecessors",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors({measurementConceptInstance_id})/predecessor": {
      "get": {
        "tags": [
          "Differences2Predecessors",
          "MCMInstances"
        ],
        "summary": "Get related predecessor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors({measurementConceptInstance_id})/actors": {
      "get": {
        "tags": [
          "Differences2Predecessors",
          "DifferenceOnActors"
        ],
        "summary": "Get related actors",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors({measurementConceptInstance_id})/marketLocations": {
      "get": {
        "tags": [
          "Differences2Predecessors",
          "DifferenceOnMarketLocations"
        ],
        "summary": "Get related marketLocations",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnMarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors({measurementConceptInstance_id})/meteringLocations": {
      "get": {
        "tags": [
          "Differences2Predecessors",
          "DifferenceOnMeteringLocations"
        ],
        "summary": "Get related meteringLocations",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Differences2Predecessors({measurementConceptInstance_id})/addresses": {
      "get": {
        "tags": [
          "Differences2Predecessors",
          "DifferenceOnAddresses"
        ],
        "summary": "Get related addresses",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnActors": {
      "get": {
        "tags": [
          "DifferenceOnActors"
        ],
        "summary": "Get entities from DifferenceOnActors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "added",
                  "added desc",
                  "changed",
                  "changed desc",
                  "deleted",
                  "deleted desc",
                  "unchanged",
                  "unchanged desc",
                  "ambiguous",
                  "ambiguous desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DifferenceOnActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DifferenceOnActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DifferenceOnActors({measurementConceptInstance_id})": {
      "get": {
        "tags": [
          "DifferenceOnActors"
        ],
        "summary": "Get entity from DifferenceOnActors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnActors({measurementConceptInstance_id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "DifferenceOnActors",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnMarketLocations": {
      "get": {
        "tags": [
          "DifferenceOnMarketLocations"
        ],
        "summary": "Get entities from DifferenceOnMarketLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "added",
                  "added desc",
                  "changed",
                  "changed desc",
                  "deleted",
                  "deleted desc",
                  "unchanged",
                  "unchanged desc",
                  "ambiguous",
                  "ambiguous desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DifferenceOnMarketLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DifferenceOnMarketLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DifferenceOnMarketLocations({measurementConceptInstance_id})": {
      "get": {
        "tags": [
          "DifferenceOnMarketLocations"
        ],
        "summary": "Get entity from DifferenceOnMarketLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnMarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnMarketLocations({measurementConceptInstance_id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "DifferenceOnMarketLocations",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnMeteringLocations": {
      "get": {
        "tags": [
          "DifferenceOnMeteringLocations"
        ],
        "summary": "Get entities from DifferenceOnMeteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "added",
                  "added desc",
                  "changed",
                  "changed desc",
                  "deleted",
                  "deleted desc",
                  "unchanged",
                  "unchanged desc",
                  "ambiguous",
                  "ambiguous desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DifferenceOnMeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DifferenceOnMeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DifferenceOnMeteringLocations({measurementConceptInstance_id})": {
      "get": {
        "tags": [
          "DifferenceOnMeteringLocations"
        ],
        "summary": "Get entity from DifferenceOnMeteringLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnMeteringLocations({measurementConceptInstance_id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "DifferenceOnMeteringLocations",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnAddresses": {
      "get": {
        "tags": [
          "DifferenceOnAddresses"
        ],
        "summary": "Get entities from DifferenceOnAddresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "added",
                  "added desc",
                  "changed",
                  "changed desc",
                  "deleted",
                  "deleted desc",
                  "unchanged",
                  "unchanged desc",
                  "ambiguous",
                  "ambiguous desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DifferenceOnAddresses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DifferenceOnAddresses({measurementConceptInstance_id})": {
      "get": {
        "tags": [
          "DifferenceOnAddresses"
        ],
        "summary": "Get entity from DifferenceOnAddresses by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "measurementConceptInstance_id",
                  "added",
                  "changed",
                  "deleted",
                  "unchanged",
                  "ambiguous"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DifferenceOnAddresses({measurementConceptInstance_id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "DifferenceOnAddresses",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "measurementConceptInstance_id",
          "in": "path",
          "description": "key: measurementConceptInstance_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstancesPD": {
      "get": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Get entities from MCMInstancesPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeProcess_id",
                  "changeProcess_id desc",
                  "customerRequestDate",
                  "customerRequestDate desc",
                  "subscriberId",
                  "subscriberId desc",
                  "leadingConnectionUser",
                  "leadingConnectionUser desc",
                  "leadingConnectionOwner",
                  "leadingConnectionOwner desc",
                  "note",
                  "note desc",
                  "initialDataEntryReady",
                  "initialDataEntryReady desc",
                  "locationIdentifiersReady",
                  "locationIdentifiersReady desc",
                  "finalDataEntryReady",
                  "finalDataEntryReady desc",
                  "masterDataReady",
                  "masterDataReady desc",
                  "deviceInstallationsReady",
                  "deviceInstallationsReady desc",
                  "marketLocationsComplete",
                  "marketLocationsComplete desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note",
                  "initialDataEntryReady",
                  "locationIdentifiersReady",
                  "finalDataEntryReady",
                  "masterDataReady",
                  "deviceInstallationsReady",
                  "marketLocationsComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "meteringLocationsPD",
                  "marketLocationsPD",
                  "actorsPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMInstancesPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Add new entity to MCMInstancesPD",
        "requestBody": {
          "description": "MCM Instance Process Data / MKV Instanz Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCMInstancesPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})": {
      "get": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Get entity from MCMInstancesPD by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note",
                  "initialDataEntryReady",
                  "locationIdentifiersReady",
                  "finalDataEntryReady",
                  "masterDataReady",
                  "deviceInstallationsReady",
                  "marketLocationsComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "meteringLocationsPD",
                  "marketLocationsPD",
                  "actorsPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Update entity in MCMInstancesPD",
        "requestBody": {
          "description": "MCM Instance Process Data / MKV Instanz Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCMInstancesPD-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Delete entity from MCMInstancesPD",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstancesPD({id})/MCMService.notifyInitialDataEntryReady": {
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Invoke action notifyInitialDataEntryReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})/MCMService.notifyLocationIdentifiersReady": {
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Invoke action notifyLocationIdentifiersReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})/MCMService.notifyFinalDataEntryReady": {
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Invoke action notifyFinalDataEntryReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})/MCMService.notifyMasterDataReady": {
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Invoke action notifyMasterDataReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})/MCMService.notifyDeviceInstallationsReady": {
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Invoke action notifyDeviceInstallationsReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})/MCMService.notifyMarketLocationsComplete": {
      "post": {
        "tags": [
          "MCMInstancesPD"
        ],
        "summary": "Invoke action notifyMarketLocationsComplete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMInstancesPD({id})/changeProcess": {
      "get": {
        "tags": [
          "MCMInstancesPD",
          "MCIChangeProcesses"
        ],
        "summary": "Get related changeProcess",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstancesPD({id})/meteringLocationsPD": {
      "get": {
        "tags": [
          "MCMInstancesPD",
          "MeteringLocationsPD"
        ],
        "summary": "Get entities from related meteringLocationsPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstancePD_id",
                  "measurementConceptInstancePD_id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "position",
                  "position desc",
                  "plannedMeteringLocationId",
                  "plannedMeteringLocationId desc",
                  "deviceLocationSupplement",
                  "deviceLocationSupplement desc",
                  "meterOperator",
                  "meterOperator desc",
                  "note",
                  "note desc",
                  "classification",
                  "classification desc",
                  "measuringType_code",
                  "measuringType_code desc",
                  "volumeCorrector",
                  "volumeCorrector desc",
                  "nominalCapacity",
                  "nominalCapacity desc",
                  "locationIdentifierReady",
                  "locationIdentifierReady desc",
                  "masterDataReady",
                  "masterDataReady desc",
                  "calorificValueDistrict",
                  "calorificValueDistrict desc",
                  "installationDate",
                  "installationDate desc",
                  "locationInstalled",
                  "locationInstalled desc",
                  "removalDate",
                  "removalDate desc",
                  "locationRemoved",
                  "locationRemoved desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "meteringLocation_id",
                  "position",
                  "plannedMeteringLocationId",
                  "deviceLocationSupplement",
                  "meterOperator",
                  "note",
                  "classification",
                  "measuringType_code",
                  "volumeCorrector",
                  "nominalCapacity",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "calorificValueDistrict",
                  "installationDate",
                  "locationInstalled",
                  "removalDate",
                  "locationRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "meteringLocation",
                  "measuringType",
                  "meteringTasksPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationsPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstancesPD",
          "MeteringLocationsPD"
        ],
        "summary": "Add new entity to related meteringLocationsPD",
        "requestBody": {
          "description": "MCM Instance Metering Location Process Data / MKV Instanz Messlokation Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationsPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstancesPD({id})/marketLocationsPD": {
      "get": {
        "tags": [
          "MCMInstancesPD",
          "MarketLocationsPD"
        ],
        "summary": "Get entities from related marketLocationsPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstancePD_id",
                  "measurementConceptInstancePD_id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "position",
                  "position desc",
                  "plannedMarketLocationId",
                  "plannedMarketLocationId desc",
                  "connectionUser",
                  "connectionUser desc",
                  "connectionOwner",
                  "connectionOwner desc",
                  "forecastBasis_code",
                  "forecastBasis_code desc",
                  "consumptionDistribution",
                  "consumptionDistribution desc",
                  "flatrateType_code",
                  "flatrateType_code desc",
                  "flatrate",
                  "flatrate desc",
                  "classification",
                  "classification desc",
                  "directSelling",
                  "directSelling desc",
                  "connectionOperator",
                  "connectionOperator desc",
                  "locationIdentifierReady",
                  "locationIdentifierReady desc",
                  "masterDataReady",
                  "masterDataReady desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "locationComplete",
                  "locationComplete desc",
                  "locationRemoved",
                  "locationRemoved desc",
                  "removalDate",
                  "removalDate desc",
                  "communalInstallation",
                  "communalInstallation desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "marketLocation_id",
                  "position",
                  "plannedMarketLocationId",
                  "connectionUser",
                  "connectionOwner",
                  "forecastBasis_code",
                  "consumptionDistribution",
                  "flatrateType_code",
                  "flatrate",
                  "classification",
                  "directSelling",
                  "connectionOperator",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "commercialSetupDate",
                  "locationComplete",
                  "locationRemoved",
                  "removalDate",
                  "communalInstallation"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "marketLocation",
                  "forecastBasis",
                  "flatrateType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationsPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstancesPD",
          "MarketLocationsPD"
        ],
        "summary": "Add new entity to related marketLocationsPD",
        "requestBody": {
          "description": "MCM Instance Market Location Process Data / MKV Instanz Marktlokation Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationsPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMInstancesPD({id})/actorsPD": {
      "get": {
        "tags": [
          "MCMInstancesPD",
          "ActorsPD"
        ],
        "summary": "Get entities from related actorsPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstancePD_id",
                  "measurementConceptInstancePD_id desc",
                  "actor_id",
                  "actor_id desc",
                  "position",
                  "position desc",
                  "plannedInstalledPower",
                  "plannedInstalledPower desc",
                  "installedPower",
                  "installedPower desc",
                  "inverterPower",
                  "inverterPower desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "actor_id",
                  "position",
                  "plannedInstalledPower",
                  "installedPower",
                  "inverterPower"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "actor",
                  "externalReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorsPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorsPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMInstancesPD",
          "ActorsPD"
        ],
        "summary": "Add new entity to related actorsPD",
        "requestBody": {
          "description": "MCM Instance Actor Process Data / MKV Instanz Akteur Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorsPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ObjectAddresses": {
      "get": {
        "tags": [
          "ObjectAddresses"
        ],
        "summary": "Get entities from ObjectAddresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "country_code",
                  "country_code desc",
                  "cityID",
                  "cityID desc",
                  "cityName",
                  "cityName desc",
                  "postalCode",
                  "postalCode desc",
                  "streetID",
                  "streetID desc",
                  "streetName",
                  "streetName desc",
                  "houseNumber",
                  "houseNumber desc",
                  "floorNumber",
                  "floorNumber desc",
                  "supplement",
                  "supplement desc",
                  "houseNumberSupplement",
                  "houseNumberSupplement desc",
                  "latitude",
                  "latitude desc",
                  "longitude",
                  "longitude desc",
                  "cityDistrict",
                  "cityDistrict desc",
                  "timeZone",
                  "timeZone desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ObjectAddresses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ObjectAddresses"
        ],
        "summary": "Add new entity to ObjectAddresses",
        "requestBody": {
          "description": "MCM Instance Object Addresses - Virtual fields for instance ui",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ObjectAddresses({id})": {
      "get": {
        "tags": [
          "ObjectAddresses"
        ],
        "summary": "Get entity from ObjectAddresses by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ObjectAddresses"
        ],
        "summary": "Update entity in ObjectAddresses",
        "requestBody": {
          "description": "MCM Instance Object Addresses - Virtual fields for instance ui",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ObjectAddresses"
        ],
        "summary": "Delete entity from ObjectAddresses",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ObjectAddresses({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "ObjectAddresses",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ObjectAddresses({id})/country": {
      "get": {
        "tags": [
          "ObjectAddresses",
          "Countries"
        ],
        "summary": "Get related country",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations": {
      "get": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Get entities from MeteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "position",
                  "position desc",
                  "modelMeteringLocation_id",
                  "modelMeteringLocation_id desc",
                  "meteringLocationId",
                  "meteringLocationId desc",
                  "grid_code",
                  "grid_code desc",
                  "altitude",
                  "altitude desc",
                  "gridLevel_code",
                  "gridLevel_code desc",
                  "address_id",
                  "address_id desc",
                  "lossTransformerSupply",
                  "lossTransformerSupply desc",
                  "lossLineSupply",
                  "lossLineSupply desc",
                  "lossTransformerDemand",
                  "lossTransformerDemand desc",
                  "lossLineDemand",
                  "lossLineDemand desc",
                  "meteringLocationPurpose_code",
                  "meteringLocationPurpose_code desc",
                  "disconnectable",
                  "disconnectable desc",
                  "transformerRequired",
                  "transformerRequired desc",
                  "deviceSerialId",
                  "deviceSerialId desc",
                  "removalDate",
                  "removalDate desc",
                  "locationRemoved",
                  "locationRemoved desc",
                  "installationDate",
                  "installationDate desc",
                  "locationInstalled",
                  "locationInstalled desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Add new entity to MeteringLocations",
        "requestBody": {
          "description": "MCM Instance Metering Locations / MKV Instanz Messlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocations({id})": {
      "get": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Get entity from MeteringLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Update entity in MeteringLocations",
        "requestBody": {
          "description": "MCM Instance Metering Locations / MKV Instanz Messlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocations-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Delete entity from MeteringLocations",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/MCMService.getMarketLocationStructure()": {
      "get": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Invoke function getMarketLocationStructure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocationStructure"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocations({id})/MCMService.notifySingleDeviceInstalled": {
      "post": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Invoke action notifySingleDeviceInstalled",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MeteringLocations"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocations({id})/MCMService.notifySingleDeviceRemoved": {
      "post": {
        "tags": [
          "MeteringLocations"
        ],
        "summary": "Invoke action notifySingleDeviceRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MeteringLocations"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocations({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "MeteringLocations",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/type": {
      "get": {
        "tags": [
          "MeteringLocations",
          "MeteringLocationTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/modelMeteringLocation": {
      "get": {
        "tags": [
          "MeteringLocations",
          "MCCMeteringLocations"
        ],
        "summary": "Get related modelMeteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/grid": {
      "get": {
        "tags": [
          "MeteringLocations",
          "GridTypes"
        ],
        "summary": "Get related grid",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/gridLevel": {
      "get": {
        "tags": [
          "MeteringLocations",
          "GridLevelTypes"
        ],
        "summary": "Get related gridLevel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/address": {
      "get": {
        "tags": [
          "MeteringLocations",
          "ObjectAddresses"
        ],
        "summary": "Get related address",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/meteringLocationPurpose": {
      "get": {
        "tags": [
          "MeteringLocations",
          "MeteringLocationPurposeTypes"
        ],
        "summary": "Get related meteringLocationPurpose",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/meteringTasks": {
      "get": {
        "tags": [
          "MeteringLocations",
          "MeteringTasks"
        ],
        "summary": "Get entities from related meteringTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "direction_code",
                  "direction_code desc",
                  "lossFactorTransformer",
                  "lossFactorTransformer desc",
                  "lossFactorLine",
                  "lossFactorLine desc",
                  "type_code",
                  "type_code desc",
                  "position",
                  "position desc",
                  "modelMeteringTasks_id",
                  "modelMeteringTasks_id desc",
                  "plannedMeteringProcedure_code",
                  "plannedMeteringProcedure_code desc",
                  "plannedRegisterCode",
                  "plannedRegisterCode desc",
                  "registerCode",
                  "registerCode desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "lossFactorTransformer",
                  "lossFactorLine",
                  "type_code",
                  "position",
                  "modelMeteringTasks_id",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "registerCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "direction",
                  "type",
                  "modelMeteringTasks",
                  "plannedMeteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTasks",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTasks"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocations",
          "MeteringTasks"
        ],
        "summary": "Add new entity to related meteringTasks",
        "requestBody": {
          "description": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTasks-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/circuitPlanPredecessors": {
      "get": {
        "tags": [
          "MeteringLocations",
          "CircuitPlanNodeConnections"
        ],
        "summary": "Get entities from related circuitPlanPredecessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CircuitPlanNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocations({id})/circuitPlanSuccessors": {
      "get": {
        "tags": [
          "MeteringLocations",
          "CircuitPlanNodeConnections"
        ],
        "summary": "Get entities from related circuitPlanSuccessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CircuitPlanNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocationsPD": {
      "get": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Get entities from MeteringLocationsPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstancePD_id",
                  "measurementConceptInstancePD_id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "position",
                  "position desc",
                  "plannedMeteringLocationId",
                  "plannedMeteringLocationId desc",
                  "deviceLocationSupplement",
                  "deviceLocationSupplement desc",
                  "meterOperator",
                  "meterOperator desc",
                  "note",
                  "note desc",
                  "classification",
                  "classification desc",
                  "measuringType_code",
                  "measuringType_code desc",
                  "volumeCorrector",
                  "volumeCorrector desc",
                  "nominalCapacity",
                  "nominalCapacity desc",
                  "locationIdentifierReady",
                  "locationIdentifierReady desc",
                  "masterDataReady",
                  "masterDataReady desc",
                  "calorificValueDistrict",
                  "calorificValueDistrict desc",
                  "installationDate",
                  "installationDate desc",
                  "locationInstalled",
                  "locationInstalled desc",
                  "removalDate",
                  "removalDate desc",
                  "locationRemoved",
                  "locationRemoved desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "meteringLocation_id",
                  "position",
                  "plannedMeteringLocationId",
                  "deviceLocationSupplement",
                  "meterOperator",
                  "note",
                  "classification",
                  "measuringType_code",
                  "volumeCorrector",
                  "nominalCapacity",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "calorificValueDistrict",
                  "installationDate",
                  "locationInstalled",
                  "removalDate",
                  "locationRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "meteringLocation",
                  "measuringType",
                  "meteringTasksPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationsPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Add new entity to MeteringLocationsPD",
        "requestBody": {
          "description": "MCM Instance Metering Location Process Data / MKV Instanz Messlokation Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationsPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationsPD({id})": {
      "get": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Get entity from MeteringLocationsPD by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "meteringLocation_id",
                  "position",
                  "plannedMeteringLocationId",
                  "deviceLocationSupplement",
                  "meterOperator",
                  "note",
                  "classification",
                  "measuringType_code",
                  "volumeCorrector",
                  "nominalCapacity",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "calorificValueDistrict",
                  "installationDate",
                  "locationInstalled",
                  "removalDate",
                  "locationRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "meteringLocation",
                  "measuringType",
                  "meteringTasksPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Update entity in MeteringLocationsPD",
        "requestBody": {
          "description": "MCM Instance Metering Location Process Data / MKV Instanz Messlokation Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationsPD-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Delete entity from MeteringLocationsPD",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocationsPD({id})/MCMService.notifyMeteringLocationIdentifierReady": {
      "post": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Invoke action notifyMeteringLocationIdentifierReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationsPD({id})/MCMService.notifyMasterDataReadyForMeteringLocation": {
      "post": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Invoke action notifyMasterDataReadyForMeteringLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationsPD({id})/MCMService.notifyDeviceInstallationReady": {
      "post": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Invoke action notifyDeviceInstallationReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationsPD({id})/MCMService.notifyDeviceRemoved": {
      "post": {
        "tags": [
          "MeteringLocationsPD"
        ],
        "summary": "Invoke action notifyDeviceRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationsPD({id})/measurementConceptInstancePD": {
      "get": {
        "tags": [
          "MeteringLocationsPD",
          "MCMInstancesPD"
        ],
        "summary": "Get related measurementConceptInstancePD",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note",
                  "initialDataEntryReady",
                  "locationIdentifiersReady",
                  "finalDataEntryReady",
                  "masterDataReady",
                  "deviceInstallationsReady",
                  "marketLocationsComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "meteringLocationsPD",
                  "marketLocationsPD",
                  "actorsPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocationsPD({id})/meteringLocation": {
      "get": {
        "tags": [
          "MeteringLocationsPD",
          "MeteringLocations"
        ],
        "summary": "Get related meteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocationsPD({id})/measuringType": {
      "get": {
        "tags": [
          "MeteringLocationsPD",
          "MeasuringTypes"
        ],
        "summary": "Get related measuringType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringLocationsPD({id})/meteringTasksPD": {
      "get": {
        "tags": [
          "MeteringLocationsPD",
          "MeteringTasksPD"
        ],
        "summary": "Get entities from related meteringTasksPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocationPD_id",
                  "meteringLocationPD_id desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "position",
                  "position desc",
                  "rate_code",
                  "rate_code desc",
                  "periodConsumption",
                  "periodConsumption desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocationPD_id",
                  "meteringTask_id",
                  "position",
                  "rate_code",
                  "periodConsumption"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocationPD",
                  "meteringTask",
                  "rate"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTasksPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTasksPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocationsPD",
          "MeteringTasksPD"
        ],
        "summary": "Add new entity to related meteringTasksPD",
        "requestBody": {
          "description": "MCM Instance Metering Task Process Data / MKV Instanz Messaufgabe Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTasksPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasksPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasks": {
      "get": {
        "tags": [
          "MeteringTasks"
        ],
        "summary": "Get entities from MeteringTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "direction_code",
                  "direction_code desc",
                  "lossFactorTransformer",
                  "lossFactorTransformer desc",
                  "lossFactorLine",
                  "lossFactorLine desc",
                  "type_code",
                  "type_code desc",
                  "position",
                  "position desc",
                  "modelMeteringTasks_id",
                  "modelMeteringTasks_id desc",
                  "plannedMeteringProcedure_code",
                  "plannedMeteringProcedure_code desc",
                  "plannedRegisterCode",
                  "plannedRegisterCode desc",
                  "registerCode",
                  "registerCode desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "lossFactorTransformer",
                  "lossFactorLine",
                  "type_code",
                  "position",
                  "modelMeteringTasks_id",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "registerCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "direction",
                  "type",
                  "modelMeteringTasks",
                  "plannedMeteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTasks",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTasks"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringTasks"
        ],
        "summary": "Add new entity to MeteringTasks",
        "requestBody": {
          "description": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTasks-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringTasks({id})": {
      "get": {
        "tags": [
          "MeteringTasks"
        ],
        "summary": "Get entity from MeteringTasks by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "lossFactorTransformer",
                  "lossFactorLine",
                  "type_code",
                  "position",
                  "modelMeteringTasks_id",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "registerCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "direction",
                  "type",
                  "modelMeteringTasks",
                  "plannedMeteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringTasks"
        ],
        "summary": "Update entity in MeteringTasks",
        "requestBody": {
          "description": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTasks-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringTasks"
        ],
        "summary": "Delete entity from MeteringTasks",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasks({id})/meteringLocation": {
      "get": {
        "tags": [
          "MeteringTasks",
          "MeteringLocations"
        ],
        "summary": "Get related meteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasks({id})/direction": {
      "get": {
        "tags": [
          "MeteringTasks",
          "DirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasks({id})/type": {
      "get": {
        "tags": [
          "MeteringTasks",
          "MeteringTaskTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "division",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasks({id})/modelMeteringTasks": {
      "get": {
        "tags": [
          "MeteringTasks",
          "MCCMeteringTasks"
        ],
        "summary": "Get related modelMeteringTasks",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasks({id})/plannedMeteringProcedure": {
      "get": {
        "tags": [
          "MeteringTasks",
          "MeteringProcedureTypes"
        ],
        "summary": "Get related plannedMeteringProcedure",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasksPD": {
      "get": {
        "tags": [
          "MeteringTasksPD"
        ],
        "summary": "Get entities from MeteringTasksPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocationPD_id",
                  "meteringLocationPD_id desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "position",
                  "position desc",
                  "rate_code",
                  "rate_code desc",
                  "periodConsumption",
                  "periodConsumption desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocationPD_id",
                  "meteringTask_id",
                  "position",
                  "rate_code",
                  "periodConsumption"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocationPD",
                  "meteringTask",
                  "rate"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTasksPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTasksPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringTasksPD"
        ],
        "summary": "Add new entity to MeteringTasksPD",
        "requestBody": {
          "description": "MCM Instance Metering Task Process Data / MKV Instanz Messaufgabe Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTasksPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasksPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringTasksPD({id})": {
      "get": {
        "tags": [
          "MeteringTasksPD"
        ],
        "summary": "Get entity from MeteringTasksPD by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocationPD_id",
                  "meteringTask_id",
                  "position",
                  "rate_code",
                  "periodConsumption"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocationPD",
                  "meteringTask",
                  "rate"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasksPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringTasksPD"
        ],
        "summary": "Update entity in MeteringTasksPD",
        "requestBody": {
          "description": "MCM Instance Metering Task Process Data / MKV Instanz Messaufgabe Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTasksPD-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringTasksPD"
        ],
        "summary": "Delete entity from MeteringTasksPD",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasksPD({id})/meteringLocationPD": {
      "get": {
        "tags": [
          "MeteringTasksPD",
          "MeteringLocationsPD"
        ],
        "summary": "Get related meteringLocationPD",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "meteringLocation_id",
                  "position",
                  "plannedMeteringLocationId",
                  "deviceLocationSupplement",
                  "meterOperator",
                  "note",
                  "classification",
                  "measuringType_code",
                  "volumeCorrector",
                  "nominalCapacity",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "calorificValueDistrict",
                  "installationDate",
                  "locationInstalled",
                  "removalDate",
                  "locationRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "meteringLocation",
                  "measuringType",
                  "meteringTasksPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasksPD({id})/meteringTask": {
      "get": {
        "tags": [
          "MeteringTasksPD",
          "MeteringTasks"
        ],
        "summary": "Get related meteringTask",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "lossFactorTransformer",
                  "lossFactorLine",
                  "type_code",
                  "position",
                  "modelMeteringTasks_id",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "registerCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "direction",
                  "type",
                  "modelMeteringTasks",
                  "plannedMeteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeteringTasksPD({id})/rate": {
      "get": {
        "tags": [
          "MeteringTasksPD",
          "MCIRateTypes"
        ],
        "summary": "Get related rate",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIRateTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations": {
      "get": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Get entities from MarketLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "modelMarketLocation_id",
                  "modelMarketLocation_id desc",
                  "marketLocationId",
                  "marketLocationId desc",
                  "virtualMarketLocation",
                  "virtualMarketLocation desc",
                  "address_id",
                  "address_id desc",
                  "billingProcedure",
                  "billingProcedure desc",
                  "settlementProcedure",
                  "settlementProcedure desc",
                  "removalDate",
                  "removalDate desc",
                  "locationRemoved",
                  "locationRemoved desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "locationComplete",
                  "locationComplete desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Add new entity to MarketLocations",
        "requestBody": {
          "description": "MCM Instance Market Locations / MKV Instanz Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocations-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocations({id})": {
      "get": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Get entity from MarketLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Update entity in MarketLocations",
        "requestBody": {
          "description": "MCM Instance Market Locations / MKV Instanz Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocations-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Delete entity from MarketLocations",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/MCMService.getMarketLocationStructure()": {
      "get": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Invoke function getMarketLocationStructure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocationStructure"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocations({id})/MCMService.notifySingleMarketLocationCompleted": {
      "post": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Invoke action notifySingleMarketLocationCompleted",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocations"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocations({id})/MCMService.notifySingleMarketLocationRemoved": {
      "post": {
        "tags": [
          "MarketLocations"
        ],
        "summary": "Invoke action notifySingleMarketLocationRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocations"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocations({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "MarketLocations",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/type": {
      "get": {
        "tags": [
          "MarketLocations",
          "MarketLocationTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/direction": {
      "get": {
        "tags": [
          "MarketLocations",
          "DirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/modelMarketLocation": {
      "get": {
        "tags": [
          "MarketLocations",
          "MCDMarketLocations"
        ],
        "summary": "Get related modelMarketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "measurementConceptModel_id",
                  "type_code",
                  "virtualMarketLocation",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "type",
                  "direction",
                  "actorsMapping",
                  "calculationRules"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/calculationRules": {
      "get": {
        "tags": [
          "MarketLocations",
          "MCICalculationRules"
        ],
        "summary": "Get entities from related calculationRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "meteringProcedure_code",
                  "meteringProcedure_code desc",
                  "modelCalculationRule_id",
                  "modelCalculationRule_id desc",
                  "expression",
                  "expression desc",
                  "expressionExpanded",
                  "expressionExpanded desc",
                  "plannedRegisterCode",
                  "plannedRegisterCode desc",
                  "registerCode",
                  "registerCode desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "modelCalculationRule_id",
                  "expression",
                  "expressionExpanded",
                  "plannedRegisterCode",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "modelCalculationRule",
                  "steps",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCICalculationRules",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCICalculationRules"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocations",
          "MCICalculationRules"
        ],
        "summary": "Add new entity to related calculationRules",
        "requestBody": {
          "description": "Calculation rules (=formulas) for market locations / Berechnungsregel für Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCICalculationRules-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCICalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/actors": {
      "get": {
        "tags": [
          "MarketLocations",
          "Actors"
        ],
        "summary": "Get entities from related actors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "modelActor_id",
                  "modelActor_id desc",
                  "powerRange_code",
                  "powerRange_code desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "energySource_code",
                  "energySource_code desc",
                  "address_id",
                  "address_id desc",
                  "gridLevel_code",
                  "gridLevel_code desc",
                  "isOwnConsumption",
                  "isOwnConsumption desc",
                  "installationDate",
                  "installationDate desc",
                  "actorInstalled",
                  "actorInstalled desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "actorComplete",
                  "actorComplete desc",
                  "removalDate",
                  "removalDate desc",
                  "actorRemoved",
                  "actorRemoved desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Actors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Actors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocations",
          "Actors"
        ],
        "summary": "Add new entity to related actors",
        "requestBody": {
          "description": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Actors-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/actorsMapping": {
      "get": {
        "tags": [
          "MarketLocations",
          "MCIMarketLocationActors"
        ],
        "summary": "Get entities from related actorsMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "actor_id",
                  "actor_id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actor_id",
                  "marketLocation_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actor",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIMarketLocationActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocations",
          "MCIMarketLocationActors"
        ],
        "summary": "Add new entity to related actorsMapping",
        "requestBody": {
          "description": "n:m Actors to Market locations/ Akteure zu Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocations({id})/address": {
      "get": {
        "tags": [
          "MarketLocations",
          "ObjectAddresses"
        ],
        "summary": "Get related address",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationsPD": {
      "get": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Get entities from MarketLocationsPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstancePD_id",
                  "measurementConceptInstancePD_id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "position",
                  "position desc",
                  "plannedMarketLocationId",
                  "plannedMarketLocationId desc",
                  "connectionUser",
                  "connectionUser desc",
                  "connectionOwner",
                  "connectionOwner desc",
                  "forecastBasis_code",
                  "forecastBasis_code desc",
                  "consumptionDistribution",
                  "consumptionDistribution desc",
                  "flatrateType_code",
                  "flatrateType_code desc",
                  "flatrate",
                  "flatrate desc",
                  "classification",
                  "classification desc",
                  "directSelling",
                  "directSelling desc",
                  "connectionOperator",
                  "connectionOperator desc",
                  "locationIdentifierReady",
                  "locationIdentifierReady desc",
                  "masterDataReady",
                  "masterDataReady desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "locationComplete",
                  "locationComplete desc",
                  "locationRemoved",
                  "locationRemoved desc",
                  "removalDate",
                  "removalDate desc",
                  "communalInstallation",
                  "communalInstallation desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "marketLocation_id",
                  "position",
                  "plannedMarketLocationId",
                  "connectionUser",
                  "connectionOwner",
                  "forecastBasis_code",
                  "consumptionDistribution",
                  "flatrateType_code",
                  "flatrate",
                  "classification",
                  "directSelling",
                  "connectionOperator",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "commercialSetupDate",
                  "locationComplete",
                  "locationRemoved",
                  "removalDate",
                  "communalInstallation"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "marketLocation",
                  "forecastBasis",
                  "flatrateType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationsPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Add new entity to MarketLocationsPD",
        "requestBody": {
          "description": "MCM Instance Market Location Process Data / MKV Instanz Marktlokation Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationsPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationsPD({id})": {
      "get": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Get entity from MarketLocationsPD by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "marketLocation_id",
                  "position",
                  "plannedMarketLocationId",
                  "connectionUser",
                  "connectionOwner",
                  "forecastBasis_code",
                  "consumptionDistribution",
                  "flatrateType_code",
                  "flatrate",
                  "classification",
                  "directSelling",
                  "connectionOperator",
                  "locationIdentifierReady",
                  "masterDataReady",
                  "commercialSetupDate",
                  "locationComplete",
                  "locationRemoved",
                  "removalDate",
                  "communalInstallation"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "marketLocation",
                  "forecastBasis",
                  "flatrateType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Update entity in MarketLocationsPD",
        "requestBody": {
          "description": "MCM Instance Market Location Process Data / MKV Instanz Marktlokation Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationsPD-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Delete entity from MarketLocationsPD",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationsPD({id})/MCMService.notifyMarketLocationIdentifierReady": {
      "post": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Invoke action notifyMarketLocationIdentifierReady",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationsPD({id})/MCMService.notifyMasterDataReadyForMarketLocation": {
      "post": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Invoke action notifyMasterDataReadyForMarketLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationsPD({id})/MCMService.notifyMarketLocationComplete": {
      "post": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Invoke action notifyMarketLocationComplete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationsPD({id})/MCMService.notifyMarketLocationRemoved": {
      "post": {
        "tags": [
          "MarketLocationsPD"
        ],
        "summary": "Invoke action notifyMarketLocationRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationsPD({id})/measurementConceptInstancePD": {
      "get": {
        "tags": [
          "MarketLocationsPD",
          "MCMInstancesPD"
        ],
        "summary": "Get related measurementConceptInstancePD",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note",
                  "initialDataEntryReady",
                  "locationIdentifiersReady",
                  "finalDataEntryReady",
                  "masterDataReady",
                  "deviceInstallationsReady",
                  "marketLocationsComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "meteringLocationsPD",
                  "marketLocationsPD",
                  "actorsPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationsPD({id})/marketLocation": {
      "get": {
        "tags": [
          "MarketLocationsPD",
          "MarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationsPD({id})/forecastBasis": {
      "get": {
        "tags": [
          "MarketLocationsPD",
          "ForecastBasisTypes"
        ],
        "summary": "Get related forecastBasis",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ForecastBasisTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationsPD({id})/flatrateType": {
      "get": {
        "tags": [
          "MarketLocationsPD",
          "MCIFlatrateTypes"
        ],
        "summary": "Get related flatrateType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIOperandMappings": {
      "get": {
        "tags": [
          "MCIOperandMappings"
        ],
        "summary": "Get entities from MCIOperandMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "operand",
                  "operand desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "operand",
                  "meteringTask_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIOperandMappings",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIOperandMappings"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIOperandMappings({id})": {
      "get": {
        "tags": [
          "MCIOperandMappings"
        ],
        "summary": "Get entity from MCIOperandMappings by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "operand",
                  "meteringTask_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOperandMappings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIOperandMappings({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "MCIOperandMappings",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIOperandMappings({id})/meteringTask": {
      "get": {
        "tags": [
          "MCIOperandMappings",
          "MeteringTasks"
        ],
        "summary": "Get related meteringTask",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "lossFactorTransformer",
                  "lossFactorLine",
                  "type_code",
                  "position",
                  "modelMeteringTasks_id",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "registerCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "direction",
                  "type",
                  "modelMeteringTasks",
                  "plannedMeteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRules": {
      "get": {
        "tags": [
          "MCICalculationRules"
        ],
        "summary": "Get entities from MCICalculationRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "meteringProcedure_code",
                  "meteringProcedure_code desc",
                  "modelCalculationRule_id",
                  "modelCalculationRule_id desc",
                  "expression",
                  "expression desc",
                  "expressionExpanded",
                  "expressionExpanded desc",
                  "plannedRegisterCode",
                  "plannedRegisterCode desc",
                  "registerCode",
                  "registerCode desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "modelCalculationRule_id",
                  "expression",
                  "expressionExpanded",
                  "plannedRegisterCode",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "modelCalculationRule",
                  "steps",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCICalculationRules",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCICalculationRules"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCICalculationRules"
        ],
        "summary": "Add new entity to MCICalculationRules",
        "requestBody": {
          "description": "Calculation rules (=formulas) for market locations / Berechnungsregel für Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCICalculationRules-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCICalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCICalculationRules({id})": {
      "get": {
        "tags": [
          "MCICalculationRules"
        ],
        "summary": "Get entity from MCICalculationRules by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "modelCalculationRule_id",
                  "expression",
                  "expressionExpanded",
                  "plannedRegisterCode",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "modelCalculationRule",
                  "steps",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCICalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCICalculationRules"
        ],
        "summary": "Update entity in MCICalculationRules",
        "requestBody": {
          "description": "Calculation rules (=formulas) for market locations / Berechnungsregel für Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCICalculationRules-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCICalculationRules"
        ],
        "summary": "Delete entity from MCICalculationRules",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRules({id})/marketLocation": {
      "get": {
        "tags": [
          "MCICalculationRules",
          "MarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRules({id})/meteringProcedure": {
      "get": {
        "tags": [
          "MCICalculationRules",
          "MeteringProcedureTypes"
        ],
        "summary": "Get related meteringProcedure",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRules({id})/modelCalculationRule": {
      "get": {
        "tags": [
          "MCICalculationRules",
          "MCDCalculationRules"
        ],
        "summary": "Get related modelCalculationRule",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "formula_id",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "formula",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRules({id})/steps": {
      "get": {
        "tags": [
          "MCICalculationRules",
          "MCICalculationRuleSteps"
        ],
        "summary": "Get entities from related steps",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "calculationRule_id",
                  "calculationRule_id desc",
                  "step",
                  "step desc",
                  "type",
                  "type desc",
                  "value",
                  "value desc",
                  "ref1",
                  "ref1 desc",
                  "ref2",
                  "ref2 desc",
                  "meteringTask_id",
                  "meteringTask_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "calculationRule_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCICalculationRuleSteps",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCICalculationRuleSteps"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRules({id})/usages": {
      "get": {
        "tags": [
          "MCICalculationRules",
          "MCIMarketLocationUsages"
        ],
        "summary": "Get entities from related usages",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "calculationRule_id",
                  "calculationRule_id desc",
                  "usage_code",
                  "usage_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "calculationRule_id",
                  "usage_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calculationRule",
                  "usage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIMarketLocationUsages",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIMarketLocationUsages"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCICalculationRuleSteps": {
      "get": {
        "tags": [
          "MCICalculationRuleSteps"
        ],
        "summary": "Get entities from MCICalculationRuleSteps",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "calculationRule_id",
                  "calculationRule_id desc",
                  "step",
                  "step desc",
                  "type",
                  "type desc",
                  "value",
                  "value desc",
                  "ref1",
                  "ref1 desc",
                  "ref2",
                  "ref2 desc",
                  "meteringTask_id",
                  "meteringTask_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "calculationRule_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCICalculationRuleSteps",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCICalculationRuleSteps"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCICalculationRuleSteps(calculationRule_id={calculationRule_id},step={step})": {
      "get": {
        "tags": [
          "MCICalculationRuleSteps"
        ],
        "summary": "Get entity from MCICalculationRuleSteps by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "calculationRule_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCICalculationRuleSteps"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "calculationRule_id",
          "in": "path",
          "description": "key: calculationRule_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "name": "step",
          "in": "path",
          "description": "key: step",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ]
    },
    "/MCICalculationRuleSteps(calculationRule_id={calculationRule_id},step={step})/meteringTask": {
      "get": {
        "tags": [
          "MCICalculationRuleSteps",
          "MeteringTasks"
        ],
        "summary": "Get related meteringTask",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "lossFactorTransformer",
                  "lossFactorLine",
                  "type_code",
                  "position",
                  "modelMeteringTasks_id",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "registerCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "direction",
                  "type",
                  "modelMeteringTasks",
                  "plannedMeteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "calculationRule_id",
          "in": "path",
          "description": "key: calculationRule_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "name": "step",
          "in": "path",
          "description": "key: step",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ]
    },
    "/MCIMarketLocationUsages": {
      "get": {
        "tags": [
          "MCIMarketLocationUsages"
        ],
        "summary": "Get entities from MCIMarketLocationUsages",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "calculationRule_id",
                  "calculationRule_id desc",
                  "usage_code",
                  "usage_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "calculationRule_id",
                  "usage_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calculationRule",
                  "usage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIMarketLocationUsages",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIMarketLocationUsages"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIMarketLocationUsages({id})": {
      "get": {
        "tags": [
          "MCIMarketLocationUsages"
        ],
        "summary": "Get entity from MCIMarketLocationUsages by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "calculationRule_id",
                  "usage_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calculationRule",
                  "usage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIMarketLocationUsages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIMarketLocationUsages({id})/calculationRule": {
      "get": {
        "tags": [
          "MCIMarketLocationUsages",
          "MCICalculationRules"
        ],
        "summary": "Get related calculationRule",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "modelCalculationRule_id",
                  "expression",
                  "expressionExpanded",
                  "plannedRegisterCode",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "modelCalculationRule",
                  "steps",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCICalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIMarketLocationUsages({id})/usage": {
      "get": {
        "tags": [
          "MCIMarketLocationUsages",
          "MarketLocationUsageTypes"
        ],
        "summary": "Get related usage",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Get entities from Actors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "modelActor_id",
                  "modelActor_id desc",
                  "powerRange_code",
                  "powerRange_code desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "energySource_code",
                  "energySource_code desc",
                  "address_id",
                  "address_id desc",
                  "gridLevel_code",
                  "gridLevel_code desc",
                  "isOwnConsumption",
                  "isOwnConsumption desc",
                  "installationDate",
                  "installationDate desc",
                  "actorInstalled",
                  "actorInstalled desc",
                  "commercialSetupDate",
                  "commercialSetupDate desc",
                  "actorComplete",
                  "actorComplete desc",
                  "removalDate",
                  "removalDate desc",
                  "actorRemoved",
                  "actorRemoved desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Actors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Actors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Add new entity to Actors",
        "requestBody": {
          "description": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Actors-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Actors({id})": {
      "get": {
        "tags": [
          "Actors"
        ],
        "summary": "Get entity from Actors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "Actors"
        ],
        "summary": "Update entity in Actors",
        "requestBody": {
          "description": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Actors-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "Actors"
        ],
        "summary": "Delete entity from Actors",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/MCMService.notifySingleActorInstalled": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Invoke action notifySingleActorInstalled",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.Actors"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Actors({id})/MCMService.notifySingleActorCompleted": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Invoke action notifySingleActorCompleted",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.Actors"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Actors({id})/MCMService.notifySingleActorRemoved": {
      "post": {
        "tags": [
          "Actors"
        ],
        "summary": "Invoke action notifySingleActorRemoved",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.Actors"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Actors({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "Actors",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/type": {
      "get": {
        "tags": [
          "Actors",
          "ActorTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/direction": {
      "get": {
        "tags": [
          "Actors",
          "ActorDirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/modelActor": {
      "get": {
        "tags": [
          "Actors",
          "MCCActors"
        ],
        "summary": "Get related modelActor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/powerRange": {
      "get": {
        "tags": [
          "Actors",
          "PowerRangeTypes"
        ],
        "summary": "Get related powerRange",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/circuitPlanPredecessors": {
      "get": {
        "tags": [
          "Actors",
          "CircuitPlanNodeConnections"
        ],
        "summary": "Get entities from related circuitPlanPredecessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CircuitPlanNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/circuitPlanSuccessors": {
      "get": {
        "tags": [
          "Actors",
          "CircuitPlanNodeConnections"
        ],
        "summary": "Get entities from related circuitPlanSuccessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CircuitPlanNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/marketLocation": {
      "get": {
        "tags": [
          "Actors",
          "MarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/marketLocations": {
      "get": {
        "tags": [
          "Actors",
          "MCIMarketLocationActors"
        ],
        "summary": "Get entities from related marketLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "actor_id",
                  "actor_id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actor_id",
                  "marketLocation_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actor",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIMarketLocationActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Actors",
          "MCIMarketLocationActors"
        ],
        "summary": "Add new entity to related marketLocations",
        "requestBody": {
          "description": "n:m Actors to Market locations/ Akteure zu Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/energySource": {
      "get": {
        "tags": [
          "Actors",
          "EnergySourceTypes"
        ],
        "summary": "Get related energySource",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/address": {
      "get": {
        "tags": [
          "Actors",
          "ObjectAddresses"
        ],
        "summary": "Get related address",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/Actors({id})/gridLevel": {
      "get": {
        "tags": [
          "Actors",
          "GridLevelTypes"
        ],
        "summary": "Get related gridLevel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIMarketLocationActors": {
      "get": {
        "tags": [
          "MCIMarketLocationActors"
        ],
        "summary": "Get entities from MCIMarketLocationActors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "actor_id",
                  "actor_id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actor_id",
                  "marketLocation_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actor",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIMarketLocationActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIMarketLocationActors"
        ],
        "summary": "Add new entity to MCIMarketLocationActors",
        "requestBody": {
          "description": "n:m Actors to Market locations/ Akteure zu Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIMarketLocationActors({id})": {
      "get": {
        "tags": [
          "MCIMarketLocationActors"
        ],
        "summary": "Get entity from MCIMarketLocationActors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actor_id",
                  "marketLocation_id",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actor",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIMarketLocationActors"
        ],
        "summary": "Update entity in MCIMarketLocationActors",
        "requestBody": {
          "description": "n:m Actors to Market locations/ Akteure zu Marktlokationen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIMarketLocationActors"
        ],
        "summary": "Delete entity from MCIMarketLocationActors",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIMarketLocationActors({id})/actor": {
      "get": {
        "tags": [
          "MCIMarketLocationActors",
          "Actors"
        ],
        "summary": "Get related actor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIMarketLocationActors({id})/marketLocation": {
      "get": {
        "tags": [
          "MCIMarketLocationActors",
          "MarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPD": {
      "get": {
        "tags": [
          "ActorsPD"
        ],
        "summary": "Get entities from ActorsPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstancePD_id",
                  "measurementConceptInstancePD_id desc",
                  "actor_id",
                  "actor_id desc",
                  "position",
                  "position desc",
                  "plannedInstalledPower",
                  "plannedInstalledPower desc",
                  "installedPower",
                  "installedPower desc",
                  "inverterPower",
                  "inverterPower desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "actor_id",
                  "position",
                  "plannedInstalledPower",
                  "installedPower",
                  "inverterPower"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "actor",
                  "externalReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorsPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorsPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorsPD"
        ],
        "summary": "Add new entity to ActorsPD",
        "requestBody": {
          "description": "MCM Instance Actor Process Data / MKV Instanz Akteur Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorsPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorsPD({id})": {
      "get": {
        "tags": [
          "ActorsPD"
        ],
        "summary": "Get entity from ActorsPD by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "actor_id",
                  "position",
                  "plannedInstalledPower",
                  "installedPower",
                  "inverterPower"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "actor",
                  "externalReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ActorsPD"
        ],
        "summary": "Update entity in ActorsPD",
        "requestBody": {
          "description": "MCM Instance Actor Process Data / MKV Instanz Akteur Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorsPD-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ActorsPD"
        ],
        "summary": "Delete entity from ActorsPD",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPD({id})/measurementConceptInstancePD": {
      "get": {
        "tags": [
          "ActorsPD",
          "MCMInstancesPD"
        ],
        "summary": "Get related measurementConceptInstancePD",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note",
                  "initialDataEntryReady",
                  "locationIdentifiersReady",
                  "finalDataEntryReady",
                  "masterDataReady",
                  "deviceInstallationsReady",
                  "marketLocationsComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "meteringLocationsPD",
                  "marketLocationsPD",
                  "actorsPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPD({id})/actor": {
      "get": {
        "tags": [
          "ActorsPD",
          "Actors"
        ],
        "summary": "Get related actor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPD({id})/externalReferences": {
      "get": {
        "tags": [
          "ActorsPD",
          "ActorsPDExternalReferences"
        ],
        "summary": "Get entities from related externalReferences",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "actorPD_id",
                  "actorPD_id desc",
                  "referenceType_code",
                  "referenceType_code desc",
                  "referenceSystem_code",
                  "referenceSystem_code desc",
                  "referenceId",
                  "referenceId desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actorPD_id",
                  "referenceType_code",
                  "referenceSystem_code",
                  "referenceId",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actorPD",
                  "referenceType",
                  "referenceSystem"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorsPDExternalReferences",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorsPD",
          "ActorsPDExternalReferences"
        ],
        "summary": "Add new entity to related externalReferences",
        "requestBody": {
          "description": "MCM Instance Actor Process Data External References  / MKV Instanz Akteur Prozessdaten Externe Referenzen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPDExternalReferences": {
      "get": {
        "tags": [
          "ActorsPDExternalReferences"
        ],
        "summary": "Get entities from ActorsPDExternalReferences",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "actorPD_id",
                  "actorPD_id desc",
                  "referenceType_code",
                  "referenceType_code desc",
                  "referenceSystem_code",
                  "referenceSystem_code desc",
                  "referenceId",
                  "referenceId desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actorPD_id",
                  "referenceType_code",
                  "referenceSystem_code",
                  "referenceId",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actorPD",
                  "referenceType",
                  "referenceSystem"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorsPDExternalReferences",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorsPDExternalReferences"
        ],
        "summary": "Add new entity to ActorsPDExternalReferences",
        "requestBody": {
          "description": "MCM Instance Actor Process Data External References  / MKV Instanz Akteur Prozessdaten Externe Referenzen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorsPDExternalReferences({id})": {
      "get": {
        "tags": [
          "ActorsPDExternalReferences"
        ],
        "summary": "Get entity from ActorsPDExternalReferences by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "actorPD_id",
                  "referenceType_code",
                  "referenceSystem_code",
                  "referenceId",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "actorPD",
                  "referenceType",
                  "referenceSystem"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ActorsPDExternalReferences"
        ],
        "summary": "Update entity in ActorsPDExternalReferences",
        "requestBody": {
          "description": "MCM Instance Actor Process Data External References  / MKV Instanz Akteur Prozessdaten Externe Referenzen",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ActorsPDExternalReferences"
        ],
        "summary": "Delete entity from ActorsPDExternalReferences",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPDExternalReferences({id})/actorPD": {
      "get": {
        "tags": [
          "ActorsPDExternalReferences",
          "ActorsPD"
        ],
        "summary": "Get related actorPD",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstancePD_id",
                  "actor_id",
                  "position",
                  "plannedInstalledPower",
                  "installedPower",
                  "inverterPower"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstancePD",
                  "actor",
                  "externalReferences"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorsPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPDExternalReferences({id})/referenceType": {
      "get": {
        "tags": [
          "ActorsPDExternalReferences",
          "ActorExternalReferenceTypes"
        ],
        "summary": "Get related referenceType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/ActorsPDExternalReferences({id})/referenceSystem": {
      "get": {
        "tags": [
          "ActorsPDExternalReferences",
          "ExternalReferenceSystems"
        ],
        "summary": "Get related referenceSystem",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/CircuitPlanNodeConnections": {
      "get": {
        "tags": [
          "CircuitPlanNodeConnections"
        ],
        "summary": "Get entities from CircuitPlanNodeConnections",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of CircuitPlanNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircuitPlanNodeConnections({id})": {
      "get": {
        "tags": [
          "CircuitPlanNodeConnections"
        ],
        "summary": "Get entity from CircuitPlanNodeConnections by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/CircuitPlanNodeConnections({id})/successorActor": {
      "get": {
        "tags": [
          "CircuitPlanNodeConnections",
          "Actors"
        ],
        "summary": "Get related successorActor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/CircuitPlanNodeConnections({id})/successorMeteringLocation": {
      "get": {
        "tags": [
          "CircuitPlanNodeConnections",
          "MeteringLocations"
        ],
        "summary": "Get related successorMeteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/CircuitPlanNodeConnections({id})/referenceActor": {
      "get": {
        "tags": [
          "CircuitPlanNodeConnections",
          "Actors"
        ],
        "summary": "Get related referenceActor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelActor_id",
                  "powerRange_code",
                  "marketLocation_id",
                  "energySource_code",
                  "address_id",
                  "gridLevel_code",
                  "isOwnConsumption",
                  "installationDate",
                  "actorInstalled",
                  "commercialSetupDate",
                  "actorComplete",
                  "removalDate",
                  "actorRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelActor",
                  "powerRange",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors",
                  "marketLocation",
                  "marketLocations",
                  "energySource",
                  "address",
                  "gridLevel"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Actors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/CircuitPlanNodeConnections({id})/referenceMeteringLocation": {
      "get": {
        "tags": [
          "CircuitPlanNodeConnections",
          "MeteringLocations"
        ],
        "summary": "Get related referenceMeteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "position",
                  "modelMeteringLocation_id",
                  "meteringLocationId",
                  "grid_code",
                  "altitude",
                  "gridLevel_code",
                  "address_id",
                  "lossTransformerSupply",
                  "lossLineSupply",
                  "lossTransformerDemand",
                  "lossLineDemand",
                  "meteringLocationPurpose_code",
                  "disconnectable",
                  "transformerRequired",
                  "deviceSerialId",
                  "removalDate",
                  "locationRemoved",
                  "installationDate",
                  "locationInstalled"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "modelMeteringLocation",
                  "grid",
                  "gridLevel",
                  "address",
                  "meteringLocationPurpose",
                  "meteringTasks",
                  "circuitPlanPredecessors",
                  "circuitPlanSuccessors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIErrors": {
      "get": {
        "tags": [
          "MCIErrors"
        ],
        "summary": "Get entities from MCIErrors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "status_id",
                  "status_id desc",
                  "resolved",
                  "resolved desc",
                  "message",
                  "message desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "status_id",
                  "resolved",
                  "message"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIErrors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIErrors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIErrors({id})": {
      "get": {
        "tags": [
          "MCIErrors"
        ],
        "summary": "Get entity from MCIErrors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "status_id",
                  "resolved",
                  "message"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIErrors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIErrors({id})/status": {
      "get": {
        "tags": [
          "MCIErrors",
          "MCIStatus"
        ],
        "summary": "Get related status",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "instanceStatus_code",
                  "processStatus_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "instanceStatus",
                  "processStatus",
                  "errors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatus"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses": {
      "get": {
        "tags": [
          "MCIChangeProcesses"
        ],
        "summary": "Get entities from MCIChangeProcesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "externalOrderId",
                  "externalOrderId desc",
                  "externalProcessId",
                  "externalProcessId desc",
                  "processReason_code",
                  "processReason_code desc",
                  "processType_code",
                  "processType_code desc",
                  "status_id",
                  "status_id desc",
                  "finished",
                  "finished desc",
                  "modifiedAt",
                  "modifiedAt desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIChangeProcesses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIChangeProcesses"
        ],
        "summary": "Add new entity to MCIChangeProcesses",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIChangeProcesses({id})": {
      "get": {
        "tags": [
          "MCIChangeProcesses"
        ],
        "summary": "Get entity from MCIChangeProcesses by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIChangeProcesses"
        ],
        "summary": "Update entity in MCIChangeProcesses",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIChangeProcesses"
        ],
        "summary": "Delete entity from MCIChangeProcesses",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses({id})/MCMService.checkProgress()": {
      "get": {
        "tags": [
          "MCIChangeProcesses"
        ],
        "summary": "Invoke function checkProgress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MCMService.ProcessProgress"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIChangeProcesses({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "MCIChangeProcesses",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses({id})/processReason": {
      "get": {
        "tags": [
          "MCIChangeProcesses",
          "MCIProcessReasonTypes"
        ],
        "summary": "Get related processReason",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses({id})/processType": {
      "get": {
        "tags": [
          "MCIChangeProcesses",
          "MCIChangeProcessTypes"
        ],
        "summary": "Get related processType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses({id})/status": {
      "get": {
        "tags": [
          "MCIChangeProcesses",
          "MCIStatus"
        ],
        "summary": "Get related status",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "instanceStatus_code",
                  "processStatus_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "instanceStatus",
                  "processStatus",
                  "errors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatus"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses({id})/processData": {
      "get": {
        "tags": [
          "MCIChangeProcesses",
          "MCMInstancesPD"
        ],
        "summary": "Get related processData",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note",
                  "initialDataEntryReady",
                  "locationIdentifiersReady",
                  "finalDataEntryReady",
                  "masterDataReady",
                  "deviceInstallationsReady",
                  "marketLocationsComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "meteringLocationsPD",
                  "marketLocationsPD",
                  "actorsPD"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIChangeProcesses({id})/instanceCharacteristics": {
      "get": {
        "tags": [
          "MCIChangeProcesses",
          "MCIInstanceCharacteristics"
        ],
        "summary": "Get entities from related instanceCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeProcess_id",
                  "changeProcess_id desc",
                  "entityType_code",
                  "entityType_code desc",
                  "modelEntityId",
                  "modelEntityId desc",
                  "characteristic_code",
                  "characteristic_code desc",
                  "value",
                  "value desc",
                  "predecessorRepetitionIndex",
                  "predecessorRepetitionIndex desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "entityType_code",
                  "modelEntityId",
                  "characteristic_code",
                  "value",
                  "predecessorRepetitionIndex"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "entityType",
                  "characteristic"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIInstanceCharacteristics",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIInstanceCharacteristics": {
      "get": {
        "tags": [
          "MCIInstanceCharacteristics"
        ],
        "summary": "Get entities from MCIInstanceCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeProcess_id",
                  "changeProcess_id desc",
                  "entityType_code",
                  "entityType_code desc",
                  "modelEntityId",
                  "modelEntityId desc",
                  "characteristic_code",
                  "characteristic_code desc",
                  "value",
                  "value desc",
                  "predecessorRepetitionIndex",
                  "predecessorRepetitionIndex desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "entityType_code",
                  "modelEntityId",
                  "characteristic_code",
                  "value",
                  "predecessorRepetitionIndex"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "entityType",
                  "characteristic"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIInstanceCharacteristics",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIInstanceCharacteristics({id})": {
      "get": {
        "tags": [
          "MCIInstanceCharacteristics"
        ],
        "summary": "Get entity from MCIInstanceCharacteristics by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "entityType_code",
                  "modelEntityId",
                  "characteristic_code",
                  "value",
                  "predecessorRepetitionIndex"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "entityType",
                  "characteristic"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIInstanceCharacteristics({id})/changeProcess": {
      "get": {
        "tags": [
          "MCIInstanceCharacteristics",
          "MCIChangeProcesses"
        ],
        "summary": "Get related changeProcess",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIInstanceCharacteristics({id})/entityType": {
      "get": {
        "tags": [
          "MCIInstanceCharacteristics",
          "ConfigurableEntityTypes"
        ],
        "summary": "Get related entityType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIInstanceCharacteristics({id})/characteristic": {
      "get": {
        "tags": [
          "MCIInstanceCharacteristics",
          "ConfigurableCharacteristicTypes"
        ],
        "summary": "Get related characteristic",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIStatus": {
      "get": {
        "tags": [
          "MCIStatus"
        ],
        "summary": "Get entities from MCIStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeProcess_id",
                  "changeProcess_id desc",
                  "instanceStatus_code",
                  "instanceStatus_code desc",
                  "processStatus_code",
                  "processStatus_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "instanceStatus_code",
                  "processStatus_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "instanceStatus",
                  "processStatus",
                  "errors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIStatus",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIStatus({id})": {
      "get": {
        "tags": [
          "MCIStatus"
        ],
        "summary": "Get entity from MCIStatus by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "instanceStatus_code",
                  "processStatus_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "instanceStatus",
                  "processStatus",
                  "errors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatus"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIStatus({id})/changeProcess": {
      "get": {
        "tags": [
          "MCIStatus",
          "MCIChangeProcesses"
        ],
        "summary": "Get related changeProcess",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIStatus({id})/instanceStatus": {
      "get": {
        "tags": [
          "MCIStatus",
          "MCIStatusTypes"
        ],
        "summary": "Get related instanceStatus",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIStatus({id})/processStatus": {
      "get": {
        "tags": [
          "MCIStatus",
          "MCIProcessStatusTypes"
        ],
        "summary": "Get related processStatus",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCIStatus({id})/errors": {
      "get": {
        "tags": [
          "MCIStatus",
          "MCIErrors"
        ],
        "summary": "Get entities from related errors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "status_id",
                  "status_id desc",
                  "resolved",
                  "resolved desc",
                  "message",
                  "message desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "status_id",
                  "resolved",
                  "message"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIErrors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIErrors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/PowerRangeTypes": {
      "get": {
        "tags": [
          "PowerRangeTypes"
        ],
        "summary": "Get entities from PowerRangeTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of PowerRangeTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "PowerRangeTypes"
        ],
        "summary": "Add new entity to PowerRangeTypes",
        "requestBody": {
          "description": "CodeList for Power Range",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/PowerRangeTypes('{code}')": {
      "get": {
        "tags": [
          "PowerRangeTypes"
        ],
        "summary": "Get entity from PowerRangeTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "PowerRangeTypes"
        ],
        "summary": "Update entity in PowerRangeTypes",
        "requestBody": {
          "description": "CodeList for Power Range",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "PowerRangeTypes"
        ],
        "summary": "Delete entity from PowerRangeTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Power Range",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/PowerRangeTypes('{code}')/texts": {
      "get": {
        "tags": [
          "PowerRangeTypes",
          "PowerRangeTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of PowerRangeTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "PowerRangeTypes",
          "PowerRangeTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Power Range",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/PowerRangeTypes('{code}')/localized": {
      "get": {
        "tags": [
          "PowerRangeTypes",
          "PowerRangeTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Power Range",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/EnergySourceTypes": {
      "get": {
        "tags": [
          "EnergySourceTypes"
        ],
        "summary": "Get entities from EnergySourceTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of EnergySourceTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "EnergySourceTypes"
        ],
        "summary": "Add new entity to EnergySourceTypes",
        "requestBody": {
          "description": "CodeList for Energy Source Type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/EnergySourceTypes('{code}')": {
      "get": {
        "tags": [
          "EnergySourceTypes"
        ],
        "summary": "Get entity from EnergySourceTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "EnergySourceTypes"
        ],
        "summary": "Update entity in EnergySourceTypes",
        "requestBody": {
          "description": "CodeList for Energy Source Type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "EnergySourceTypes"
        ],
        "summary": "Delete entity from EnergySourceTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Energy Source",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/EnergySourceTypes('{code}')/texts": {
      "get": {
        "tags": [
          "EnergySourceTypes",
          "EnergySourceTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of EnergySourceTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "EnergySourceTypes",
          "EnergySourceTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Energy Source",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/EnergySourceTypes('{code}')/localized": {
      "get": {
        "tags": [
          "EnergySourceTypes",
          "EnergySourceTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Energy Source",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/GridTypes": {
      "get": {
        "tags": [
          "GridTypes"
        ],
        "summary": "Get entities from GridTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of GridTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.GridTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "GridTypes"
        ],
        "summary": "Add new entity to GridTypes",
        "requestBody": {
          "description": "CodeList for Grid",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GridTypes('{code}')": {
      "get": {
        "tags": [
          "GridTypes"
        ],
        "summary": "Get entity from GridTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "GridTypes"
        ],
        "summary": "Update entity in GridTypes",
        "requestBody": {
          "description": "CodeList for Grid",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "GridTypes"
        ],
        "summary": "Delete entity from GridTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Grid",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/GridTypes('{code}')/texts": {
      "get": {
        "tags": [
          "GridTypes",
          "GridTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of GridTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.GridTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "GridTypes",
          "GridTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Grid",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/GridTypes('{code}')/localized": {
      "get": {
        "tags": [
          "GridTypes",
          "GridTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Grid",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/ActorExternalReferenceTypes": {
      "get": {
        "tags": [
          "ActorExternalReferenceTypes"
        ],
        "summary": "Get entities from ActorExternalReferenceTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorExternalReferenceTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorExternalReferenceTypes"
        ],
        "summary": "Add new entity to ActorExternalReferenceTypes",
        "requestBody": {
          "description": "CodeList for External References to Actors",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorExternalReferenceTypes('{code}')": {
      "get": {
        "tags": [
          "ActorExternalReferenceTypes"
        ],
        "summary": "Get entity from ActorExternalReferenceTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ActorExternalReferenceTypes"
        ],
        "summary": "Update entity in ActorExternalReferenceTypes",
        "requestBody": {
          "description": "CodeList for External References to Actors",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ActorExternalReferenceTypes"
        ],
        "summary": "Delete entity from ActorExternalReferenceTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Reference Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorExternalReferenceTypes('{code}')/texts": {
      "get": {
        "tags": [
          "ActorExternalReferenceTypes",
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorExternalReferenceTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorExternalReferenceTypes",
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Reference Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorExternalReferenceTypes('{code}')/localized": {
      "get": {
        "tags": [
          "ActorExternalReferenceTypes",
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Reference Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ExternalReferenceSystems": {
      "get": {
        "tags": [
          "ExternalReferenceSystems"
        ],
        "summary": "Get entities from ExternalReferenceSystems",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ExternalReferenceSystems",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ExternalReferenceSystems"
        ],
        "summary": "Add new entity to ExternalReferenceSystems",
        "requestBody": {
          "description": "CodeList for IT Systems which carry external references to MCM entities",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ExternalReferenceSystems('{code}')": {
      "get": {
        "tags": [
          "ExternalReferenceSystems"
        ],
        "summary": "Get entity from ExternalReferenceSystems by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ExternalReferenceSystems"
        ],
        "summary": "Update entity in ExternalReferenceSystems",
        "requestBody": {
          "description": "CodeList for IT Systems which carry external references to MCM entities",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalReferenceSystems"
        ],
        "summary": "Delete entity from ExternalReferenceSystems",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Referenced IT-System",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/ExternalReferenceSystems('{code}')/texts": {
      "get": {
        "tags": [
          "ExternalReferenceSystems",
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ExternalReferenceSystems_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ExternalReferenceSystems",
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Referenced IT-System",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/ExternalReferenceSystems('{code}')/localized": {
      "get": {
        "tags": [
          "ExternalReferenceSystems",
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Referenced IT-System",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/MeasuringTypes": {
      "get": {
        "tags": [
          "MeasuringTypes"
        ],
        "summary": "Get entities from MeasuringTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasuringTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasuringTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasuringTypes"
        ],
        "summary": "Add new entity to MeasuringTypes",
        "requestBody": {
          "description": "CodeList for Measuring Type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeasuringTypes('{code}')": {
      "get": {
        "tags": [
          "MeasuringTypes"
        ],
        "summary": "Get entity from MeasuringTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeasuringTypes"
        ],
        "summary": "Update entity in MeasuringTypes",
        "requestBody": {
          "description": "CodeList for Measuring Type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeasuringTypes"
        ],
        "summary": "Delete entity from MeasuringTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Measuring device type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeasuringTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MeasuringTypes",
          "MeasuringTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasuringTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasuringTypes",
          "MeasuringTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Measuring device type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeasuringTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MeasuringTypes",
          "MeasuringTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Measuring device type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/OrdererTypes": {
      "get": {
        "tags": [
          "OrdererTypes"
        ],
        "summary": "Get entities from OrdererTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrdererTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.OrdererTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "OrdererTypes"
        ],
        "summary": "Add new entity to OrdererTypes",
        "requestBody": {
          "description": "CodeList for Orderer/Auftraggeber",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.OrdererTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrdererTypes('{code}')": {
      "get": {
        "tags": [
          "OrdererTypes"
        ],
        "summary": "Get entity from OrdererTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "OrdererTypes"
        ],
        "summary": "Update entity in OrdererTypes",
        "requestBody": {
          "description": "CodeList for Orderer/Auftraggeber",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.OrdererTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "OrdererTypes"
        ],
        "summary": "Delete entity from OrdererTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Orderering Party",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/OrdererTypes('{code}')/texts": {
      "get": {
        "tags": [
          "OrdererTypes",
          "OrdererTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrdererTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "OrdererTypes",
          "OrdererTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.OrdererTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Orderering Party",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/OrdererTypes('{code}')/localized": {
      "get": {
        "tags": [
          "OrdererTypes",
          "OrdererTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Orderering Party",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/MCMFormulaConfiguration": {
      "get": {
        "tags": [
          "MCMFormulaConfiguration"
        ],
        "summary": "Get entities from MCMFormulaConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "idText",
                  "idText desc",
                  "expression",
                  "expression desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "expression",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "formulaSteps"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMFormulaConfiguration",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMFormulaConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCMFormulaConfiguration"
        ],
        "summary": "Add new entity to MCMFormulaConfiguration",
        "requestBody": {
          "description": "Enhance formula definition with virtual fields for use in UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCMFormulaConfiguration-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMFormulaConfiguration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMFormulaConfiguration({id})": {
      "get": {
        "tags": [
          "MCMFormulaConfiguration"
        ],
        "summary": "Get entity from MCMFormulaConfiguration by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "expression",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "formulaSteps"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMFormulaConfiguration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCMFormulaConfiguration"
        ],
        "summary": "Update entity in MCMFormulaConfiguration",
        "requestBody": {
          "description": "Enhance formula definition with virtual fields for use in UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCMFormulaConfiguration-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCMFormulaConfiguration"
        ],
        "summary": "Delete entity from MCMFormulaConfiguration",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMFormulaConfiguration({id})/formulaSteps": {
      "get": {
        "tags": [
          "MCMFormulaConfiguration",
          "MCMFormulaSteps"
        ],
        "summary": "Get entities from related formulaSteps",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "formula_id desc",
                  "step",
                  "step desc",
                  "type",
                  "type desc",
                  "value",
                  "value desc",
                  "ref1",
                  "ref1 desc",
                  "ref2",
                  "ref2 desc",
                  "meteringTask_id",
                  "meteringTask_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMFormulaSteps",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMFormulaSteps"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/LocationStructureActors": {
      "get": {
        "tags": [
          "LocationStructureActors"
        ],
        "summary": "Get entities from LocationStructureActors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "marketLocation_id",
                  "marketLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "marketLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of LocationStructureActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.LocationStructureActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LocationStructureActors({id})": {
      "get": {
        "tags": [
          "LocationStructureActors"
        ],
        "summary": "Get entity from LocationStructureActors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "marketLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.LocationStructureActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/LocationStructureActors({id})/marketLocation": {
      "get": {
        "tags": [
          "LocationStructureActors",
          "MarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "modelMarketLocation_id",
                  "marketLocationId",
                  "virtualMarketLocation",
                  "address_id",
                  "billingProcedure",
                  "settlementProcedure",
                  "removalDate",
                  "locationRemoved",
                  "commercialSetupDate",
                  "locationComplete"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "type",
                  "direction",
                  "modelMarketLocation",
                  "calculationRules",
                  "actors",
                  "actorsMapping",
                  "address"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/LocationStructureMeteringLocations": {
      "get": {
        "tags": [
          "LocationStructureMeteringLocations"
        ],
        "summary": "Get entities from LocationStructureMeteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocationIdentifier",
                  "meteringLocationIdentifier desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "type_code",
                  "type_code desc",
                  "idText",
                  "idText desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocationIdentifier",
                  "measurementConceptInstance_id",
                  "type_code",
                  "idText",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of LocationStructureMeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.LocationStructureMeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LocationStructureMeteringLocations({id})": {
      "get": {
        "tags": [
          "LocationStructureMeteringLocations"
        ],
        "summary": "Get entity from LocationStructureMeteringLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocationIdentifier",
                  "measurementConceptInstance_id",
                  "type_code",
                  "idText",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.LocationStructureMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/LocationStructureMeteringLocations({id})/meteringTasks": {
      "get": {
        "tags": [
          "LocationStructureMeteringLocations",
          "LocationStructureMeteringTasks"
        ],
        "summary": "Get entities from related meteringTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "direction_code",
                  "direction_code desc",
                  "type_code",
                  "type_code desc",
                  "plannedMeteringProcedure_code",
                  "plannedMeteringProcedure_code desc",
                  "plannedRegisterCode",
                  "plannedRegisterCode desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "type_code",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "position"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of LocationStructureMeteringTasks",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.LocationStructureMeteringTasks"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/LocationStructureMeteringTasks": {
      "get": {
        "tags": [
          "LocationStructureMeteringTasks"
        ],
        "summary": "Get entities from LocationStructureMeteringTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "direction_code",
                  "direction_code desc",
                  "type_code",
                  "type_code desc",
                  "plannedMeteringProcedure_code",
                  "plannedMeteringProcedure_code desc",
                  "plannedRegisterCode",
                  "plannedRegisterCode desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "type_code",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "position"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of LocationStructureMeteringTasks",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.LocationStructureMeteringTasks"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LocationStructureMeteringTasks({id})": {
      "get": {
        "tags": [
          "LocationStructureMeteringTasks"
        ],
        "summary": "Get entity from LocationStructureMeteringTasks by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "direction_code",
                  "type_code",
                  "plannedMeteringProcedure_code",
                  "plannedRegisterCode",
                  "position"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.LocationStructureMeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationStructure": {
      "get": {
        "tags": [
          "MarketLocationStructure"
        ],
        "summary": "Get entities from MarketLocationStructure",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "marketLocationIdentifier",
                  "marketLocationIdentifier desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "marketLocation_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "marketLocationIdentifier",
                  "measurementConceptInstance_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "type",
                  "direction",
                  "meteringLocations",
                  "actors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationStructure",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationStructure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationStructure({marketLocation_id})": {
      "get": {
        "tags": [
          "MarketLocationStructure"
        ],
        "summary": "Get entity from MarketLocationStructure by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "marketLocation_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "marketLocationIdentifier",
                  "measurementConceptInstance_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "type",
                  "direction",
                  "meteringLocations",
                  "actors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationStructure"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "marketLocation_id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationStructure({marketLocation_id})/type": {
      "get": {
        "tags": [
          "MarketLocationStructure",
          "MarketLocationTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "marketLocation_id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationStructure({marketLocation_id})/direction": {
      "get": {
        "tags": [
          "MarketLocationStructure",
          "DirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "marketLocation_id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationStructure({marketLocation_id})/meteringLocations": {
      "get": {
        "tags": [
          "MarketLocationStructure",
          "LocationStructureMeteringLocations"
        ],
        "summary": "Get entities from related meteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocationIdentifier",
                  "meteringLocationIdentifier desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "type_code",
                  "type_code desc",
                  "idText",
                  "idText desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocationIdentifier",
                  "measurementConceptInstance_id",
                  "type_code",
                  "idText",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of LocationStructureMeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.LocationStructureMeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "marketLocation_id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MarketLocationStructure({marketLocation_id})/actors": {
      "get": {
        "tags": [
          "MarketLocationStructure",
          "LocationStructureActors"
        ],
        "summary": "Get entities from related actors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "marketLocation_id",
                  "marketLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "idText",
                  "type_code",
                  "direction_code",
                  "position",
                  "marketLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of LocationStructureActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.LocationStructureActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "marketLocation_id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels": {
      "get": {
        "tags": [
          "MeasurementConceptModels"
        ],
        "summary": "Get entities from MeasurementConceptModels",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "idText",
                  "idText desc",
                  "name",
                  "name desc",
                  "description",
                  "description desc",
                  "conceptType_code",
                  "conceptType_code desc",
                  "measurementClass_id",
                  "measurementClass_id desc",
                  "status_code",
                  "status_code desc",
                  "validFrom",
                  "validFrom desc",
                  "validTo",
                  "validTo desc",
                  "division_code",
                  "division_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasurementConceptModels",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeasurementConceptModels({id})": {
      "get": {
        "tags": [
          "MeasurementConceptModels"
        ],
        "summary": "Get entity from MeasurementConceptModels by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/conceptType": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MCDModelTypes"
        ],
        "summary": "Get related conceptType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "readOnly",
                  "deletable",
                  "updateable",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDModelTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/measurementClass": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MeasurementConceptClasses"
        ],
        "summary": "Get related measurementClass",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/status": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MCDStatusTypes"
        ],
        "summary": "Get related status",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "isActivate_allowed",
                  "isActivate_hidden",
                  "isDeactivate_allowed",
                  "isDeactivate_hidden",
                  "isInProgress_allowed",
                  "isInProgress_hidden",
                  "isEdit_allowed",
                  "isEdit_hidden",
                  "isCopy_allowed",
                  "isCopy_hidden",
                  "isDelete_allowed",
                  "isDelete_hidden",
                  "code",
                  "criticality"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/division": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "DivisionTypes"
        ],
        "summary": "Get related division",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/marketLocations": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MCDMarketLocations"
        ],
        "summary": "Get entities from related marketLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "idText",
                  "idText desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "type_code",
                  "type_code desc",
                  "virtualMarketLocation",
                  "virtualMarketLocation desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "measurementConceptModel_id",
                  "type_code",
                  "virtualMarketLocation",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "type",
                  "direction",
                  "actorsMapping",
                  "calculationRules"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/modelOperands": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MCDOperandMappings"
        ],
        "summary": "Get entities from related modelOperands",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "operand",
                  "operand desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "meteringTaskType_code",
                  "meteringTaskType_code desc",
                  "meteringTaskDirection_code",
                  "meteringTaskDirection_code desc",
                  "meteringLocationIdText",
                  "meteringLocationIdText desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptModel_id",
                  "operand",
                  "meteringTask_id",
                  "meteringTaskType_code",
                  "meteringTaskDirection_code",
                  "meteringLocationIdText",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringTask",
                  "meteringTaskType",
                  "meteringTaskDirection"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDOperandMappings",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDOperandMappings"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/modelRepeatableOperands": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Get entities from related modelRepeatableOperands",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "operand",
                  "operand desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "position",
                  "position desc",
                  "isInvalid",
                  "isInvalid desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "measurementConceptModel_id",
                  "operand",
                  "meteringLocation_id",
                  "position",
                  "isInvalid"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDRepeatableOperandMappings",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasurementConceptModels",
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Add new entity to related modelRepeatableOperands",
        "requestBody": {
          "description": "Mapping of malo formulas operands to metering locations / Formel Operanden Zuordnung zu Messlokationen ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/meteringLocationPurposes": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Get entities from related meteringLocationPurposes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "purpose_code",
                  "purpose_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "measurementConceptModel_id",
                  "meteringLocation_id",
                  "purpose_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringLocation",
                  "purpose"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMeteringLocationPurposes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasurementConceptModels",
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Add new entity to related meteringLocationPurposes",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/texts": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MeasurementConceptModels_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "id",
                  "id desc",
                  "name",
                  "name desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasurementConceptModels_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasurementConceptModels",
          "MeasurementConceptModels_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptModels({id})/localized": {
      "get": {
        "tags": [
          "MeasurementConceptModels",
          "MeasurementConceptModels_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocations": {
      "get": {
        "tags": [
          "MCDMarketLocations"
        ],
        "summary": "Get entities from MCDMarketLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "idText",
                  "idText desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "type_code",
                  "type_code desc",
                  "virtualMarketLocation",
                  "virtualMarketLocation desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "measurementConceptModel_id",
                  "type_code",
                  "virtualMarketLocation",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "type",
                  "direction",
                  "actorsMapping",
                  "calculationRules"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDMarketLocations({id})": {
      "get": {
        "tags": [
          "MCDMarketLocations"
        ],
        "summary": "Get entity from MCDMarketLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "measurementConceptModel_id",
                  "type_code",
                  "virtualMarketLocation",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "type",
                  "direction",
                  "actorsMapping",
                  "calculationRules"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocations({id})/measurementConceptModel": {
      "get": {
        "tags": [
          "MCDMarketLocations",
          "MeasurementConceptModels"
        ],
        "summary": "Get related measurementConceptModel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocations({id})/type": {
      "get": {
        "tags": [
          "MCDMarketLocations",
          "MarketLocationTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocations({id})/direction": {
      "get": {
        "tags": [
          "MCDMarketLocations",
          "DirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocations({id})/actorsMapping": {
      "get": {
        "tags": [
          "MCDMarketLocations",
          "MCDMarketLocationActors"
        ],
        "summary": "Get entities from related actorsMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "actor_id",
                  "actor_id desc",
                  "actorIdText",
                  "actorIdText desc",
                  "actorDirection_code",
                  "actorDirection_code desc",
                  "actorType_code",
                  "actorType_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "actor_id",
                  "actorIdText",
                  "actorDirection_code",
                  "actorType_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "actor",
                  "actorDirection",
                  "actorType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocationActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocations({id})/calculationRules": {
      "get": {
        "tags": [
          "MCDMarketLocations",
          "MCDCalculationRules"
        ],
        "summary": "Get entities from related calculationRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "meteringProcedure_code",
                  "meteringProcedure_code desc",
                  "formula_id",
                  "formula_id desc",
                  "registerCode",
                  "registerCode desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "formula_id",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "formula",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDCalculationRules",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDOperandMappings": {
      "get": {
        "tags": [
          "MCDOperandMappings"
        ],
        "summary": "Get entities from MCDOperandMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "operand",
                  "operand desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "meteringTaskType_code",
                  "meteringTaskType_code desc",
                  "meteringTaskDirection_code",
                  "meteringTaskDirection_code desc",
                  "meteringLocationIdText",
                  "meteringLocationIdText desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptModel_id",
                  "operand",
                  "meteringTask_id",
                  "meteringTaskType_code",
                  "meteringTaskDirection_code",
                  "meteringLocationIdText",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringTask",
                  "meteringTaskType",
                  "meteringTaskDirection"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDOperandMappings",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDOperandMappings"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDOperandMappings({id})": {
      "get": {
        "tags": [
          "MCDOperandMappings"
        ],
        "summary": "Get entity from MCDOperandMappings by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptModel_id",
                  "operand",
                  "meteringTask_id",
                  "meteringTaskType_code",
                  "meteringTaskDirection_code",
                  "meteringLocationIdText",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringTask",
                  "meteringTaskType",
                  "meteringTaskDirection"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDOperandMappings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDOperandMappings({id})/measurementConceptModel": {
      "get": {
        "tags": [
          "MCDOperandMappings",
          "MeasurementConceptModels"
        ],
        "summary": "Get related measurementConceptModel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDOperandMappings({id})/meteringTask": {
      "get": {
        "tags": [
          "MCDOperandMappings",
          "MCCMeteringTasks"
        ],
        "summary": "Get related meteringTask",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDOperandMappings({id})/meteringTaskType": {
      "get": {
        "tags": [
          "MCDOperandMappings",
          "MeteringTaskTypes"
        ],
        "summary": "Get related meteringTaskType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "division",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDOperandMappings({id})/meteringTaskDirection": {
      "get": {
        "tags": [
          "MCDOperandMappings",
          "DirectionTypes"
        ],
        "summary": "Get related meteringTaskDirection",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDCalculationRules": {
      "get": {
        "tags": [
          "MCDCalculationRules"
        ],
        "summary": "Get entities from MCDCalculationRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "meteringProcedure_code",
                  "meteringProcedure_code desc",
                  "formula_id",
                  "formula_id desc",
                  "registerCode",
                  "registerCode desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "formula_id",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "formula",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDCalculationRules",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDCalculationRules({id})": {
      "get": {
        "tags": [
          "MCDCalculationRules"
        ],
        "summary": "Get entity from MCDCalculationRules by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "formula_id",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "formula",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDCalculationRules({id})/marketLocation": {
      "get": {
        "tags": [
          "MCDCalculationRules",
          "MCDMarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "measurementConceptModel_id",
                  "type_code",
                  "virtualMarketLocation",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "type",
                  "direction",
                  "actorsMapping",
                  "calculationRules"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDCalculationRules({id})/meteringProcedure": {
      "get": {
        "tags": [
          "MCDCalculationRules",
          "MeteringProcedureTypes"
        ],
        "summary": "Get related meteringProcedure",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDCalculationRules({id})/formula": {
      "get": {
        "tags": [
          "MCDCalculationRules",
          "MCMFormulas"
        ],
        "summary": "Get related formula",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "expression",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "formulaSteps"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMFormulas"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDCalculationRules({id})/usages": {
      "get": {
        "tags": [
          "MCDCalculationRules",
          "MCDMarketLocationUsages"
        ],
        "summary": "Get entities from related usages",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "calculationRule_id",
                  "calculationRule_id desc",
                  "usage_code",
                  "usage_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "calculationRule_id",
                  "usage_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calculationRule",
                  "usage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocationUsages",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocationUsages"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationActors": {
      "get": {
        "tags": [
          "MCDMarketLocationActors"
        ],
        "summary": "Get entities from MCDMarketLocationActors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "actor_id",
                  "actor_id desc",
                  "actorIdText",
                  "actorIdText desc",
                  "actorDirection_code",
                  "actorDirection_code desc",
                  "actorType_code",
                  "actorType_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "actor_id",
                  "actorIdText",
                  "actorDirection_code",
                  "actorType_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "actor",
                  "actorDirection",
                  "actorType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocationActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDMarketLocationActors({id})": {
      "get": {
        "tags": [
          "MCDMarketLocationActors"
        ],
        "summary": "Get entity from MCDMarketLocationActors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "actor_id",
                  "actorIdText",
                  "actorDirection_code",
                  "actorType_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "actor",
                  "actorDirection",
                  "actorType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationActors({id})/marketLocation": {
      "get": {
        "tags": [
          "MCDMarketLocationActors",
          "MCDMarketLocations"
        ],
        "summary": "Get related marketLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "measurementConceptModel_id",
                  "type_code",
                  "virtualMarketLocation",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "type",
                  "direction",
                  "actorsMapping",
                  "calculationRules"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationActors({id})/actor": {
      "get": {
        "tags": [
          "MCDMarketLocationActors",
          "MCCActors"
        ],
        "summary": "Get related actor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationActors({id})/actorDirection": {
      "get": {
        "tags": [
          "MCDMarketLocationActors",
          "ActorDirectionTypes"
        ],
        "summary": "Get related actorDirection",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationActors({id})/actorType": {
      "get": {
        "tags": [
          "MCDMarketLocationActors",
          "ActorTypes"
        ],
        "summary": "Get related actorType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationUsages": {
      "get": {
        "tags": [
          "MCDMarketLocationUsages"
        ],
        "summary": "Get entities from MCDMarketLocationUsages",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "calculationRule_id",
                  "calculationRule_id desc",
                  "usage_code",
                  "usage_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "calculationRule_id",
                  "usage_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calculationRule",
                  "usage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocationUsages",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocationUsages"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDMarketLocationUsages({id})": {
      "get": {
        "tags": [
          "MCDMarketLocationUsages"
        ],
        "summary": "Get entity from MCDMarketLocationUsages by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "calculationRule_id",
                  "usage_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calculationRule",
                  "usage"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMarketLocationUsages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationUsages({id})/calculationRule": {
      "get": {
        "tags": [
          "MCDMarketLocationUsages",
          "MCDCalculationRules"
        ],
        "summary": "Get related calculationRule",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "meteringProcedure_code",
                  "formula_id",
                  "registerCode",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "meteringProcedure",
                  "formula",
                  "usages"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMarketLocationUsages({id})/usage": {
      "get": {
        "tags": [
          "MCDMarketLocationUsages",
          "MarketLocationUsageTypes"
        ],
        "summary": "Get related usage",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMFormulas": {
      "get": {
        "tags": [
          "MCMFormulas"
        ],
        "summary": "Get entities from MCMFormulas",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "idText",
                  "idText desc",
                  "expression",
                  "expression desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "expression",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "formulaSteps"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMFormulas",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMFormulas"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMFormulas({id})": {
      "get": {
        "tags": [
          "MCMFormulas"
        ],
        "summary": "Get entity from MCMFormulas by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "expression",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "formulaSteps"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMFormulas"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMFormulas({id})/formulaSteps": {
      "get": {
        "tags": [
          "MCMFormulas",
          "MCMFormulaSteps"
        ],
        "summary": "Get entities from related formulaSteps",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "formula_id desc",
                  "step",
                  "step desc",
                  "type",
                  "type desc",
                  "value",
                  "value desc",
                  "ref1",
                  "ref1 desc",
                  "ref2",
                  "ref2 desc",
                  "meteringTask_id",
                  "meteringTask_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMFormulaSteps",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMFormulaSteps"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCMFormulaSteps": {
      "get": {
        "tags": [
          "MCMFormulaSteps"
        ],
        "summary": "Get entities from MCMFormulaSteps",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "formula_id desc",
                  "step",
                  "step desc",
                  "type",
                  "type desc",
                  "value",
                  "value desc",
                  "ref1",
                  "ref1 desc",
                  "ref2",
                  "ref2 desc",
                  "meteringTask_id",
                  "meteringTask_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCMFormulaSteps",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCMFormulaSteps"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCMFormulaSteps(formula_id={formula_id},step={step})": {
      "get": {
        "tags": [
          "MCMFormulaSteps"
        ],
        "summary": "Get entity from MCMFormulaSteps by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "formula_id",
                  "step",
                  "type",
                  "value",
                  "ref1",
                  "ref2",
                  "meteringTask_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMFormulaSteps"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "formula_id",
          "in": "path",
          "description": "key: formula_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "name": "step",
          "in": "path",
          "description": "key: step",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ]
    },
    "/MCMFormulaSteps(formula_id={formula_id},step={step})/meteringTask": {
      "get": {
        "tags": [
          "MCMFormulaSteps",
          "MCCMeteringTasks"
        ],
        "summary": "Get related meteringTask",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "formula_id",
          "in": "path",
          "description": "key: formula_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "name": "step",
          "in": "path",
          "description": "key: step",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ]
    },
    "/MeasurementConceptClasses": {
      "get": {
        "tags": [
          "MeasurementConceptClasses"
        ],
        "summary": "Get entities from MeasurementConceptClasses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "idText",
                  "idText desc",
                  "name",
                  "name desc",
                  "description",
                  "description desc",
                  "classType_code",
                  "classType_code desc",
                  "division_code",
                  "division_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasurementConceptClasses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeasurementConceptClasses({id})": {
      "get": {
        "tags": [
          "MeasurementConceptClasses"
        ],
        "summary": "Get entity from MeasurementConceptClasses by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses({id})/classType": {
      "get": {
        "tags": [
          "MeasurementConceptClasses",
          "MCClassTypes"
        ],
        "summary": "Get related classType",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "readOnly",
                  "deletable",
                  "updateable",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCClassTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses({id})/division": {
      "get": {
        "tags": [
          "MeasurementConceptClasses",
          "DivisionTypes"
        ],
        "summary": "Get related division",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses({id})/meteringLocations": {
      "get": {
        "tags": [
          "MeasurementConceptClasses",
          "MCCMeteringLocations"
        ],
        "summary": "Get entities from related meteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptClass_id",
                  "measurementConceptClass_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "description",
                  "description desc",
                  "optional",
                  "optional desc",
                  "repeatable",
                  "repeatable desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses({id})/actors": {
      "get": {
        "tags": [
          "MeasurementConceptClasses",
          "MCCActors"
        ],
        "summary": "Get entities from related actors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptClass_id",
                  "measurementConceptClass_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "optional",
                  "optional desc",
                  "repeatable",
                  "repeatable desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "energySource_code",
                  "energySource_code desc",
                  "powerRange_code",
                  "powerRange_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses({id})/texts": {
      "get": {
        "tags": [
          "MeasurementConceptClasses",
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "id",
                  "id desc",
                  "name",
                  "name desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasurementConceptClasses_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasurementConceptClasses",
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses({id})/localized": {
      "get": {
        "tags": [
          "MeasurementConceptClasses",
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations": {
      "get": {
        "tags": [
          "MCCMeteringLocations"
        ],
        "summary": "Get entities from MCCMeteringLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptClass_id",
                  "measurementConceptClass_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "description",
                  "description desc",
                  "optional",
                  "optional desc",
                  "repeatable",
                  "repeatable desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringLocations",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCCMeteringLocations({id})": {
      "get": {
        "tags": [
          "MCCMeteringLocations"
        ],
        "summary": "Get entity from MCCMeteringLocations by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/measurementConceptClass": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MeasurementConceptClasses"
        ],
        "summary": "Get related measurementConceptClass",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/type": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MeteringLocationTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/meteringTasks": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MCCMeteringTasks"
        ],
        "summary": "Get entities from related meteringTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringTasks",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/predecessors": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MCCNodeConnections"
        ],
        "summary": "Get entities from related predecessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCMeteringLocations",
          "MCCNodeConnections"
        ],
        "summary": "Add new entity to related predecessors",
        "requestBody": {
          "description": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/successors": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MCCNodeConnections"
        ],
        "summary": "Get entities from related successors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCMeteringLocations",
          "MCCNodeConnections"
        ],
        "summary": "Add new entity to related successors",
        "requestBody": {
          "description": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/texts": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MCCMeteringLocations_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "ID_texts",
                  "ID_texts desc",
                  "locale",
                  "locale desc",
                  "id",
                  "id desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "ID_texts",
                  "locale",
                  "id",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringLocations_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCMeteringLocations",
          "MCCMeteringLocations_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations({id})/localized": {
      "get": {
        "tags": [
          "MCCMeteringLocations",
          "MCCMeteringLocations_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "ID_texts",
                  "locale",
                  "id",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringTasks": {
      "get": {
        "tags": [
          "MCCMeteringTasks"
        ],
        "summary": "Get entities from MCCMeteringTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "type_code",
                  "type_code desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringTasks",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCCMeteringTasks({id})": {
      "get": {
        "tags": [
          "MCCMeteringTasks"
        ],
        "summary": "Get entity from MCCMeteringTasks by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringTasks({id})/meteringLocation": {
      "get": {
        "tags": [
          "MCCMeteringTasks",
          "MCCMeteringLocations"
        ],
        "summary": "Get related meteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringTasks({id})/type": {
      "get": {
        "tags": [
          "MCCMeteringTasks",
          "MeteringTaskTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "division",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringTasks({id})/meteringProcedures": {
      "get": {
        "tags": [
          "MCCMeteringTasks",
          "MCCMeteringProcedures"
        ],
        "summary": "Get entities from related meteringProcedures",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "meteringProcedure_code",
                  "meteringProcedure_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringTask_id",
                  "meteringProcedure_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask",
                  "meteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringProcedures",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringProcedures"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringTasks({id})/direction": {
      "get": {
        "tags": [
          "MCCMeteringTasks",
          "DirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringProcedures": {
      "get": {
        "tags": [
          "MCCMeteringProcedures"
        ],
        "summary": "Get entities from MCCMeteringProcedures",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "meteringTask_id",
                  "meteringTask_id desc",
                  "meteringProcedure_code",
                  "meteringProcedure_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringTask_id",
                  "meteringProcedure_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask",
                  "meteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringProcedures",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringProcedures"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCCMeteringProcedures({id})": {
      "get": {
        "tags": [
          "MCCMeteringProcedures"
        ],
        "summary": "Get entity from MCCMeteringProcedures by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringTask_id",
                  "meteringProcedure_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringTask",
                  "meteringProcedure"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringProcedures"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringProcedures({id})/meteringTask": {
      "get": {
        "tags": [
          "MCCMeteringProcedures",
          "MCCMeteringTasks"
        ],
        "summary": "Get related meteringTask",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "meteringLocation_id",
                  "type_code",
                  "direction_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocation",
                  "type",
                  "meteringProcedures",
                  "direction"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringProcedures({id})/meteringProcedure": {
      "get": {
        "tags": [
          "MCCMeteringProcedures",
          "MeteringProcedureTypes"
        ],
        "summary": "Get related meteringProcedure",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors": {
      "get": {
        "tags": [
          "MCCActors"
        ],
        "summary": "Get entities from MCCActors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptClass_id",
                  "measurementConceptClass_id desc",
                  "idText",
                  "idText desc",
                  "type_code",
                  "type_code desc",
                  "optional",
                  "optional desc",
                  "repeatable",
                  "repeatable desc",
                  "direction_code",
                  "direction_code desc",
                  "position",
                  "position desc",
                  "energySource_code",
                  "energySource_code desc",
                  "powerRange_code",
                  "powerRange_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCCActors({id})": {
      "get": {
        "tags": [
          "MCCActors"
        ],
        "summary": "Get entity from MCCActors by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/measurementConceptClass": {
      "get": {
        "tags": [
          "MCCActors",
          "MeasurementConceptClasses"
        ],
        "summary": "Get related measurementConceptClass",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/type": {
      "get": {
        "tags": [
          "MCCActors",
          "ActorTypes"
        ],
        "summary": "Get related type",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/direction": {
      "get": {
        "tags": [
          "MCCActors",
          "ActorDirectionTypes"
        ],
        "summary": "Get related direction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/energySource": {
      "get": {
        "tags": [
          "MCCActors",
          "EnergySourceTypes"
        ],
        "summary": "Get related energySource",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/powerRange": {
      "get": {
        "tags": [
          "MCCActors",
          "PowerRangeTypes"
        ],
        "summary": "Get related powerRange",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/marketLocationsMapping": {
      "get": {
        "tags": [
          "MCCActors",
          "MCDMarketLocationActors"
        ],
        "summary": "Get entities from related marketLocationsMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "marketLocation_id",
                  "marketLocation_id desc",
                  "actor_id",
                  "actor_id desc",
                  "actorIdText",
                  "actorIdText desc",
                  "actorDirection_code",
                  "actorDirection_code desc",
                  "actorType_code",
                  "actorType_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "marketLocation_id",
                  "actor_id",
                  "actorIdText",
                  "actorDirection_code",
                  "actorType_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "marketLocation",
                  "actor",
                  "actorDirection",
                  "actorType"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMarketLocationActors",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/predecessors": {
      "get": {
        "tags": [
          "MCCActors",
          "MCCNodeConnections"
        ],
        "summary": "Get entities from related predecessors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCActors",
          "MCCNodeConnections"
        ],
        "summary": "Add new entity to related predecessors",
        "requestBody": {
          "description": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCActors({id})/successors": {
      "get": {
        "tags": [
          "MCCActors",
          "MCCNodeConnections"
        ],
        "summary": "Get entities from related successors",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCActors",
          "MCCNodeConnections"
        ],
        "summary": "Add new entity to related successors",
        "requestBody": {
          "description": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstances": {
      "get": {
        "tags": [
          "InputMCMInstances"
        ],
        "summary": "Get entities from InputMCMInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "measurementModel_id",
                  "measurementModel_id desc",
                  "measurementClass_id",
                  "measurementClass_id desc",
                  "division_code",
                  "division_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "measurementModel_id",
                  "measurementClass_id",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "addresses",
                  "measurementModel",
                  "measurementClass",
                  "division",
                  "changeProcesses"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of InputMCMInstances",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.InputMCMInstances"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "InputMCMInstances"
        ],
        "summary": "Add new entity to InputMCMInstances",
        "requestBody": {
          "description": "Measurement Concept Instance / Messkonzept Instanz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCMInstances-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/InputMCMInstances({id})": {
      "get": {
        "tags": [
          "InputMCMInstances"
        ],
        "summary": "Get entity from InputMCMInstances by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "measurementModel_id",
                  "measurementClass_id",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "addresses",
                  "measurementModel",
                  "measurementClass",
                  "division",
                  "changeProcesses"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "InputMCMInstances"
        ],
        "summary": "Update entity in InputMCMInstances",
        "requestBody": {
          "description": "Measurement Concept Instance / Messkonzept Instanz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCMInstances-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "InputMCMInstances"
        ],
        "summary": "Delete entity from InputMCMInstances",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstances({id})/addresses": {
      "get": {
        "tags": [
          "InputMCMInstances",
          "ObjectAddresses"
        ],
        "summary": "Get entities from related addresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "country_code",
                  "country_code desc",
                  "cityID",
                  "cityID desc",
                  "cityName",
                  "cityName desc",
                  "postalCode",
                  "postalCode desc",
                  "streetID",
                  "streetID desc",
                  "streetName",
                  "streetName desc",
                  "houseNumber",
                  "houseNumber desc",
                  "floorNumber",
                  "floorNumber desc",
                  "supplement",
                  "supplement desc",
                  "houseNumberSupplement",
                  "houseNumberSupplement desc",
                  "latitude",
                  "latitude desc",
                  "longitude",
                  "longitude desc",
                  "cityDistrict",
                  "cityDistrict desc",
                  "timeZone",
                  "timeZone desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "country_code",
                  "cityID",
                  "cityName",
                  "postalCode",
                  "streetID",
                  "streetName",
                  "houseNumber",
                  "floorNumber",
                  "supplement",
                  "houseNumberSupplement",
                  "latitude",
                  "longitude",
                  "cityDistrict",
                  "timeZone"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "country"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ObjectAddresses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "InputMCMInstances",
          "ObjectAddresses"
        ],
        "summary": "Add new entity to related addresses",
        "requestBody": {
          "description": "MCM Instance Object Addresses - Virtual fields for instance ui",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ObjectAddresses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstances({id})/measurementModel": {
      "get": {
        "tags": [
          "InputMCMInstances",
          "MeasurementConceptModels"
        ],
        "summary": "Get related measurementModel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstances({id})/measurementClass": {
      "get": {
        "tags": [
          "InputMCMInstances",
          "MeasurementConceptClasses"
        ],
        "summary": "Get related measurementClass",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "name",
                  "description",
                  "classType_code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classType",
                  "division",
                  "meteringLocations",
                  "actors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstances({id})/division": {
      "get": {
        "tags": [
          "InputMCMInstances",
          "DivisionTypes"
        ],
        "summary": "Get related division",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstances({id})/changeProcesses": {
      "get": {
        "tags": [
          "InputMCMInstances",
          "InputMCIChangeProcesses"
        ],
        "summary": "Get entities from related changeProcesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "externalOrderId",
                  "externalOrderId desc",
                  "externalProcessId",
                  "externalProcessId desc",
                  "processReason_code",
                  "processReason_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of InputMCIChangeProcesses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "InputMCMInstances",
          "InputMCIChangeProcesses"
        ],
        "summary": "Add new entity to related changeProcesses",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstancesPD": {
      "get": {
        "tags": [
          "InputMCMInstancesPD"
        ],
        "summary": "Get entities from InputMCMInstancesPD",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeProcess_id",
                  "changeProcess_id desc",
                  "customerRequestDate",
                  "customerRequestDate desc",
                  "subscriberId",
                  "subscriberId desc",
                  "leadingConnectionUser",
                  "leadingConnectionUser desc",
                  "leadingConnectionOwner",
                  "leadingConnectionOwner desc",
                  "note",
                  "note desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of InputMCMInstancesPD",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "InputMCMInstancesPD"
        ],
        "summary": "Add new entity to InputMCMInstancesPD",
        "requestBody": {
          "description": "MCM Instance Process Data / MKV Instanz Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/InputMCMInstancesPD({id})": {
      "get": {
        "tags": [
          "InputMCMInstancesPD"
        ],
        "summary": "Get entity from InputMCMInstancesPD by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "InputMCMInstancesPD"
        ],
        "summary": "Update entity in InputMCMInstancesPD",
        "requestBody": {
          "description": "MCM Instance Process Data / MKV Instanz Prozessdaten",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "InputMCMInstancesPD"
        ],
        "summary": "Delete entity from InputMCMInstancesPD",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCMInstancesPD({id})/changeProcess": {
      "get": {
        "tags": [
          "InputMCMInstancesPD",
          "MCIChangeProcesses"
        ],
        "summary": "Get related changeProcess",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code",
                  "processType_code",
                  "status_id",
                  "finished",
                  "modifiedAt"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processType",
                  "status",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCIChangeProcesses": {
      "get": {
        "tags": [
          "InputMCIChangeProcesses"
        ],
        "summary": "Get entities from InputMCIChangeProcesses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "measurementConceptInstance_id",
                  "measurementConceptInstance_id desc",
                  "externalOrderId",
                  "externalOrderId desc",
                  "externalProcessId",
                  "externalProcessId desc",
                  "processReason_code",
                  "processReason_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of InputMCIChangeProcesses",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "InputMCIChangeProcesses"
        ],
        "summary": "Add new entity to InputMCIChangeProcesses",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/InputMCIChangeProcesses({id})": {
      "get": {
        "tags": [
          "InputMCIChangeProcesses"
        ],
        "summary": "Get entity from InputMCIChangeProcesses by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptInstance_id",
                  "externalOrderId",
                  "externalProcessId",
                  "processReason_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptInstance",
                  "processReason",
                  "processData",
                  "instanceCharacteristics"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "InputMCIChangeProcesses"
        ],
        "summary": "Update entity in InputMCIChangeProcesses",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "InputMCIChangeProcesses"
        ],
        "summary": "Delete entity from InputMCIChangeProcesses",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCIChangeProcesses({id})/measurementConceptInstance": {
      "get": {
        "tags": [
          "InputMCIChangeProcesses",
          "MCMInstances"
        ],
        "summary": "Get related measurementConceptInstance",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "idText",
                  "version",
                  "description",
                  "leadingGrid_code",
                  "division_code",
                  "orderer_code",
                  "leadingAddress_id",
                  "predecessor_id",
                  "difference2Predecessor_measurementConceptInstance_id",
                  "measurementModel_id",
                  "measurementClass_id",
                  "overallStatus_code",
                  "status_id",
                  "modifiedAt",
                  "modifiedBy",
                  "installedOn",
                  "installedUntil",
                  "commercialSetupOn",
                  "physicalShutdownOn",
                  "commercialShutdownOn",
                  "deviceInstallationsReady",
                  "marketLocationsComplete",
                  "allDevicesRemoved",
                  "allMarketLocationsRemoved"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "meteringLocations",
                  "marketLocations",
                  "operandMappings",
                  "actors",
                  "leadingGrid",
                  "division",
                  "orderer",
                  "addresses",
                  "leadingAddress",
                  "changeProcesses",
                  "predecessor",
                  "difference2Predecessor",
                  "measurementModel",
                  "measurementClass",
                  "overallStatus",
                  "status"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCMInstances"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCIChangeProcesses({id})/processReason": {
      "get": {
        "tags": [
          "InputMCIChangeProcesses",
          "MCIProcessReasonTypes"
        ],
        "summary": "Get related processReason",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCIChangeProcesses({id})/processData": {
      "get": {
        "tags": [
          "InputMCIChangeProcesses",
          "InputMCMInstancesPD"
        ],
        "summary": "Get related processData",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "customerRequestDate",
                  "subscriberId",
                  "leadingConnectionUser",
                  "leadingConnectionOwner",
                  "note"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/InputMCIChangeProcesses({id})/instanceCharacteristics": {
      "get": {
        "tags": [
          "InputMCIChangeProcesses",
          "MCIInstanceCharacteristics"
        ],
        "summary": "Get entities from related instanceCharacteristics",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeProcess_id",
                  "changeProcess_id desc",
                  "entityType_code",
                  "entityType_code desc",
                  "modelEntityId",
                  "modelEntityId desc",
                  "characteristic_code",
                  "characteristic_code desc",
                  "value",
                  "value desc",
                  "predecessorRepetitionIndex",
                  "predecessorRepetitionIndex desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeProcess_id",
                  "entityType_code",
                  "modelEntityId",
                  "characteristic_code",
                  "value",
                  "predecessorRepetitionIndex"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "changeProcess",
                  "entityType",
                  "characteristic"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIInstanceCharacteristics",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DivisionTypes": {
      "get": {
        "tags": [
          "DivisionTypes"
        ],
        "summary": "Get entities from DivisionTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DivisionTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DivisionTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DivisionTypes('{code}')": {
      "get": {
        "tags": [
          "DivisionTypes"
        ],
        "summary": "Get entity from DivisionTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Division",
          "required": true,
          "schema": {
            "maxLength": 2,
            "type": "string"
          }
        }
      ]
    },
    "/DivisionTypes('{code}')/texts": {
      "get": {
        "tags": [
          "DivisionTypes",
          "DivisionTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DivisionTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "DivisionTypes",
          "DivisionTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.DivisionTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Division",
          "required": true,
          "schema": {
            "maxLength": 2,
            "type": "string"
          }
        }
      ]
    },
    "/DivisionTypes('{code}')/localized": {
      "get": {
        "tags": [
          "DivisionTypes",
          "DivisionTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Division",
          "required": true,
          "schema": {
            "maxLength": 2,
            "type": "string"
          }
        }
      ]
    },
    "/MCIOverallStatusTypes": {
      "get": {
        "tags": [
          "MCIOverallStatusTypes"
        ],
        "summary": "Get entities from MCIOverallStatusTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "criticality",
                  "criticality desc",
                  "codeOrder",
                  "codeOrder desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIOverallStatusTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIOverallStatusTypes('{code}')": {
      "get": {
        "tags": [
          "MCIOverallStatusTypes"
        ],
        "summary": "Get entity from MCIOverallStatusTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Overall Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIOverallStatusTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIOverallStatusTypes",
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIOverallStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIOverallStatusTypes",
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Overall Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIOverallStatusTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIOverallStatusTypes",
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Overall Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/Countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get entities from Countries",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Countries",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Countries"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get entity from Countries by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Country Code",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/Countries('{code}')/texts": {
      "get": {
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Countries_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Countries_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Countries_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Country Code",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/Countries('{code}')/localized": {
      "get": {
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Country Code",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringLocationTypes": {
      "get": {
        "tags": [
          "MeteringLocationTypes"
        ],
        "summary": "Get entities from MeteringLocationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationTypes('{code}')": {
      "get": {
        "tags": [
          "MeteringLocationTypes"
        ],
        "summary": "Get entity from MeteringLocationTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringLocationTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MeteringLocationTypes",
          "MeteringLocationTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocationTypes",
          "MeteringLocationTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringLocationTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MeteringLocationTypes",
          "MeteringLocationTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/GridLevelTypes": {
      "get": {
        "tags": [
          "GridLevelTypes"
        ],
        "summary": "Get entities from GridLevelTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of GridLevelTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.GridLevelTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GridLevelTypes('{code}')": {
      "get": {
        "tags": [
          "GridLevelTypes"
        ],
        "summary": "Get entity from GridLevelTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Grid Level",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/GridLevelTypes('{code}')/texts": {
      "get": {
        "tags": [
          "GridLevelTypes",
          "GridLevelTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of GridLevelTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "GridLevelTypes",
          "GridLevelTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Grid Level",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/GridLevelTypes('{code}')/localized": {
      "get": {
        "tags": [
          "GridLevelTypes",
          "GridLevelTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Grid Level",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringLocationPurposeTypes": {
      "get": {
        "tags": [
          "MeteringLocationPurposeTypes"
        ],
        "summary": "Get entities from MeteringLocationPurposeTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationPurposeTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationPurposeTypes('{code}')": {
      "get": {
        "tags": [
          "MeteringLocationPurposeTypes"
        ],
        "summary": "Get entity from MeteringLocationPurposeTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Purpose",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          }
        }
      ]
    },
    "/MeteringLocationPurposeTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MeteringLocationPurposeTypes",
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationPurposeTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocationPurposeTypes",
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Purpose",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          }
        }
      ]
    },
    "/MeteringLocationPurposeTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MeteringLocationPurposeTypes",
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Purpose",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          }
        }
      ]
    },
    "/DirectionTypes": {
      "get": {
        "tags": [
          "DirectionTypes"
        ],
        "summary": "Get entities from DirectionTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DirectionTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DirectionTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DirectionTypes('{code}')": {
      "get": {
        "tags": [
          "DirectionTypes"
        ],
        "summary": "Get entity from DirectionTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/DirectionTypes('{code}')/texts": {
      "get": {
        "tags": [
          "DirectionTypes",
          "DirectionTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DirectionTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "DirectionTypes",
          "DirectionTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.DirectionTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/DirectionTypes('{code}')/localized": {
      "get": {
        "tags": [
          "DirectionTypes",
          "DirectionTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringTaskTypes": {
      "get": {
        "tags": [
          "MeteringTaskTypes"
        ],
        "summary": "Get entities from MeteringTaskTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "division_code",
                  "division_code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "division",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTaskTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringTaskTypes('{code}')": {
      "get": {
        "tags": [
          "MeteringTaskTypes"
        ],
        "summary": "Get entity from MeteringTaskTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "division",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Task Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringTaskTypes('{code}')/division": {
      "get": {
        "tags": [
          "MeteringTaskTypes",
          "DivisionTypes"
        ],
        "summary": "Get related division",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Task Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringTaskTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MeteringTaskTypes",
          "MeteringTaskTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTaskTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringTaskTypes",
          "MeteringTaskTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Task Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringTaskTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MeteringTaskTypes",
          "MeteringTaskTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering Task Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringProcedureTypes": {
      "get": {
        "tags": [
          "MeteringProcedureTypes"
        ],
        "summary": "Get entities from MeteringProcedureTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringProcedureTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringProcedureTypes('{code}')": {
      "get": {
        "tags": [
          "MeteringProcedureTypes"
        ],
        "summary": "Get entity from MeteringProcedureTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering procedure",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringProcedureTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MeteringProcedureTypes",
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringProcedureTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringProcedureTypes",
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering procedure",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringProcedureTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MeteringProcedureTypes",
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Metering procedure",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/MCIRateTypes": {
      "get": {
        "tags": [
          "MCIRateTypes"
        ],
        "summary": "Get entities from MCIRateTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIRateTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIRateTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIRateTypes('{code}')": {
      "get": {
        "tags": [
          "MCIRateTypes"
        ],
        "summary": "Get entity from MCIRateTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIRateTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "MCIRateType",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/MCIRateTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIRateTypes",
          "MCIRateTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIRateTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIRateTypes",
          "MCIRateTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "MCIRateType",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/MCIRateTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIRateTypes",
          "MCIRateTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "MCIRateType",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationTypes": {
      "get": {
        "tags": [
          "MarketLocationTypes"
        ],
        "summary": "Get entities from MarketLocationTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationTypes('{code}')": {
      "get": {
        "tags": [
          "MarketLocationTypes"
        ],
        "summary": "Get entity from MarketLocationTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MarketLocationTypes",
          "MarketLocationTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocationTypes",
          "MarketLocationTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MarketLocationTypes",
          "MarketLocationTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ForecastBasisTypes": {
      "get": {
        "tags": [
          "ForecastBasisTypes"
        ],
        "summary": "Get entities from ForecastBasisTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ForecastBasisTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ForecastBasisTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ForecastBasisTypes('{code}')": {
      "get": {
        "tags": [
          "ForecastBasisTypes"
        ],
        "summary": "Get entity from ForecastBasisTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ForecastBasisTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ForecastBasisType",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ForecastBasisTypes('{code}')/texts": {
      "get": {
        "tags": [
          "ForecastBasisTypes",
          "ForecastBasisTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ForecastBasisTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ForecastBasisTypes",
          "ForecastBasisTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ForecastBasisType",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ForecastBasisTypes('{code}')/localized": {
      "get": {
        "tags": [
          "ForecastBasisTypes",
          "ForecastBasisTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ForecastBasisType",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIFlatrateTypes": {
      "get": {
        "tags": [
          "MCIFlatrateTypes"
        ],
        "summary": "Get entities from MCIFlatrateTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIFlatrateTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIFlatrateTypes('{code}')": {
      "get": {
        "tags": [
          "MCIFlatrateTypes"
        ],
        "summary": "Get entity from MCIFlatrateTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Flat rate",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIFlatrateTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIFlatrateTypes",
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIFlatrateTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIFlatrateTypes",
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Flat rate",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIFlatrateTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIFlatrateTypes",
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Flat rate",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationUsageTypes": {
      "get": {
        "tags": [
          "MarketLocationUsageTypes"
        ],
        "summary": "Get entities from MarketLocationUsageTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationUsageTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocationUsageTypes"
        ],
        "summary": "Add new entity to MarketLocationUsageTypes",
        "requestBody": {
          "description": "CodeList for Usage Types of Market Location",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationUsageTypes('{code}')": {
      "get": {
        "tags": [
          "MarketLocationUsageTypes"
        ],
        "summary": "Get entity from MarketLocationUsageTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MarketLocationUsageTypes"
        ],
        "summary": "Update entity in MarketLocationUsageTypes",
        "requestBody": {
          "description": "CodeList for Usage Types of Market Location",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MarketLocationUsageTypes"
        ],
        "summary": "Delete entity from MarketLocationUsageTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "marketLocationUsageCode",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationUsageTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MarketLocationUsageTypes",
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationUsageTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocationUsageTypes",
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "marketLocationUsageCode",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationUsageTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MarketLocationUsageTypes",
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "marketLocationUsageCode",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorTypes": {
      "get": {
        "tags": [
          "ActorTypes"
        ],
        "summary": "Get entities from ActorTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorTypes('{code}')": {
      "get": {
        "tags": [
          "ActorTypes"
        ],
        "summary": "Get entity from ActorTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Actor Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorTypes('{code}')/texts": {
      "get": {
        "tags": [
          "ActorTypes",
          "ActorTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorTypes",
          "ActorTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Actor Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorTypes('{code}')/localized": {
      "get": {
        "tags": [
          "ActorTypes",
          "ActorTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Actor Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorDirectionTypes": {
      "get": {
        "tags": [
          "ActorDirectionTypes"
        ],
        "summary": "Get entities from ActorDirectionTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorDirectionTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorDirectionTypes('{code}')": {
      "get": {
        "tags": [
          "ActorDirectionTypes"
        ],
        "summary": "Get entity from ActorDirectionTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/ActorDirectionTypes('{code}')/texts": {
      "get": {
        "tags": [
          "ActorDirectionTypes",
          "ActorDirectionTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorDirectionTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorDirectionTypes",
          "ActorDirectionTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/ActorDirectionTypes('{code}')/localized": {
      "get": {
        "tags": [
          "ActorDirectionTypes",
          "ActorDirectionTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessReasonTypes": {
      "get": {
        "tags": [
          "MCIProcessReasonTypes"
        ],
        "summary": "Get entities from MCIProcessReasonTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIProcessReasonTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIProcessReasonTypes"
        ],
        "summary": "Add new entity to MCIProcessReasonTypes",
        "requestBody": {
          "description": "CodeList for Process Reasons of a ChangeProcess",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIProcessReasonTypes('{code}')": {
      "get": {
        "tags": [
          "MCIProcessReasonTypes"
        ],
        "summary": "Get entity from MCIProcessReasonTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIProcessReasonTypes"
        ],
        "summary": "Update entity in MCIProcessReasonTypes",
        "requestBody": {
          "description": "CodeList for Process Reasons of a ChangeProcess",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIProcessReasonTypes"
        ],
        "summary": "Delete entity from MCIProcessReasonTypes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Process Reason",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessReasonTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIProcessReasonTypes",
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIProcessReasonTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIProcessReasonTypes",
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Process Reason",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessReasonTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIProcessReasonTypes",
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Process Reason",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/MCIChangeProcessTypes": {
      "get": {
        "tags": [
          "MCIChangeProcessTypes"
        ],
        "summary": "Get entities from MCIChangeProcessTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIChangeProcessTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIChangeProcessTypes('{code}')": {
      "get": {
        "tags": [
          "MCIChangeProcessTypes"
        ],
        "summary": "Get entity from MCIChangeProcessTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Process Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIChangeProcessTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIChangeProcessTypes",
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIChangeProcessTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIChangeProcessTypes",
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Process Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIChangeProcessTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIChangeProcessTypes",
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Process Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableEntityTypes": {
      "get": {
        "tags": [
          "ConfigurableEntityTypes"
        ],
        "summary": "Get entities from ConfigurableEntityTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ConfigurableEntityTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ConfigurableEntityTypes('{code}')": {
      "get": {
        "tags": [
          "ConfigurableEntityTypes"
        ],
        "summary": "Get entity from ConfigurableEntityTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableEntityTypes('{code}')/texts": {
      "get": {
        "tags": [
          "ConfigurableEntityTypes",
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ConfigurableEntityTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ConfigurableEntityTypes",
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableEntityTypes('{code}')/localized": {
      "get": {
        "tags": [
          "ConfigurableEntityTypes",
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableCharacteristicTypes": {
      "get": {
        "tags": [
          "ConfigurableCharacteristicTypes"
        ],
        "summary": "Get entities from ConfigurableCharacteristicTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ConfigurableCharacteristicTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ConfigurableCharacteristicTypes('{code}')": {
      "get": {
        "tags": [
          "ConfigurableCharacteristicTypes"
        ],
        "summary": "Get entity from ConfigurableCharacteristicTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableCharacteristicTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableCharacteristicTypes('{code}')/texts": {
      "get": {
        "tags": [
          "ConfigurableCharacteristicTypes",
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ConfigurableCharacteristicTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ConfigurableCharacteristicTypes",
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableCharacteristicTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableCharacteristicTypes('{code}')/localized": {
      "get": {
        "tags": [
          "ConfigurableCharacteristicTypes",
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableCharacteristicTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/MCIStatusTypes": {
      "get": {
        "tags": [
          "MCIStatusTypes"
        ],
        "summary": "Get entities from MCIStatusTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "criticality",
                  "criticality desc",
                  "codeOrder",
                  "codeOrder desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIStatusTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIStatusTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIStatusTypes('{code}')": {
      "get": {
        "tags": [
          "MCIStatusTypes"
        ],
        "summary": "Get entity from MCIStatusTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Instance Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIStatusTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIStatusTypes",
          "MCIStatusTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIStatusTypes",
          "MCIStatusTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Instance Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIStatusTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIStatusTypes",
          "MCIStatusTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Instance Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessStatusTypes": {
      "get": {
        "tags": [
          "MCIProcessStatusTypes"
        ],
        "summary": "Get entities from MCIProcessStatusTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "criticality",
                  "criticality desc",
                  "codeOrder",
                  "codeOrder desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIProcessStatusTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIProcessStatusTypes('{code}')": {
      "get": {
        "tags": [
          "MCIProcessStatusTypes"
        ],
        "summary": "Get entity from MCIProcessStatusTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "criticality",
                  "codeOrder"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Change Process Status",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessStatusTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCIProcessStatusTypes",
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIProcessStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIProcessStatusTypes",
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Change Process Status",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessStatusTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCIProcessStatusTypes",
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Change Process Status",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/MCDModelTypes": {
      "get": {
        "tags": [
          "MCDModelTypes"
        ],
        "summary": "Get entities from MCDModelTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "readOnly",
                  "readOnly desc",
                  "deletable",
                  "deletable desc",
                  "updateable",
                  "updateable desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "readOnly",
                  "deletable",
                  "updateable",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDModelTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDModelTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDModelTypes('{code}')": {
      "get": {
        "tags": [
          "MCDModelTypes"
        ],
        "summary": "Get entity from MCDModelTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "readOnly",
                  "deletable",
                  "updateable",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDModelTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          }
        }
      ]
    },
    "/MCDModelTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCDModelTypes",
          "MCDModelTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDModelTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCDModelTypes",
          "MCDModelTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          }
        }
      ]
    },
    "/MCDModelTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCDModelTypes",
          "MCDModelTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          }
        }
      ]
    },
    "/MCDStatusTypes": {
      "get": {
        "tags": [
          "MCDStatusTypes"
        ],
        "summary": "Get entities from MCDStatusTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "isActivate_allowed",
                  "isActivate_allowed desc",
                  "isActivate_hidden",
                  "isActivate_hidden desc",
                  "isDeactivate_allowed",
                  "isDeactivate_allowed desc",
                  "isDeactivate_hidden",
                  "isDeactivate_hidden desc",
                  "isInProgress_allowed",
                  "isInProgress_allowed desc",
                  "isInProgress_hidden",
                  "isInProgress_hidden desc",
                  "isEdit_allowed",
                  "isEdit_allowed desc",
                  "isEdit_hidden",
                  "isEdit_hidden desc",
                  "isCopy_allowed",
                  "isCopy_allowed desc",
                  "isCopy_hidden",
                  "isCopy_hidden desc",
                  "isDelete_allowed",
                  "isDelete_allowed desc",
                  "isDelete_hidden",
                  "isDelete_hidden desc",
                  "code",
                  "code desc",
                  "criticality",
                  "criticality desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "isActivate_allowed",
                  "isActivate_hidden",
                  "isDeactivate_allowed",
                  "isDeactivate_hidden",
                  "isInProgress_allowed",
                  "isInProgress_hidden",
                  "isEdit_allowed",
                  "isEdit_hidden",
                  "isCopy_allowed",
                  "isCopy_hidden",
                  "isDelete_allowed",
                  "isDelete_hidden",
                  "code",
                  "criticality"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDStatusTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDStatusTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDStatusTypes('{code}')": {
      "get": {
        "tags": [
          "MCDStatusTypes"
        ],
        "summary": "Get entity from MCDStatusTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "isActivate_allowed",
                  "isActivate_hidden",
                  "isDeactivate_allowed",
                  "isDeactivate_hidden",
                  "isInProgress_allowed",
                  "isInProgress_hidden",
                  "isEdit_allowed",
                  "isEdit_hidden",
                  "isCopy_allowed",
                  "isCopy_hidden",
                  "isDelete_allowed",
                  "isDelete_hidden",
                  "code",
                  "criticality"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDStatusTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          }
        }
      ]
    },
    "/MCDStatusTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCDStatusTypes",
          "MCDStatusTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCDStatusTypes",
          "MCDStatusTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          }
        }
      ]
    },
    "/MCDStatusTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCDStatusTypes",
          "MCDStatusTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          }
        }
      ]
    },
    "/MCDRepeatableOperandMappings": {
      "get": {
        "tags": [
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Get entities from MCDRepeatableOperandMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "operand",
                  "operand desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "position",
                  "position desc",
                  "isInvalid",
                  "isInvalid desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "measurementConceptModel_id",
                  "operand",
                  "meteringLocation_id",
                  "position",
                  "isInvalid"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDRepeatableOperandMappings",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Add new entity to MCDRepeatableOperandMappings",
        "requestBody": {
          "description": "Mapping of malo formulas operands to metering locations / Formel Operanden Zuordnung zu Messlokationen ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDRepeatableOperandMappings({id})": {
      "get": {
        "tags": [
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Get entity from MCDRepeatableOperandMappings by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "measurementConceptModel_id",
                  "operand",
                  "meteringLocation_id",
                  "position",
                  "isInvalid"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Update entity in MCDRepeatableOperandMappings",
        "requestBody": {
          "description": "Mapping of malo formulas operands to metering locations / Formel Operanden Zuordnung zu Messlokationen ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCDRepeatableOperandMappings"
        ],
        "summary": "Delete entity from MCDRepeatableOperandMappings",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDRepeatableOperandMappings({id})/measurementConceptModel": {
      "get": {
        "tags": [
          "MCDRepeatableOperandMappings",
          "MeasurementConceptModels"
        ],
        "summary": "Get related measurementConceptModel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDRepeatableOperandMappings({id})/meteringLocation": {
      "get": {
        "tags": [
          "MCDRepeatableOperandMappings",
          "MCCMeteringLocations"
        ],
        "summary": "Get related meteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMeteringLocationPurposes": {
      "get": {
        "tags": [
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Get entities from MCDMeteringLocationPurposes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "measurementConceptModel_id",
                  "measurementConceptModel_id desc",
                  "meteringLocation_id",
                  "meteringLocation_id desc",
                  "purpose_code",
                  "purpose_code desc",
                  "position",
                  "position desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "measurementConceptModel_id",
                  "meteringLocation_id",
                  "purpose_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringLocation",
                  "purpose"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDMeteringLocationPurposes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Add new entity to MCDMeteringLocationPurposes",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDMeteringLocationPurposes({id})": {
      "get": {
        "tags": [
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Get entity from MCDMeteringLocationPurposes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "measurementConceptModel_id",
                  "meteringLocation_id",
                  "purpose_code",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptModel",
                  "meteringLocation",
                  "purpose"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Update entity in MCDMeteringLocationPurposes",
        "requestBody": {
          "description": "Aspect to capture changes by user and name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCDMeteringLocationPurposes"
        ],
        "summary": "Delete entity from MCDMeteringLocationPurposes",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMeteringLocationPurposes({id})/measurementConceptModel": {
      "get": {
        "tags": [
          "MCDMeteringLocationPurposes",
          "MeasurementConceptModels"
        ],
        "summary": "Get related measurementConceptModel",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "idText",
                  "name",
                  "description",
                  "conceptType_code",
                  "measurementClass_id",
                  "status_code",
                  "validFrom",
                  "validTo",
                  "division_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "conceptType",
                  "measurementClass",
                  "status",
                  "division",
                  "marketLocations",
                  "modelOperands",
                  "modelRepeatableOperands",
                  "meteringLocationPurposes",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMeteringLocationPurposes({id})/meteringLocation": {
      "get": {
        "tags": [
          "MCDMeteringLocationPurposes",
          "MCCMeteringLocations"
        ],
        "summary": "Get related meteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCDMeteringLocationPurposes({id})/purpose": {
      "get": {
        "tags": [
          "MCDMeteringLocationPurposes",
          "MeteringLocationPurposeTypes"
        ],
        "summary": "Get related purpose",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCClassTypes": {
      "get": {
        "tags": [
          "MCClassTypes"
        ],
        "summary": "Get entities from MCClassTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "readOnly",
                  "readOnly desc",
                  "deletable",
                  "deletable desc",
                  "updateable",
                  "updateable desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "readOnly",
                  "deletable",
                  "updateable",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCClassTypes",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCClassTypes"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCClassTypes('{code}')": {
      "get": {
        "tags": [
          "MCClassTypes"
        ],
        "summary": "Get entity from MCClassTypes by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "descr",
                  "readOnly",
                  "deletable",
                  "updateable",
                  "code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCClassTypes"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          }
        }
      ]
    },
    "/MCClassTypes('{code}')/texts": {
      "get": {
        "tags": [
          "MCClassTypes",
          "MCClassTypes_texts"
        ],
        "summary": "Get entities from related texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCClassTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCClassTypes",
          "MCClassTypes_texts"
        ],
        "summary": "Add new entity to related texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCClassTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          }
        }
      ]
    },
    "/MCClassTypes('{code}')/localized": {
      "get": {
        "tags": [
          "MCClassTypes",
          "MCClassTypes_texts"
        ],
        "summary": "Get related localized",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          }
        }
      ]
    },
    "/MCCNodeConnections": {
      "get": {
        "tags": [
          "MCCNodeConnections"
        ],
        "summary": "Get entities from MCCNodeConnections",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "createdByUuid",
                  "createdByUuid desc",
                  "modifiedByUuid",
                  "modifiedByUuid desc",
                  "successorActor_id",
                  "successorActor_id desc",
                  "successorMeteringLocation_id",
                  "successorMeteringLocation_id desc",
                  "referenceActor_id",
                  "referenceActor_id desc",
                  "referenceMeteringLocation_id",
                  "referenceMeteringLocation_id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCNodeConnections",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCNodeConnections"
        ],
        "summary": "Add new entity to MCCNodeConnections",
        "requestBody": {
          "description": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCCNodeConnections({id})": {
      "get": {
        "tags": [
          "MCCNodeConnections"
        ],
        "summary": "Get entity from MCCNodeConnections by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "modifiedAt",
                  "createdAt",
                  "createdBy",
                  "modifiedBy",
                  "createdByUuid",
                  "modifiedByUuid",
                  "successorActor_id",
                  "successorMeteringLocation_id",
                  "referenceActor_id",
                  "referenceMeteringLocation_id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "successorActor",
                  "successorMeteringLocation",
                  "referenceActor",
                  "referenceMeteringLocation"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCCNodeConnections"
        ],
        "summary": "Update entity in MCCNodeConnections",
        "requestBody": {
          "description": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCNodeConnections-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCCNodeConnections"
        ],
        "summary": "Delete entity from MCCNodeConnections",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCNodeConnections({id})/successorActor": {
      "get": {
        "tags": [
          "MCCNodeConnections",
          "MCCActors"
        ],
        "summary": "Get related successorActor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCNodeConnections({id})/successorMeteringLocation": {
      "get": {
        "tags": [
          "MCCNodeConnections",
          "MCCMeteringLocations"
        ],
        "summary": "Get related successorMeteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCNodeConnections({id})/referenceActor": {
      "get": {
        "tags": [
          "MCCNodeConnections",
          "MCCActors"
        ],
        "summary": "Get related referenceActor",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "optional",
                  "repeatable",
                  "direction_code",
                  "position",
                  "energySource_code",
                  "powerRange_code"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "direction",
                  "energySource",
                  "powerRange",
                  "marketLocationsMapping",
                  "predecessors",
                  "successors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCActors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCNodeConnections({id})/referenceMeteringLocation": {
      "get": {
        "tags": [
          "MCCNodeConnections",
          "MCCMeteringLocations"
        ],
        "summary": "Get related referenceMeteringLocation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "measurementConceptClass_id",
                  "idText",
                  "type_code",
                  "description",
                  "optional",
                  "repeatable",
                  "position"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "measurementConceptClass",
                  "type",
                  "meteringTasks",
                  "predecessors",
                  "successors",
                  "texts",
                  "localized"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/PowerRangeTypes_texts": {
      "get": {
        "tags": [
          "PowerRangeTypes_texts"
        ],
        "summary": "Get entities from PowerRangeTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of PowerRangeTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "PowerRangeTypes_texts"
        ],
        "summary": "Add new entity to PowerRangeTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/PowerRangeTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "PowerRangeTypes_texts"
        ],
        "summary": "Get entity from PowerRangeTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "PowerRangeTypes_texts"
        ],
        "summary": "Update entity in PowerRangeTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "PowerRangeTypes_texts"
        ],
        "summary": "Delete entity from PowerRangeTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Power Range",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/EnergySourceTypes_texts": {
      "get": {
        "tags": [
          "EnergySourceTypes_texts"
        ],
        "summary": "Get entities from EnergySourceTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of EnergySourceTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "EnergySourceTypes_texts"
        ],
        "summary": "Add new entity to EnergySourceTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/EnergySourceTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "EnergySourceTypes_texts"
        ],
        "summary": "Get entity from EnergySourceTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "EnergySourceTypes_texts"
        ],
        "summary": "Update entity in EnergySourceTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "EnergySourceTypes_texts"
        ],
        "summary": "Delete entity from EnergySourceTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Energy Source",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/GridTypes_texts": {
      "get": {
        "tags": [
          "GridTypes_texts"
        ],
        "summary": "Get entities from GridTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of GridTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.GridTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "GridTypes_texts"
        ],
        "summary": "Add new entity to GridTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GridTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "GridTypes_texts"
        ],
        "summary": "Get entity from GridTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "GridTypes_texts"
        ],
        "summary": "Update entity in GridTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "GridTypes_texts"
        ],
        "summary": "Delete entity from GridTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Grid",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/ActorExternalReferenceTypes_texts": {
      "get": {
        "tags": [
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Get entities from ActorExternalReferenceTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorExternalReferenceTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Add new entity to ActorExternalReferenceTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorExternalReferenceTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Get entity from ActorExternalReferenceTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Update entity in ActorExternalReferenceTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ActorExternalReferenceTypes_texts"
        ],
        "summary": "Delete entity from ActorExternalReferenceTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Reference Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ExternalReferenceSystems_texts": {
      "get": {
        "tags": [
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Get entities from ExternalReferenceSystems_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ExternalReferenceSystems_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Add new entity to ExternalReferenceSystems_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ExternalReferenceSystems_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Get entity from ExternalReferenceSystems_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Update entity in ExternalReferenceSystems_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalReferenceSystems_texts"
        ],
        "summary": "Delete entity from ExternalReferenceSystems_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Referenced IT-System",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/MeasuringTypes_texts": {
      "get": {
        "tags": [
          "MeasuringTypes_texts"
        ],
        "summary": "Get entities from MeasuringTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasuringTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasuringTypes_texts"
        ],
        "summary": "Add new entity to MeasuringTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeasuringTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MeasuringTypes_texts"
        ],
        "summary": "Get entity from MeasuringTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeasuringTypes_texts"
        ],
        "summary": "Update entity in MeasuringTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeasuringTypes_texts"
        ],
        "summary": "Delete entity from MeasuringTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Measuring device type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/OrdererTypes_texts": {
      "get": {
        "tags": [
          "OrdererTypes_texts"
        ],
        "summary": "Get entities from OrdererTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of OrdererTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "OrdererTypes_texts"
        ],
        "summary": "Add new entity to OrdererTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.OrdererTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrdererTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "OrdererTypes_texts"
        ],
        "summary": "Get entity from OrdererTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "OrdererTypes_texts"
        ],
        "summary": "Update entity in OrdererTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.OrdererTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "OrdererTypes_texts"
        ],
        "summary": "Delete entity from OrdererTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Orderering Party",
          "required": true,
          "schema": {
            "maxLength": 40,
            "type": "string"
          }
        }
      ]
    },
    "/MeasurementConceptModels_texts": {
      "get": {
        "tags": [
          "MeasurementConceptModels_texts"
        ],
        "summary": "Get entities from MeasurementConceptModels_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "id",
                  "id desc",
                  "name",
                  "name desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasurementConceptModels_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasurementConceptModels_texts"
        ],
        "summary": "Add new entity to MeasurementConceptModels_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeasurementConceptModels_texts(locale='{locale}',id={id})": {
      "get": {
        "tags": [
          "MeasurementConceptModels_texts"
        ],
        "summary": "Get entity from MeasurementConceptModels_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeasurementConceptModels_texts"
        ],
        "summary": "Update entity in MeasurementConceptModels_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeasurementConceptModels_texts"
        ],
        "summary": "Delete entity from MeasurementConceptModels_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MeasurementConceptClasses_texts": {
      "get": {
        "tags": [
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Get entities from MeasurementConceptClasses_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "id",
                  "id desc",
                  "name",
                  "name desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeasurementConceptClasses_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Add new entity to MeasurementConceptClasses_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeasurementConceptClasses_texts(locale='{locale}',id={id})": {
      "get": {
        "tags": [
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Get entity from MeasurementConceptClasses_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "id",
                  "name",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Update entity in MeasurementConceptClasses_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeasurementConceptClasses_texts"
        ],
        "summary": "Delete entity from MeasurementConceptClasses_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "Entity identifier based on Universally Unique Identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/MCCMeteringLocations_texts": {
      "get": {
        "tags": [
          "MCCMeteringLocations_texts"
        ],
        "summary": "Get entities from MCCMeteringLocations_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "ID_texts",
                  "ID_texts desc",
                  "locale",
                  "locale desc",
                  "id",
                  "id desc",
                  "description",
                  "description desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "ID_texts",
                  "locale",
                  "id",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCCMeteringLocations_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCCMeteringLocations_texts"
        ],
        "summary": "Add new entity to MCCMeteringLocations_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCCMeteringLocations_texts({ID_texts})": {
      "get": {
        "tags": [
          "MCCMeteringLocations_texts"
        ],
        "summary": "Get entity from MCCMeteringLocations_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "ID_texts",
                  "locale",
                  "id",
                  "description"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCCMeteringLocations_texts"
        ],
        "summary": "Update entity in MCCMeteringLocations_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCCMeteringLocations_texts"
        ],
        "summary": "Delete entity from MCCMeteringLocations_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "ID_texts",
          "in": "path",
          "description": "key: ID_texts",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ]
    },
    "/DivisionTypes_texts": {
      "get": {
        "tags": [
          "DivisionTypes_texts"
        ],
        "summary": "Get entities from DivisionTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DivisionTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "DivisionTypes_texts"
        ],
        "summary": "Add new entity to DivisionTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.DivisionTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DivisionTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "DivisionTypes_texts"
        ],
        "summary": "Get entity from DivisionTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "DivisionTypes_texts"
        ],
        "summary": "Update entity in DivisionTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.DivisionTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "DivisionTypes_texts"
        ],
        "summary": "Delete entity from DivisionTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Division",
          "required": true,
          "schema": {
            "maxLength": 2,
            "type": "string"
          }
        }
      ]
    },
    "/MCIOverallStatusTypes_texts": {
      "get": {
        "tags": [
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Get entities from MCIOverallStatusTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIOverallStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Add new entity to MCIOverallStatusTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIOverallStatusTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Get entity from MCIOverallStatusTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Update entity in MCIOverallStatusTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIOverallStatusTypes_texts"
        ],
        "summary": "Delete entity from MCIOverallStatusTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Overall Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/Countries_texts": {
      "get": {
        "tags": [
          "Countries_texts"
        ],
        "summary": "Get entities from Countries_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of Countries_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.Countries_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Countries_texts"
        ],
        "summary": "Add new entity to Countries_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Countries_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "Countries_texts"
        ],
        "summary": "Get entity from Countries_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "Countries_texts"
        ],
        "summary": "Update entity in Countries_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.Countries_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "Countries_texts"
        ],
        "summary": "Delete entity from Countries_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Country Code",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringLocationTypes_texts": {
      "get": {
        "tags": [
          "MeteringLocationTypes_texts"
        ],
        "summary": "Get entities from MeteringLocationTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocationTypes_texts"
        ],
        "summary": "Add new entity to MeteringLocationTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MeteringLocationTypes_texts"
        ],
        "summary": "Get entity from MeteringLocationTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringLocationTypes_texts"
        ],
        "summary": "Update entity in MeteringLocationTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringLocationTypes_texts"
        ],
        "summary": "Delete entity from MeteringLocationTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/GridLevelTypes_texts": {
      "get": {
        "tags": [
          "GridLevelTypes_texts"
        ],
        "summary": "Get entities from GridLevelTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of GridLevelTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "GridLevelTypes_texts"
        ],
        "summary": "Add new entity to GridLevelTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/GridLevelTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "GridLevelTypes_texts"
        ],
        "summary": "Get entity from GridLevelTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "GridLevelTypes_texts"
        ],
        "summary": "Update entity in GridLevelTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "GridLevelTypes_texts"
        ],
        "summary": "Delete entity from GridLevelTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Grid Level",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringLocationPurposeTypes_texts": {
      "get": {
        "tags": [
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Get entities from MeteringLocationPurposeTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringLocationPurposeTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Add new entity to MeteringLocationPurposeTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringLocationPurposeTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Get entity from MeteringLocationPurposeTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Update entity in MeteringLocationPurposeTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringLocationPurposeTypes_texts"
        ],
        "summary": "Delete entity from MeteringLocationPurposeTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Metering Location Purpose",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          }
        }
      ]
    },
    "/DirectionTypes_texts": {
      "get": {
        "tags": [
          "DirectionTypes_texts"
        ],
        "summary": "Get entities from DirectionTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of DirectionTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "DirectionTypes_texts"
        ],
        "summary": "Add new entity to DirectionTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.DirectionTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/DirectionTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "DirectionTypes_texts"
        ],
        "summary": "Get entity from DirectionTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "DirectionTypes_texts"
        ],
        "summary": "Update entity in DirectionTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.DirectionTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "DirectionTypes_texts"
        ],
        "summary": "Delete entity from DirectionTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringTaskTypes_texts": {
      "get": {
        "tags": [
          "MeteringTaskTypes_texts"
        ],
        "summary": "Get entities from MeteringTaskTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringTaskTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringTaskTypes_texts"
        ],
        "summary": "Add new entity to MeteringTaskTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringTaskTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MeteringTaskTypes_texts"
        ],
        "summary": "Get entity from MeteringTaskTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringTaskTypes_texts"
        ],
        "summary": "Update entity in MeteringTaskTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringTaskTypes_texts"
        ],
        "summary": "Delete entity from MeteringTaskTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Metering Task Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MeteringProcedureTypes_texts": {
      "get": {
        "tags": [
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Get entities from MeteringProcedureTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MeteringProcedureTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Add new entity to MeteringProcedureTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MeteringProcedureTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Get entity from MeteringProcedureTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Update entity in MeteringProcedureTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MeteringProcedureTypes_texts"
        ],
        "summary": "Delete entity from MeteringProcedureTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Metering procedure",
          "required": true,
          "schema": {
            "maxLength": 3,
            "type": "string"
          }
        }
      ]
    },
    "/MCIRateTypes_texts": {
      "get": {
        "tags": [
          "MCIRateTypes_texts"
        ],
        "summary": "Get entities from MCIRateTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIRateTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIRateTypes_texts"
        ],
        "summary": "Add new entity to MCIRateTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIRateTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIRateTypes_texts"
        ],
        "summary": "Get entity from MCIRateTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIRateTypes_texts"
        ],
        "summary": "Update entity in MCIRateTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIRateTypes_texts"
        ],
        "summary": "Delete entity from MCIRateTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "MCIRateType",
          "required": true,
          "schema": {
            "maxLength": 10,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationTypes_texts": {
      "get": {
        "tags": [
          "MarketLocationTypes_texts"
        ],
        "summary": "Get entities from MarketLocationTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocationTypes_texts"
        ],
        "summary": "Add new entity to MarketLocationTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MarketLocationTypes_texts"
        ],
        "summary": "Get entity from MarketLocationTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MarketLocationTypes_texts"
        ],
        "summary": "Update entity in MarketLocationTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MarketLocationTypes_texts"
        ],
        "summary": "Delete entity from MarketLocationTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ForecastBasisTypes_texts": {
      "get": {
        "tags": [
          "ForecastBasisTypes_texts"
        ],
        "summary": "Get entities from ForecastBasisTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ForecastBasisTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ForecastBasisTypes_texts"
        ],
        "summary": "Add new entity to ForecastBasisTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ForecastBasisTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ForecastBasisTypes_texts"
        ],
        "summary": "Get entity from ForecastBasisTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ForecastBasisTypes_texts"
        ],
        "summary": "Update entity in ForecastBasisTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ForecastBasisTypes_texts"
        ],
        "summary": "Delete entity from ForecastBasisTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "ForecastBasisType",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIFlatrateTypes_texts": {
      "get": {
        "tags": [
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Get entities from MCIFlatrateTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIFlatrateTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Add new entity to MCIFlatrateTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIFlatrateTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Get entity from MCIFlatrateTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Update entity in MCIFlatrateTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIFlatrateTypes_texts"
        ],
        "summary": "Delete entity from MCIFlatrateTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Flat rate",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MarketLocationUsageTypes_texts": {
      "get": {
        "tags": [
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Get entities from MarketLocationUsageTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MarketLocationUsageTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Add new entity to MarketLocationUsageTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MarketLocationUsageTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Get entity from MarketLocationUsageTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Update entity in MarketLocationUsageTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MarketLocationUsageTypes_texts"
        ],
        "summary": "Delete entity from MarketLocationUsageTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "marketLocationUsageCode",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorTypes_texts": {
      "get": {
        "tags": [
          "ActorTypes_texts"
        ],
        "summary": "Get entities from ActorTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorTypes_texts"
        ],
        "summary": "Add new entity to ActorTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ActorTypes_texts"
        ],
        "summary": "Get entity from ActorTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ActorTypes_texts"
        ],
        "summary": "Update entity in ActorTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ActorTypes_texts"
        ],
        "summary": "Delete entity from ActorTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Actor Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ActorDirectionTypes_texts": {
      "get": {
        "tags": [
          "ActorDirectionTypes_texts"
        ],
        "summary": "Get entities from ActorDirectionTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ActorDirectionTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ActorDirectionTypes_texts"
        ],
        "summary": "Add new entity to ActorDirectionTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ActorDirectionTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ActorDirectionTypes_texts"
        ],
        "summary": "Get entity from ActorDirectionTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ActorDirectionTypes_texts"
        ],
        "summary": "Update entity in ActorDirectionTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ActorDirectionTypes_texts"
        ],
        "summary": "Delete entity from ActorDirectionTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Direction",
          "required": true,
          "schema": {
            "maxLength": 4,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessReasonTypes_texts": {
      "get": {
        "tags": [
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Get entities from MCIProcessReasonTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIProcessReasonTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Add new entity to MCIProcessReasonTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIProcessReasonTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Get entity from MCIProcessReasonTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Update entity in MCIProcessReasonTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIProcessReasonTypes_texts"
        ],
        "summary": "Delete entity from MCIProcessReasonTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Process Reason",
          "required": true,
          "schema": {
            "maxLength": 20,
            "type": "string"
          }
        }
      ]
    },
    "/MCIChangeProcessTypes_texts": {
      "get": {
        "tags": [
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Get entities from MCIChangeProcessTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIChangeProcessTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Add new entity to MCIChangeProcessTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIChangeProcessTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Get entity from MCIChangeProcessTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Update entity in MCIChangeProcessTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIChangeProcessTypes_texts"
        ],
        "summary": "Delete entity from MCIChangeProcessTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Process Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableEntityTypes_texts": {
      "get": {
        "tags": [
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Get entities from ConfigurableEntityTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ConfigurableEntityTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Add new entity to ConfigurableEntityTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ConfigurableEntityTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Get entity from ConfigurableEntityTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Update entity in ConfigurableEntityTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurableEntityTypes_texts"
        ],
        "summary": "Delete entity from ConfigurableEntityTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/ConfigurableCharacteristicTypes_texts": {
      "get": {
        "tags": [
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Get entities from ConfigurableCharacteristicTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of ConfigurableCharacteristicTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Add new entity to ConfigurableCharacteristicTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ConfigurableCharacteristicTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Get entity from ConfigurableCharacteristicTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Update entity in ConfigurableCharacteristicTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurableCharacteristicTypes_texts"
        ],
        "summary": "Delete entity from ConfigurableCharacteristicTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "ConfigurableCharacteristicTypes",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/MCIStatusTypes_texts": {
      "get": {
        "tags": [
          "MCIStatusTypes_texts"
        ],
        "summary": "Get entities from MCIStatusTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIStatusTypes_texts"
        ],
        "summary": "Add new entity to MCIStatusTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIStatusTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIStatusTypes_texts"
        ],
        "summary": "Get entity from MCIStatusTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIStatusTypes_texts"
        ],
        "summary": "Update entity in MCIStatusTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIStatusTypes_texts"
        ],
        "summary": "Delete entity from MCIStatusTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Instance Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string"
          }
        }
      ]
    },
    "/MCIProcessStatusTypes_texts": {
      "get": {
        "tags": [
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Get entities from MCIProcessStatusTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCIProcessStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Add new entity to MCIProcessStatusTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCIProcessStatusTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Get entity from MCIProcessStatusTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Update entity in MCIProcessStatusTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCIProcessStatusTypes_texts"
        ],
        "summary": "Delete entity from MCIProcessStatusTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Change Process Status",
          "required": true,
          "schema": {
            "maxLength": 30,
            "type": "string"
          }
        }
      ]
    },
    "/MCDModelTypes_texts": {
      "get": {
        "tags": [
          "MCDModelTypes_texts"
        ],
        "summary": "Get entities from MCDModelTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDModelTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCDModelTypes_texts"
        ],
        "summary": "Add new entity to MCDModelTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDModelTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCDModelTypes_texts"
        ],
        "summary": "Get entity from MCDModelTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCDModelTypes_texts"
        ],
        "summary": "Update entity in MCDModelTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCDModelTypes_texts"
        ],
        "summary": "Delete entity from MCDModelTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          }
        }
      ]
    },
    "/MCDStatusTypes_texts": {
      "get": {
        "tags": [
          "MCDStatusTypes_texts"
        ],
        "summary": "Get entities from MCDStatusTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCDStatusTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCDStatusTypes_texts"
        ],
        "summary": "Add new entity to MCDStatusTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCDStatusTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCDStatusTypes_texts"
        ],
        "summary": "Get entity from MCDStatusTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCDStatusTypes_texts"
        ],
        "summary": "Update entity in MCDStatusTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCDStatusTypes_texts"
        ],
        "summary": "Delete entity from MCDStatusTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Status",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          }
        }
      ]
    },
    "/MCClassTypes_texts": {
      "get": {
        "tags": [
          "MCClassTypes_texts"
        ],
        "summary": "Get entities from MCClassTypes_texts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of MCClassTypes_texts",
                  "type": "object",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "MCClassTypes_texts"
        ],
        "summary": "Add new entity to MCClassTypes_texts",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCClassTypes_texts-create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MCClassTypes_texts(locale='{locale}',code='{code}')": {
      "get": {
        "tags": [
          "MCClassTypes_texts"
        ],
        "summary": "Get entity from MCClassTypes_texts by key",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "MCClassTypes_texts"
        ],
        "summary": "Update entity in MCClassTypes_texts",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCMService.MCClassTypes_texts-update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "MCClassTypes_texts"
        ],
        "summary": "Delete entity from MCClassTypes_texts",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "parameters": [
        {
          "name": "locale",
          "in": "path",
          "description": "Type for a language code",
          "required": true,
          "schema": {
            "maxLength": 14,
            "type": "string"
          }
        },
        {
          "name": "code",
          "in": "path",
          "description": "Type",
          "required": true,
          "schema": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          }
        }
      ]
    },
    "/$batch": {
      "post": {
        "tags": [
          "Batch Requests"
        ],
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "requestBody": {
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET MCMInstances HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "required": [
              "code",
              "message"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      },
      "MCMService.MCMInstances": {
        "title": "Measurement Concept Instance / Messkonzept Instanz",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 60,
            "type": "string"
          },
          "version": {
            "maxLength": 5,
            "type": "string",
            "default": "1",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "meteringLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocations"
            }
          },
          "marketLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocations"
            }
          },
          "operandMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIOperandMappings"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.Actors"
            }
          },
          "leadingGrid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridTypes"
              }
            ],
            "nullable": true
          },
          "leadingGrid_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "orderer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.OrdererTypes"
              }
            ],
            "nullable": true
          },
          "orderer_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ObjectAddresses"
            }
          },
          "leadingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses"
              }
            ],
            "nullable": true
          },
          "leadingAddress_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
            }
          },
          "predecessor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "predecessor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "difference2Predecessor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Differences2Predecessors"
              }
            ],
            "nullable": true
          },
          "difference2Predecessor_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
              }
            ],
            "nullable": true
          },
          "measurementModel_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
              }
            ],
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "overallStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes"
              }
            ],
            "nullable": true
          },
          "overallStatus_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIStatus"
              }
            ],
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedAt": {
            "title": "Changed At",
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "modifiedBy": {
            "title": "Changed By",
            "maxLength": 255,
            "type": "string",
            "description": "User which modified the entity lastly.",
            "nullable": true
          },
          "installedOn": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "installedUntil": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "commercialSetupOn": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "physicalShutdownOn": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "commercialShutdownOn": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "deviceInstallationsReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "marketLocationsComplete": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "allDevicesRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "allMarketLocationsRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MCMInstances-create": {
        "title": "Measurement Concept Instance / Messkonzept Instanz (for create)",
        "required": [
          "id",
          "orderer_code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "meteringLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
            }
          },
          "marketLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocations-create"
            }
          },
          "operandMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIOperandMappings-create"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.Actors-create"
            }
          },
          "leadingGrid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridTypes-create"
              }
            ],
            "nullable": true
          },
          "leadingGrid_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes-create"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "orderer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.OrdererTypes-create"
              }
            ],
            "nullable": true
          },
          "orderer_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
            }
          },
          "leadingAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            ],
            "nullable": true
          },
          "leadingAddress_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
            }
          },
          "predecessor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "difference2Predecessor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Differences2Predecessors-create"
              }
            ],
            "nullable": true
          },
          "measurementModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels-create"
              }
            ],
            "nullable": true
          },
          "measurementModel_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses-create"
              }
            ],
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "overallStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes-create"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIStatus-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCMInstances-update": {
        "title": "Measurement Concept Instance / Messkonzept Instanz (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "leadingGrid_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "orderer_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "leadingAddress_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementModel_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.Differences2Predecessors": {
        "title": "Differences2Predecessors",
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "calculatedAt": {
            "title": "Timestamp of calculation.",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "predecessor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "predecessor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnActors"
              }
            ],
            "nullable": true
          },
          "actors_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnMarketLocations"
              }
            ],
            "nullable": true
          },
          "marketLocations_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnMeteringLocations"
              }
            ],
            "nullable": true
          },
          "meteringLocations_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "addresses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses"
              }
            ],
            "nullable": true
          },
          "addresses_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.Differences2Predecessors-create": {
        "title": "Differences2Predecessors (for create)",
        "required": [
          "measurementConceptInstance_id"
        ],
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "calculatedAt": {
            "title": "Timestamp of calculation.",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "predecessor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "predecessor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnActors-create"
              }
            ],
            "nullable": true
          },
          "actors_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnMarketLocations-create"
              }
            ],
            "nullable": true
          },
          "marketLocations_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnMeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "meteringLocations_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "addresses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses-create"
              }
            ],
            "nullable": true
          },
          "addresses_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.Differences2Predecessors-update": {
        "title": "Differences2Predecessors (for update)",
        "type": "object",
        "properties": {
          "calculatedAt": {
            "title": "Timestamp of calculation.",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "predecessor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actors_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocations_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocations_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "addresses_measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.DifferenceOnActors": {
        "title": "DifferenceOnActors",
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnActors-create": {
        "title": "DifferenceOnActors (for create)",
        "required": [
          "measurementConceptInstance_id"
        ],
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnActors-update": {
        "title": "DifferenceOnActors (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnMarketLocations": {
        "title": "DifferenceOnMarketLocations",
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnMarketLocations-create": {
        "title": "DifferenceOnMarketLocations (for create)",
        "required": [
          "measurementConceptInstance_id"
        ],
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnMarketLocations-update": {
        "title": "DifferenceOnMarketLocations (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnMeteringLocations": {
        "title": "DifferenceOnMeteringLocations",
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnMeteringLocations-create": {
        "title": "DifferenceOnMeteringLocations (for create)",
        "required": [
          "measurementConceptInstance_id"
        ],
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnMeteringLocations-update": {
        "title": "DifferenceOnMeteringLocations (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnAddresses": {
        "title": "DifferenceOnAddresses",
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_added"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_changed"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_deleted"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_unchanged"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_ambiguous"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnAddresses-create": {
        "title": "DifferenceOnAddresses (for create)",
        "required": [
          "measurementConceptInstance_id"
        ],
        "type": "object",
        "properties": {
          "measurementConceptInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstances-create"
              }
            ],
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_added-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_changed-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_deleted-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_unchanged-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_ambiguous-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.DifferenceOnAddresses-update": {
        "title": "DifferenceOnAddresses (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_added-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_changed-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_deleted-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_unchanged-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.DifferenceOnAddresses_ambiguous-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.MCMInstancesPD": {
        "title": "MCM Instance Process Data / MKV Instanz Prozessdaten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcess": {
            "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
          },
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "customerRequestDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "subscriberId": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionUser": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionOwner": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "meteringLocationsPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
            }
          },
          "marketLocationsPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocationsPD"
            }
          },
          "actorsPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorsPD"
            }
          },
          "initialDataEntryReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "locationIdentifiersReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "finalDataEntryReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "masterDataReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "deviceInstallationsReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "marketLocationsComplete": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MCMInstancesPD-create": {
        "title": "MCM Instance Process Data / MKV Instanz Prozessdaten (for create)",
        "type": "object",
        "properties": {
          "changeProcess": {
            "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
          },
          "customerRequestDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "subscriberId": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionUser": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionOwner": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "meteringLocationsPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocationsPD-create"
            }
          },
          "marketLocationsPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocationsPD-create"
            }
          },
          "actorsPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorsPD-create"
            }
          }
        }
      },
      "MCMService.MCMInstancesPD-update": {
        "title": "MCM Instance Process Data / MKV Instanz Prozessdaten (for update)",
        "type": "object",
        "properties": {
          "customerRequestDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "subscriberId": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionUser": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionOwner": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ObjectAddresses": {
        "title": "MCM Instance Object Addresses - Virtual fields for instance ui",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "multipleOf": 0.000000010,
            "maximum": 999.99999999,
            "minimum": -999.99999999,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "longitude": {
            "multipleOf": 0.000000010,
            "maximum": 999.99999999,
            "minimum": -999.99999999,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "cityDistrict": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ObjectAddresses-create": {
        "title": "MCM Instance Object Addresses - Virtual fields for instance ui (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries-create"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "multipleOf": 0.000000010,
            "maximum": 999.99999999,
            "minimum": -999.99999999,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "longitude": {
            "multipleOf": 0.000000010,
            "maximum": 999.99999999,
            "minimum": -999.99999999,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "cityDistrict": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ObjectAddresses-update": {
        "title": "MCM Instance Object Addresses - Virtual fields for instance ui (for update)",
        "type": "object",
        "properties": {
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "multipleOf": 0.000000010,
            "maximum": 999.99999999,
            "minimum": -999.99999999,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "longitude": {
            "multipleOf": 0.000000010,
            "maximum": 999.99999999,
            "minimum": -999.99999999,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "cityDistrict": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocations": {
        "title": "MCM Instance Metering Locations / MKV Instanz Messlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 21,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
              }
            ],
            "nullable": true
          },
          "modelMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "grid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridTypes"
              }
            ],
            "nullable": true
          },
          "grid_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "gridLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes"
              }
            ],
            "nullable": true
          },
          "gridLevel_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses"
              }
            ],
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "lossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "meteringLocationPurpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes"
              }
            ],
            "nullable": true
          },
          "meteringLocationPurpose_code": {
            "maxLength": 3,
            "type": "string",
            "default": "SC",
            "nullable": true
          },
          "disconnectable": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "transformerRequired": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "deviceSerialId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "meteringTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringTasks"
            }
          },
          "circuitPlanPredecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
            }
          },
          "circuitPlanSuccessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
            }
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationInstalled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocations-create": {
        "title": "MCM Instance Metering Locations / MKV Instanz Messlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes-create"
              }
            ],
            "nullable": true
          },
          "modelMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "meteringLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "grid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridTypes-create"
              }
            ],
            "nullable": true
          },
          "grid_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "gridLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes-create"
              }
            ],
            "nullable": true
          },
          "gridLevel_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            ],
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "lossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "meteringLocationPurpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes-create"
              }
            ],
            "nullable": true
          },
          "disconnectable": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "transformerRequired": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "deviceSerialId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "meteringTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringTasks-create"
            }
          },
          "circuitPlanPredecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections-create"
            }
          },
          "circuitPlanSuccessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections-create"
            }
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MeteringLocations-update": {
        "title": "MCM Instance Metering Locations / MKV Instanz Messlokationen (for update)",
        "type": "object",
        "properties": {
          "meteringLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "grid_code": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "gridLevel_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "lossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "disconnectable": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "transformerRequired": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "deviceSerialId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MeteringLocationsPD": {
        "title": "MCM Instance Metering Location Process Data / MKV Instanz Messlokation Prozessdaten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstancePD": {
            "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
          },
          "measurementConceptInstancePD_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocations"
              }
            ],
            "nullable": true
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "plannedMeteringLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "deviceLocationSupplement": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "meterOperator": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "type": "string",
            "nullable": true
          },
          "measuringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes"
              }
            ],
            "nullable": true
          },
          "measuringType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "volumeCorrector": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "nominalCapacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "locationIdentifierReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "masterDataReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "meteringTasksPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringTasksPD"
            }
          },
          "calorificValueDistrict": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationInstalled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationsPD-create": {
        "title": "MCM Instance Metering Location Process Data / MKV Instanz Messlokation Prozessdaten (for create)",
        "type": "object",
        "properties": {
          "measurementConceptInstancePD": {
            "$ref": "#/components/schemas/MCMService.MCMInstancesPD-create"
          },
          "meteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "plannedMeteringLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "deviceLocationSupplement": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "meterOperator": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "type": "string",
            "nullable": true
          },
          "measuringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes-create"
              }
            ],
            "nullable": true
          },
          "measuringType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "volumeCorrector": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "nominalCapacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "meteringTasksPD": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringTasksPD-create"
            }
          },
          "calorificValueDistrict": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MeteringLocationsPD-update": {
        "title": "MCM Instance Metering Location Process Data / MKV Instanz Messlokation Prozessdaten (for update)",
        "type": "object",
        "properties": {
          "plannedMeteringLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "deviceLocationSupplement": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "meterOperator": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "type": "string",
            "nullable": true
          },
          "measuringType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "volumeCorrector": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "nominalCapacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "calorificValueDistrict": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MeteringTasks": {
        "title": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "$ref": "#/components/schemas/MCMService.MeteringLocations"
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "lossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelMeteringTasks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
              }
            ],
            "nullable": true
          },
          "modelMeteringTasks_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "plannedMeteringProcedure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
              }
            ],
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "plannedRegisterCode": {
            "type": "string",
            "nullable": true
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTasks-create": {
        "title": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes-create"
              }
            ],
            "nullable": true
          },
          "modelMeteringTasks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "plannedMeteringProcedure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes-create"
              }
            ],
            "nullable": true
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTasks-update": {
        "title": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben (for update)",
        "type": "object",
        "properties": {
          "registerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTasksPD": {
        "title": "MCM Instance Metering Task Process Data / MKV Instanz Messaufgabe Prozessdaten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocationPD": {
            "$ref": "#/components/schemas/MCMService.MeteringLocationsPD"
          },
          "meteringLocationPD_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTasks"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes"
              }
            ],
            "nullable": true
          },
          "rate_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "periodConsumption": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          }
        }
      },
      "MCMService.MeteringTasksPD-create": {
        "title": "MCM Instance Metering Task Process Data / MKV Instanz Messaufgabe Prozessdaten (for create)",
        "type": "object",
        "properties": {
          "meteringLocationPD": {
            "$ref": "#/components/schemas/MCMService.MeteringLocationsPD-create"
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "rate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes-create"
              }
            ],
            "nullable": true
          },
          "rate_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "periodConsumption": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          }
        }
      },
      "MCMService.MeteringTasksPD-update": {
        "title": "MCM Instance Metering Task Process Data / MKV Instanz Messaufgabe Prozessdaten (for update)",
        "type": "object",
        "properties": {
          "rate_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "periodConsumption": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          }
        }
      },
      "MCMService.MarketLocations": {
        "title": "MCM Instance Market Locations / MKV Instanz Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 18,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelMarketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
              }
            ],
            "nullable": true
          },
          "modelMarketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "calculationRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCICalculationRules"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.Actors"
            }
          },
          "actorsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
            }
          },
          "virtualMarketLocation": {
            "type": "boolean",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses"
              }
            ],
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "billingProcedure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "settlementProcedure": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationComplete": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocations-create": {
        "title": "MCM Instance Market Locations / MKV Instanz Marktlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes-create"
              }
            ],
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "modelMarketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDMarketLocations-create"
              }
            ],
            "nullable": true
          },
          "marketLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "calculationRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCICalculationRules-create"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.Actors-create"
            }
          },
          "actorsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors-create"
            }
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            ],
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MarketLocations-update": {
        "title": "MCM Instance Market Locations / MKV Instanz Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "marketLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MarketLocationsPD": {
        "title": "MCM Instance Market Location Process Data / MKV Instanz Marktlokation Prozessdaten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstancePD": {
            "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
          },
          "measurementConceptInstancePD_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocations"
              }
            ],
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "plannedMarketLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "connectionUser": {
            "type": "string",
            "nullable": true
          },
          "connectionOwner": {
            "type": "string",
            "nullable": true
          },
          "forecastBasis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes"
              }
            ],
            "nullable": true
          },
          "forecastBasis_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "consumptionDistribution": {
            "type": "string",
            "nullable": true
          },
          "flatrateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes"
              }
            ],
            "nullable": true
          },
          "flatrateType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "flatrate": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "type": "string",
            "nullable": true
          },
          "directSelling": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "connectionOperator": {
            "type": "string",
            "nullable": true
          },
          "locationIdentifierReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "masterDataReady": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "locationComplete": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "locationRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "communalInstallation": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationsPD-create": {
        "title": "MCM Instance Market Location Process Data / MKV Instanz Marktlokation Prozessdaten (for create)",
        "type": "object",
        "properties": {
          "measurementConceptInstancePD": {
            "$ref": "#/components/schemas/MCMService.MCMInstancesPD-create"
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocations-create"
              }
            ],
            "nullable": true
          },
          "plannedMarketLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "connectionUser": {
            "type": "string",
            "nullable": true
          },
          "connectionOwner": {
            "type": "string",
            "nullable": true
          },
          "forecastBasis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes-create"
              }
            ],
            "nullable": true
          },
          "forecastBasis_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "consumptionDistribution": {
            "type": "string",
            "nullable": true
          },
          "flatrateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes-create"
              }
            ],
            "nullable": true
          },
          "flatrateType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "flatrate": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "type": "string",
            "nullable": true
          },
          "directSelling": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "connectionOperator": {
            "type": "string",
            "nullable": true
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "communalInstallation": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationsPD-update": {
        "title": "MCM Instance Market Location Process Data / MKV Instanz Marktlokation Prozessdaten (for update)",
        "type": "object",
        "properties": {
          "plannedMarketLocationId": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "connectionUser": {
            "type": "string",
            "nullable": true
          },
          "connectionOwner": {
            "type": "string",
            "nullable": true
          },
          "forecastBasis_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "consumptionDistribution": {
            "type": "string",
            "nullable": true
          },
          "flatrateType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "flatrate": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "type": "string",
            "nullable": true
          },
          "directSelling": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "connectionOperator": {
            "type": "string",
            "nullable": true
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "communalInstallation": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.MCIOperandMappings": {
        "title": "Mapping of Metering Task to Calculation rule operands / Zuordnung von Messaufgaben zu Operanden der Berechnungsregel für Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTasks"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCIOperandMappings-create": {
        "title": "Mapping of Metering Task to Calculation rule operands / Zuordnung von Messaufgaben zu Operanden der Berechnungsregel für Marktlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCIOperandMappings-update": {
        "title": "Mapping of Metering Task to Calculation rule operands / Zuordnung von Messaufgaben zu Operanden der Berechnungsregel für Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCICalculationRules": {
        "title": "Calculation rules (=formulas) for market locations / Berechnungsregel für Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "$ref": "#/components/schemas/MCMService.MarketLocations"
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
              }
            ],
            "nullable": true
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "modelCalculationRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
              }
            ],
            "nullable": true
          },
          "modelCalculationRule_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "expressionExpanded": {
            "type": "string",
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCICalculationRuleSteps"
            }
          },
          "usages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIMarketLocationUsages"
            }
          },
          "plannedRegisterCode": {
            "type": "string",
            "nullable": true
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCICalculationRules-create": {
        "title": "Calculation rules (=formulas) for market locations / Berechnungsregel für Marktlokationen (for create)",
        "type": "object",
        "properties": {
          "marketLocation": {
            "$ref": "#/components/schemas/MCMService.MarketLocations-create"
          },
          "meteringProcedure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes-create"
              }
            ],
            "nullable": true
          },
          "modelCalculationRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDCalculationRules-create"
              }
            ],
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCICalculationRuleSteps-create"
            }
          },
          "usages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIMarketLocationUsages-create"
            }
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCICalculationRules-update": {
        "title": "Calculation rules (=formulas) for market locations / Berechnungsregel für Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "registerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCICalculationRuleSteps": {
        "title": "Steps of calculation rule / Schritte zur Berechnungsregel für Marktlokationen",
        "type": "object",
        "properties": {
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "step": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ref1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ref2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTasks"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCICalculationRuleSteps-create": {
        "title": "Steps of calculation rule / Schritte zur Berechnungsregel für Marktlokationen (for create)",
        "required": [
          "calculationRule_id",
          "step"
        ],
        "type": "object",
        "properties": {
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "step": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ref1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ref2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCICalculationRuleSteps-update": {
        "title": "Steps of calculation rule / Schritte zur Berechnungsregel für Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ref1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ref2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCIMarketLocationUsages": {
        "title": "Usage codes for Market Locations / Verwendung von Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "calculationRule": {
            "$ref": "#/components/schemas/MCMService.MCICalculationRules"
          },
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
              }
            ],
            "nullable": true
          },
          "usage_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCIMarketLocationUsages-create": {
        "title": "Usage codes for Market Locations / Verwendung von Marktlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "calculationRule": {
            "$ref": "#/components/schemas/MCMService.MCICalculationRules-create"
          },
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes-create"
              }
            ],
            "nullable": true
          },
          "usage_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCIMarketLocationUsages-update": {
        "title": "Usage codes for Market Locations / Verwendung von Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.Actors": {
        "title": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 26,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modelActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCActors"
              }
            ],
            "nullable": true
          },
          "modelActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "powerRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
              }
            ],
            "nullable": true
          },
          "powerRange_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "circuitPlanPredecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
            }
          },
          "circuitPlanSuccessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections"
            }
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocations"
              }
            ],
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors"
            }
          },
          "energySource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
              }
            ],
            "nullable": true
          },
          "energySource_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses"
              }
            ],
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "gridLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes"
              }
            ],
            "nullable": true
          },
          "gridLevel_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "isOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "actorInstalled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "actorComplete": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "actorRemoved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "MCMService.Actors-create": {
        "title": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes-create"
              }
            ],
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "modelActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCActors-create"
              }
            ],
            "nullable": true
          },
          "powerRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes-create"
              }
            ],
            "nullable": true
          },
          "circuitPlanPredecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections-create"
            }
          },
          "circuitPlanSuccessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.CircuitPlanNodeConnections-create"
            }
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocations-create"
              }
            ],
            "nullable": true
          },
          "marketLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIMarketLocationActors-create"
            }
          },
          "energySource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes-create"
              }
            ],
            "nullable": true
          },
          "energySource_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
              }
            ],
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "gridLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes-create"
              }
            ],
            "nullable": true
          },
          "gridLevel_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "isOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.Actors-update": {
        "title": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten (for update)",
        "type": "object",
        "properties": {
          "energySource_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "address_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "gridLevel_code": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "isOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "commercialSetupDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "removalDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          }
        }
      },
      "MCMService.MCIMarketLocationActors": {
        "title": "n:m Actors to Market locations/ Akteure zu Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actor": {
            "$ref": "#/components/schemas/MCMService.Actors"
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "$ref": "#/components/schemas/MCMService.MarketLocations"
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCIMarketLocationActors-create": {
        "title": "n:m Actors to Market locations/ Akteure zu Marktlokationen (for create)",
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/MCMService.Actors-create"
          },
          "marketLocation": {
            "$ref": "#/components/schemas/MCMService.MarketLocations-create"
          }
        }
      },
      "MCMService.MCIMarketLocationActors-update": {
        "title": "n:m Actors to Market locations/ Akteure zu Marktlokationen (for update)",
        "type": "object"
      },
      "MCMService.ActorsPD": {
        "title": "MCM Instance Actor Process Data / MKV Instanz Akteur Prozessdaten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstancePD": {
            "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
          },
          "measurementConceptInstancePD_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actor": {
            "$ref": "#/components/schemas/MCMService.Actors"
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "plannedInstalledPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "installedPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "inverterPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "externalReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences"
            }
          }
        }
      },
      "MCMService.ActorsPD-create": {
        "title": "MCM Instance Actor Process Data / MKV Instanz Akteur Prozessdaten (for create)",
        "type": "object",
        "properties": {
          "measurementConceptInstancePD": {
            "$ref": "#/components/schemas/MCMService.MCMInstancesPD-create"
          },
          "actor": {
            "$ref": "#/components/schemas/MCMService.Actors-create"
          },
          "plannedInstalledPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "installedPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "inverterPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "externalReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorsPDExternalReferences-create"
            }
          }
        }
      },
      "MCMService.ActorsPD-update": {
        "title": "MCM Instance Actor Process Data / MKV Instanz Akteur Prozessdaten (for update)",
        "type": "object",
        "properties": {
          "plannedInstalledPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "installedPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "inverterPower": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          }
        }
      },
      "MCMService.ActorsPDExternalReferences": {
        "title": "MCM Instance Actor Process Data External References  / MKV Instanz Akteur Prozessdaten Externe Referenzen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actorPD": {
            "$ref": "#/components/schemas/MCMService.ActorsPD"
          },
          "actorPD_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes"
              }
            ],
            "nullable": true
          },
          "referenceType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "referenceSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems"
              }
            ],
            "nullable": true
          },
          "referenceSystem_code": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.ActorsPDExternalReferences-create": {
        "title": "MCM Instance Actor Process Data External References  / MKV Instanz Akteur Prozessdaten Externe Referenzen (for create)",
        "type": "object",
        "properties": {
          "actorPD": {
            "$ref": "#/components/schemas/MCMService.ActorsPD-create"
          },
          "referenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes-create"
              }
            ],
            "nullable": true
          },
          "referenceType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "referenceSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems-create"
              }
            ],
            "nullable": true
          },
          "referenceSystem_code": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.ActorsPDExternalReferences-update": {
        "title": "MCM Instance Actor Process Data External References  / MKV Instanz Akteur Prozessdaten Externe Referenzen (for update)",
        "type": "object",
        "properties": {
          "referenceType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "referenceSystem_code": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "title": "External ID",
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.CircuitPlanNodeConnections": {
        "title": "MCM Instance Connections MeLo<->Actor / MKV Instanz Verbindungen MeLo<->Akteur",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Actors"
              }
            ],
            "nullable": true
          },
          "successorActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocations"
              }
            ],
            "nullable": true
          },
          "successorMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Actors"
              }
            ],
            "nullable": true
          },
          "referenceActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocations"
              }
            ],
            "nullable": true
          },
          "referenceMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.CircuitPlanNodeConnections-create": {
        "title": "MCM Instance Connections MeLo<->Actor / MKV Instanz Verbindungen MeLo<->Akteur (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Actors-create"
              }
            ],
            "nullable": true
          },
          "successorActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "successorMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Actors-create"
              }
            ],
            "nullable": true
          },
          "referenceActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "referenceMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.CircuitPlanNodeConnections-update": {
        "title": "MCM Instance Connections MeLo<->Actor / MKV Instanz Verbindungen MeLo<->Akteur (for update)",
        "type": "object",
        "properties": {
          "successorActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCIErrors": {
        "title": "MCM Instance Error log / MKV Instanz Fehlerliste",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "status": {
            "$ref": "#/components/schemas/MCMService.MCIStatus"
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "resolved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIErrors-create": {
        "title": "MCM Instance Error log / MKV Instanz Fehlerliste (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "status": {
            "$ref": "#/components/schemas/MCMService.MCIStatus-create"
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "resolved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIErrors-update": {
        "title": "MCM Instance Error log / MKV Instanz Fehlerliste (for update)",
        "type": "object",
        "properties": {
          "status_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "resolved": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIChangeProcesses": {
        "title": "Aspect to capture changes by user and name.",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "externalOrderId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "externalProcessId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "processReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
              }
            ],
            "default": "NONE",
            "nullable": true
          },
          "processReason_code": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "processType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes"
              }
            ],
            "default": "CREATE",
            "nullable": true
          },
          "processType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIStatus"
              }
            ],
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "finished": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "modifiedAt": {
            "title": "Changed At",
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "processData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstancesPD"
              }
            ],
            "nullable": true
          },
          "instanceCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics"
            }
          }
        }
      },
      "MCMService.MCIChangeProcesses-create": {
        "title": "Aspect to capture changes by user and name. (for create)",
        "required": [
          "id",
          "externalOrderId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "externalOrderId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "externalProcessId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "processReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes-create"
              }
            ],
            "default": "NONE",
            "nullable": true
          },
          "processType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes-create"
              }
            ],
            "default": "CREATE",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIStatus-create"
              }
            ],
            "nullable": true
          },
          "processData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMInstancesPD-create"
              }
            ],
            "nullable": true
          },
          "instanceCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics-create"
            }
          }
        }
      },
      "MCMService.MCIChangeProcesses-update": {
        "title": "Aspect to capture changes by user and name. (for update)",
        "type": "object",
        "properties": {
          "externalOrderId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "externalProcessId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIInstanceCharacteristics": {
        "title": "MCM Instance characteristics table",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcess": {
            "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
          },
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes"
              }
            ],
            "nullable": true
          },
          "entityType_code": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "modelEntityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "characteristic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes"
              }
            ],
            "nullable": true
          },
          "characteristic_code": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "predecessorRepetitionIndex": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIInstanceCharacteristics-create": {
        "title": "MCM Instance characteristics table (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcess": {
            "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
          },
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes-create"
              }
            ],
            "nullable": true
          },
          "entityType_code": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "modelEntityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "characteristic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes-create"
              }
            ],
            "nullable": true
          },
          "characteristic_code": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "predecessorRepetitionIndex": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIInstanceCharacteristics-update": {
        "title": "MCM Instance characteristics table (for update)",
        "type": "object",
        "properties": {
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "entityType_code": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "modelEntityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "characteristic_code": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "predecessorRepetitionIndex": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIStatus": {
        "title": "Aspect to capture changes by user and name.",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
              }
            ],
            "nullable": true
          },
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceStatus": {
            "$ref": "#/components/schemas/MCMService.MCIStatusTypes"
          },
          "instanceStatus_code": {
            "maxLength": 12,
            "type": "string"
          },
          "processStatus": {
            "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes"
          },
          "processStatus_code": {
            "maxLength": 30,
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIErrors"
            }
          }
        }
      },
      "MCMService.MCIStatus-create": {
        "title": "Aspect to capture changes by user and name. (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
              }
            ],
            "nullable": true
          },
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceStatus": {
            "$ref": "#/components/schemas/MCMService.MCIStatusTypes-create"
          },
          "instanceStatus_code": {
            "maxLength": 12,
            "type": "string"
          },
          "processStatus": {
            "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes-create"
          },
          "processStatus_code": {
            "maxLength": 30,
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIErrors-create"
            }
          }
        }
      },
      "MCMService.MCIStatus-update": {
        "title": "Aspect to capture changes by user and name. (for update)",
        "type": "object",
        "properties": {
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceStatus_code": {
            "maxLength": 12,
            "type": "string"
          },
          "processStatus_code": {
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.PowerRangeTypes": {
        "title": "CodeList for Power Range",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Power Range",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.PowerRangeTypes-create": {
        "title": "CodeList for Power Range (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Power Range",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.PowerRangeTypes-update": {
        "title": "CodeList for Power Range (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.EnergySourceTypes": {
        "title": "CodeList for Energy Source Type",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Energy Source",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.EnergySourceTypes-create": {
        "title": "CodeList for Energy Source Type (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Energy Source",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.EnergySourceTypes-update": {
        "title": "CodeList for Energy Source Type (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.GridTypes": {
        "title": "CodeList for Grid",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid",
            "maxLength": 40,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.GridTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.GridTypes-create": {
        "title": "CodeList for Grid (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid",
            "maxLength": 40,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.GridTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.GridTypes-update": {
        "title": "CodeList for Grid (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ActorExternalReferenceTypes": {
        "title": "CodeList for External References to Actors",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Reference Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ActorExternalReferenceTypes-create": {
        "title": "CodeList for External References to Actors (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Reference Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorExternalReferenceTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ActorExternalReferenceTypes-update": {
        "title": "CodeList for External References to Actors (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ExternalReferenceSystems": {
        "title": "CodeList for IT Systems which carry external references to MCM entities",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Referenced IT-System",
            "maxLength": 20,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ExternalReferenceSystems-create": {
        "title": "CodeList for IT Systems which carry external references to MCM entities (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Referenced IT-System",
            "maxLength": 20,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ExternalReferenceSystems_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ExternalReferenceSystems-update": {
        "title": "CodeList for IT Systems which carry external references to MCM entities (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasuringTypes": {
        "title": "CodeList for Measuring Type",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Measuring device type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeasuringTypes-create": {
        "title": "CodeList for Measuring Type (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Measuring device type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasuringTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeasuringTypes-update": {
        "title": "CodeList for Measuring Type (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.OrdererTypes": {
        "title": "CodeList for Orderer/Auftraggeber",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Orderering Party",
            "maxLength": 40,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.OrdererTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.OrdererTypes-create": {
        "title": "CodeList for Orderer/Auftraggeber (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Orderering Party",
            "maxLength": 40,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.OrdererTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.OrdererTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.OrdererTypes-update": {
        "title": "CodeList for Orderer/Auftraggeber (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulaConfiguration": {
        "title": "Enhance formula definition with virtual fields for use in UI",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "formulaSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCMFormulaSteps"
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulaConfiguration-create": {
        "title": "Enhance formula definition with virtual fields for use in UI (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "formulaSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCMFormulaSteps-create"
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulaConfiguration-update": {
        "title": "Enhance formula definition with virtual fields for use in UI (for update)",
        "type": "object",
        "properties": {
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.LocationStructureActors": {
        "title": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 26,
            "type": "string"
          },
          "type_code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction_code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocations"
              }
            ],
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.LocationStructureActors-create": {
        "title": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 26,
            "type": "string"
          },
          "type_code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction_code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocations-create"
              }
            ],
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.LocationStructureActors-update": {
        "title": "MCM Instance Actors / MKV Instanz Akteure und Erzeugungseinheiten (for update)",
        "type": "object",
        "properties": {
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 26,
            "type": "string"
          },
          "type_code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction_code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.LocationStructureMeteringLocations": {
        "title": "MCM Instance Metering Locations / MKV Instanz Messlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocationIdentifier": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type_code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "idText": {
            "maxLength": 21,
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.LocationStructureMeteringTasks"
            }
          }
        }
      },
      "MCMService.LocationStructureMeteringLocations-create": {
        "title": "MCM Instance Metering Locations / MKV Instanz Messlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocationIdentifier": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type_code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "idText": {
            "maxLength": 21,
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.LocationStructureMeteringTasks-create"
            }
          }
        }
      },
      "MCMService.LocationStructureMeteringLocations-update": {
        "title": "MCM Instance Metering Locations / MKV Instanz Messlokationen (for update)",
        "type": "object",
        "properties": {
          "meteringLocationIdentifier": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type_code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "idText": {
            "maxLength": 21,
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.LocationStructureMeteringTasks": {
        "title": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction_code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "plannedRegisterCode": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.LocationStructureMeteringTasks-create": {
        "title": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction_code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "plannedRegisterCode": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.LocationStructureMeteringTasks-update": {
        "title": "MCM Instance Metering Tasks / MKV Instanz Messaufgaben (for update)",
        "type": "object",
        "properties": {
          "meteringLocation_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction_code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "plannedRegisterCode": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationStructure": {
        "title": "MCM Instance Market Locations / MKV Instanz Marktlokationen",
        "type": "object",
        "properties": {
          "marketLocation_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 18,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "marketLocationIdentifier": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.LocationStructureMeteringLocations"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.LocationStructureActors"
            }
          }
        }
      },
      "MCMService.MarketLocationStructure-create": {
        "title": "MCM Instance Market Locations / MKV Instanz Marktlokationen (for create)",
        "required": [
          "marketLocation_id"
        ],
        "type": "object",
        "properties": {
          "marketLocation_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 18,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes-create"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "marketLocationIdentifier": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.LocationStructureMeteringLocations-create"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.LocationStructureActors-create"
            }
          }
        }
      },
      "MCMService.MarketLocationStructure-update": {
        "title": "MCM Instance Market Locations / MKV Instanz Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "idText": {
            "maxLength": 18,
            "type": "string"
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "marketLocationIdentifier": {
            "maxLength": 33,
            "type": "string",
            "nullable": true
          },
          "measurementConceptInstance_id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MeasurementConceptModels": {
        "title": "Measurement Concept / Messkonzept",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedAt": {
            "title": "Changed At",
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdAt": {
            "title": "Created At",
            "type": "string",
            "description": "Timestamp of creation.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdBy": {
            "title": "Created By",
            "maxLength": 255,
            "type": "string",
            "description": "User which created the entity.",
            "nullable": true
          },
          "modifiedBy": {
            "title": "Changed By",
            "maxLength": 255,
            "type": "string",
            "description": "User which modified the entity lastly.",
            "nullable": true
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "conceptType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes"
              }
            ],
            "nullable": true
          },
          "conceptType_code": {
            "maxLength": 12,
            "type": "string",
            "default": "MODEL",
            "nullable": true
          },
          "measurementClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
              }
            ],
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes"
              }
            ],
            "nullable": true
          },
          "status_code": {
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "validTo": {
            "type": "string",
            "format": "date",
            "default": "9999-12-31T00:00:00.0000000",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "marketLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
            }
          },
          "modelOperands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDOperandMappings"
            }
          },
          "modelRepeatableOperands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings"
            }
          },
          "meteringLocationPurposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptModels-create": {
        "title": "Measurement Concept / Messkonzept (for create)",
        "required": [
          "id",
          "idText",
          "name",
          "measurementClass_id",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "conceptType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes-create"
              }
            ],
            "nullable": true
          },
          "measurementClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses-create"
              }
            ],
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes-create"
              }
            ],
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "validTo": {
            "type": "string",
            "format": "date",
            "default": "9999-12-31T00:00:00.0000000",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes-create"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "marketLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocations-create"
            }
          },
          "modelOperands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDOperandMappings-create"
            }
          },
          "modelRepeatableOperands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDRepeatableOperandMappings-create"
            }
          },
          "meteringLocationPurposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMeteringLocationPurposes-create"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptModels-update": {
        "title": "Measurement Concept / Messkonzept (for update)",
        "type": "object",
        "properties": {
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "validTo": {
            "type": "string",
            "format": "date",
            "default": "9999-12-31T00:00:00.0000000",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocations": {
        "title": "Market Location / Marktlokation",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "virtualMarketLocation": {
            "type": "boolean",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actorsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors"
            }
          },
          "calculationRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
            }
          }
        }
      },
      "MCMService.MCDMarketLocations-create": {
        "title": "Market Location / Marktlokation (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels-create"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes-create"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "virtualMarketLocation": {
            "type": "boolean",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actorsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors-create"
            }
          },
          "calculationRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDCalculationRules-create"
            }
          }
        }
      },
      "MCMService.MCDMarketLocations-update": {
        "title": "Market Location / Marktlokation (for update)",
        "type": "object",
        "properties": {
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "virtualMarketLocation": {
            "type": "boolean",
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDOperandMappings": {
        "title": "Mapping of malo formulas operands to metering tasks / Formel Operanden Zuordnung zu Messaufgaben ",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringTaskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
              }
            ],
            "nullable": true
          },
          "meteringTaskType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTaskDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes"
              }
            ],
            "nullable": true
          },
          "meteringTaskDirection_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "meteringLocationIdText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDOperandMappings-create": {
        "title": "Mapping of malo formulas operands to metering tasks / Formel Operanden Zuordnung zu Messaufgaben  (for create)",
        "required": [
          "id",
          "meteringTaskType_code",
          "meteringLocationIdText"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels-create"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringTaskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes-create"
              }
            ],
            "nullable": true
          },
          "meteringTaskType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTaskDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "meteringTaskDirection_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "meteringLocationIdText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDOperandMappings-update": {
        "title": "Mapping of malo formulas operands to metering tasks / Formel Operanden Zuordnung zu Messaufgaben  (for update)",
        "type": "object",
        "properties": {
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringTaskType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringTaskDirection_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "meteringLocationIdText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDCalculationRules": {
        "title": "Calculation rules map formulas to market locations / Berechnungsregel für Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
              }
            ],
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure": {
            "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string"
          },
          "formula": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMFormulas"
              }
            ],
            "nullable": true
          },
          "formula_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "usages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocationUsages"
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDCalculationRules-create": {
        "title": "Calculation rules map formulas to market locations / Berechnungsregel für Marktlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDMarketLocations-create"
              }
            ],
            "nullable": true
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure": {
            "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes-create"
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string"
          },
          "formula": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCMFormulas-create"
              }
            ],
            "nullable": true
          },
          "formula_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "usages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocationUsages-create"
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDCalculationRules-update": {
        "title": "Calculation rules map formulas to market locations / Berechnungsregel für Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string"
          },
          "formula_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocationActors": {
        "title": "Actors of a market location / Akteure einer Marktlokation",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "$ref": "#/components/schemas/MCMService.MCDMarketLocations"
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actor": {
            "$ref": "#/components/schemas/MCMService.MCCActors"
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actorIdText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "actorDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
              }
            ],
            "nullable": true
          },
          "actorDirection_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "actorType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes"
              }
            ],
            "nullable": true
          },
          "actorType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocationActors-create": {
        "title": "Actors of a market location / Akteure einer Marktlokation (for create)",
        "required": [
          "id",
          "actorIdText",
          "actorType_code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "marketLocation": {
            "$ref": "#/components/schemas/MCMService.MCDMarketLocations-create"
          },
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actor": {
            "$ref": "#/components/schemas/MCMService.MCCActors-create"
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actorIdText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "actorDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "actorDirection_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "actorType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes-create"
              }
            ],
            "nullable": true
          },
          "actorType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocationActors-update": {
        "title": "Actors of a market location / Akteure einer Marktlokation (for update)",
        "type": "object",
        "properties": {
          "marketLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "actorIdText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "actorDirection_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "actorType_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocationUsages": {
        "title": "Usages assignment to formula used in market locations / Zuordnung von Verwendungszwecken für Formeln in Marktlokationen",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "calculationRule": {
            "$ref": "#/components/schemas/MCMService.MCDCalculationRules"
          },
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes"
              }
            ],
            "nullable": true
          },
          "usage_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocationUsages-create": {
        "title": "Usages assignment to formula used in market locations / Zuordnung von Verwendungszwecken für Formeln in Marktlokationen (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "calculationRule": {
            "$ref": "#/components/schemas/MCMService.MCDCalculationRules-create"
          },
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes-create"
              }
            ],
            "nullable": true
          },
          "usage_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMarketLocationUsages-update": {
        "title": "Usages assignment to formula used in market locations / Zuordnung von Verwendungszwecken für Formeln in Marktlokationen (for update)",
        "type": "object",
        "properties": {
          "calculationRule_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulas": {
        "title": "Enhance formula definition with virtual fields for use in UI",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "formulaSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCMFormulaSteps"
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulas-create": {
        "title": "Enhance formula definition with virtual fields for use in UI (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "formulaSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCMFormulaSteps-create"
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulas-update": {
        "title": "Enhance formula definition with virtual fields for use in UI (for update)",
        "type": "object",
        "properties": {
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCMFormulaSteps": {
        "title": "MCMFormulaSteps",
        "type": "object",
        "properties": {
          "formula_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "step": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ref1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ref2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCMFormulaSteps-create": {
        "title": "MCMFormulaSteps (for create)",
        "required": [
          "formula_id",
          "step"
        ],
        "type": "object",
        "properties": {
          "formula_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "step": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ref1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ref2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCMFormulaSteps-update": {
        "title": "MCMFormulaSteps (for update)",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "ref1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ref2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MeasurementConceptClasses": {
        "title": "Measurement Concept Class / Messkonzeptklasse",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "classType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCClassTypes"
              }
            ],
            "nullable": true
          },
          "classType_code": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS",
            "nullable": true
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "meteringLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCActors"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptClasses-create": {
        "title": "Measurement Concept Class / Messkonzeptklasse (for create)",
        "required": [
          "id",
          "idText",
          "name",
          "division_code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "classType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCClassTypes-create"
              }
            ],
            "nullable": true
          },
          "classType_code": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS",
            "nullable": true
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes-create"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "meteringLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
            }
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCActors-create"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptClasses-update": {
        "title": "Measurement Concept Class / Messkonzeptklasse (for update)",
        "type": "object",
        "properties": {
          "idText": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "classType_code": {
            "maxLength": 12,
            "type": "string",
            "default": "CLASS",
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringLocations": {
        "title": "Model Metering Locations / MKV Messkonzeptklasse Messlokation",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptClass": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
          },
          "measurementConceptClass_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "nullable": true
          },
          "repeatable": {
            "type": "boolean",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
            }
          },
          "predecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
            }
          },
          "successors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringLocations-create": {
        "title": "Model Metering Locations / MKV Messkonzeptklasse Messlokation (for create)",
        "required": [
          "id",
          "idText"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptClass": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses-create"
          },
          "measurementConceptClass_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes-create"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "nullable": true
          },
          "repeatable": {
            "type": "boolean",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "meteringTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringTasks-create"
            }
          },
          "predecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
            }
          },
          "successors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringLocations-update": {
        "title": "Model Metering Locations / MKV Messkonzeptklasse Messlokation (for update)",
        "type": "object",
        "properties": {
          "measurementConceptClass_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "nullable": true
          },
          "repeatable": {
            "type": "boolean",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringTasks": {
        "title": "Model Metering Task / MKV Messkonzeptklasse Messaufgabe",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringProcedures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringProcedures"
            }
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringTasks-create": {
        "title": "Model Metering Task / MKV Messkonzeptklasse Messaufgabe (for create)",
        "required": [
          "id",
          "type_code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes-create"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringProcedures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCMeteringProcedures-create"
            }
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringTasks-update": {
        "title": "Model Metering Task / MKV Messkonzeptklasse Messaufgabe (for update)",
        "type": "object",
        "properties": {
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringProcedures": {
        "title": "Model Metering Procedures / MKV Messkonzeptklasse Zählverfahren",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes"
              }
            ],
            "nullable": true
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringProcedures-create": {
        "title": "Model Metering Procedures / MKV Messkonzeptklasse Zählverfahren (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringTasks-create"
              }
            ],
            "nullable": true
          },
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes-create"
              }
            ],
            "nullable": true
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringProcedures-update": {
        "title": "Model Metering Procedures / MKV Messkonzeptklasse Zählverfahren (for update)",
        "type": "object",
        "properties": {
          "meteringTask_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringProcedure_code": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCActors": {
        "title": "Model Actor / MKV Messkonzeptklasse Akteur",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptClass": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
          },
          "measurementConceptClass_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "nullable": true
          },
          "repeatable": {
            "type": "boolean",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "energySource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes"
              }
            ],
            "nullable": true
          },
          "energySource_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "powerRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes"
              }
            ],
            "nullable": true
          },
          "powerRange_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "marketLocationsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors"
            }
          },
          "predecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
            }
          },
          "successors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections"
            }
          }
        }
      },
      "MCMService.MCCActors-create": {
        "title": "Model Actor / MKV Messkonzeptklasse Akteur (for create)",
        "required": [
          "id",
          "idText",
          "type_code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptClass": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses-create"
          },
          "measurementConceptClass_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes-create"
              }
            ],
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "nullable": true
          },
          "repeatable": {
            "type": "boolean",
            "nullable": true
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes-create"
              }
            ],
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "energySource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.EnergySourceTypes-create"
              }
            ],
            "nullable": true
          },
          "energySource_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "powerRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.PowerRangeTypes-create"
              }
            ],
            "nullable": true
          },
          "powerRange_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "marketLocationsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDMarketLocationActors-create"
            }
          },
          "predecessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
            }
          },
          "successors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCCNodeConnections-create"
            }
          }
        }
      },
      "MCMService.MCCActors-update": {
        "title": "Model Actor / MKV Messkonzeptklasse Akteur (for update)",
        "type": "object",
        "properties": {
          "measurementConceptClass_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "nullable": true
          },
          "repeatable": {
            "type": "boolean",
            "nullable": true
          },
          "direction_code": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "energySource_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "powerRange_code": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.InputMCMInstances": {
        "title": "Measurement Concept Instance / Messkonzept Instanz",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ObjectAddresses"
            }
          },
          "measurementModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
              }
            ],
            "nullable": true
          },
          "measurementModel_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses"
              }
            ],
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "changeProcesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses"
            }
          }
        }
      },
      "MCMService.InputMCMInstances-create": {
        "title": "Measurement Concept Instance / Messkonzept Instanz (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ObjectAddresses-create"
            }
          },
          "measurementModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptModels-create"
              }
            ],
            "nullable": true
          },
          "measurementModel_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeasurementConceptClasses-create"
              }
            ],
            "nullable": true
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes-create"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "changeProcesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.InputMCIChangeProcesses-create"
            }
          }
        }
      },
      "MCMService.InputMCMInstances-update": {
        "title": "Measurement Concept Instance / Messkonzept Instanz (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "measurementModel_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementClass_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.InputMCMInstancesPD": {
        "title": "MCM Instance Process Data / MKV Instanz Prozessdaten",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "changeProcess": {
            "$ref": "#/components/schemas/MCMService.MCIChangeProcesses"
          },
          "changeProcess_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "customerRequestDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "subscriberId": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionUser": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionOwner": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.InputMCMInstancesPD-create": {
        "title": "MCM Instance Process Data / MKV Instanz Prozessdaten (for create)",
        "type": "object",
        "properties": {
          "changeProcess": {
            "$ref": "#/components/schemas/MCMService.MCIChangeProcesses-create"
          },
          "customerRequestDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "subscriberId": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionUser": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionOwner": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.InputMCMInstancesPD-update": {
        "title": "MCM Instance Process Data / MKV Instanz Prozessdaten (for update)",
        "type": "object",
        "properties": {
          "customerRequestDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2017-04-13T00:00:00.0000000"
          },
          "subscriberId": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionUser": {
            "type": "string",
            "nullable": true
          },
          "leadingConnectionOwner": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.InputMCIChangeProcesses": {
        "title": "Aspect to capture changes by user and name.",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances"
          },
          "measurementConceptInstance_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "externalOrderId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "externalProcessId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "processReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes"
              }
            ],
            "default": "NONE",
            "nullable": true
          },
          "processReason_code": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "processData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD"
              }
            ],
            "nullable": true
          },
          "instanceCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics"
            }
          }
        }
      },
      "MCMService.InputMCIChangeProcesses-create": {
        "title": "Aspect to capture changes by user and name. (for create)",
        "required": [
          "id",
          "externalOrderId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptInstance": {
            "$ref": "#/components/schemas/MCMService.MCMInstances-create"
          },
          "externalOrderId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "externalProcessId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "processReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes-create"
              }
            ],
            "default": "NONE",
            "nullable": true
          },
          "processData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.InputMCMInstancesPD-create"
              }
            ],
            "nullable": true
          },
          "instanceCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIInstanceCharacteristics-create"
            }
          }
        }
      },
      "MCMService.InputMCIChangeProcesses-update": {
        "title": "Aspect to capture changes by user and name. (for update)",
        "type": "object",
        "properties": {
          "externalOrderId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "externalProcessId": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DivisionTypes": {
        "title": "CodeList for Divisions of Measurement Concept",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Division",
            "maxLength": 2,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.DivisionTypes-create": {
        "title": "CodeList for Divisions of Measurement Concept (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Division",
            "maxLength": 2,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.DivisionTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.DivisionTypes-update": {
        "title": "CodeList for Divisions of Measurement Concept (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIOverallStatusTypes": {
        "title": "CodeList for Overall Status of MC Instance",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Overall Status",
            "maxLength": 12,
            "type": "string"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIOverallStatusTypes-create": {
        "title": "CodeList for Overall Status of MC Instance (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Overall Status",
            "maxLength": 12,
            "type": "string"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIOverallStatusTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIOverallStatusTypes-update": {
        "title": "CodeList for Overall Status of MC Instance (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.Countries": {
        "title": "Code list for countries\n\nSee https://cap.cloud.sap/docs/cds/common#entity-sapcommoncountries",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Country Code",
            "maxLength": 3,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.Countries_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.Countries-create": {
        "title": "Code list for countries\n\nSee https://cap.cloud.sap/docs/cds/common#entity-sapcommoncountries (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Country Code",
            "maxLength": 3,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.Countries_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.Countries-update": {
        "title": "Code list for countries\n\nSee https://cap.cloud.sap/docs/cds/common#entity-sapcommoncountries (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationTypes": {
        "title": "CodeList for Metering Location Type",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationTypes-create": {
        "title": "CodeList for Metering Location Type (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationTypes-update": {
        "title": "CodeList for Metering Location Type (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.GridLevelTypes": {
        "title": "CodeList for Orderer",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid Level",
            "maxLength": 10,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.GridLevelTypes-create": {
        "title": "CodeList for Orderer (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid Level",
            "maxLength": 10,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.GridLevelTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.GridLevelTypes-update": {
        "title": "CodeList for Orderer (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationPurposeTypes": {
        "title": "CodeList for Types of Metering Location Usage",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Purpose",
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationPurposeTypes-create": {
        "title": "CodeList for Types of Metering Location Usage (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Purpose",
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationPurposeTypes-update": {
        "title": "CodeList for Types of Metering Location Usage (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DirectionTypes": {
        "title": "CodeList for Types of Directions",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.DirectionTypes-create": {
        "title": "CodeList for Types of Directions (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.DirectionTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DirectionTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.DirectionTypes-update": {
        "title": "CodeList for Types of Directions (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTaskTypes": {
        "title": "CodeList for Metering Task Type",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string"
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTaskTypes-create": {
        "title": "CodeList for Metering Task Type (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string"
          },
          "division": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.DivisionTypes-create"
              }
            ],
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringTaskTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTaskTypes-update": {
        "title": "CodeList for Metering Task Type (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "division_code": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringProcedureTypes": {
        "title": "CodeList for Types of Metering Procedures",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringProcedureTypes-create": {
        "title": "CodeList for Types of Metering Procedures (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringProcedureTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MeteringProcedureTypes-update": {
        "title": "CodeList for Types of Metering Procedures (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIRateTypes": {
        "title": "CodeList for Rate Types",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "MCIRateType",
            "maxLength": 10,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIRateTypes-create": {
        "title": "CodeList for Rate Types (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "MCIRateType",
            "maxLength": 10,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIRateTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIRateTypes-update": {
        "title": "CodeList for Rate Types (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationTypes": {
        "title": "CodeList for Types of Market Locations",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationTypes-create": {
        "title": "CodeList for Types of Market Locations (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationTypes-update": {
        "title": "CodeList for Types of Market Locations (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ForecastBasisTypes": {
        "title": "CodeList for Forecast Basis Type",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ForecastBasisType",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ForecastBasisTypes-create": {
        "title": "CodeList for Forecast Basis Type (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ForecastBasisType",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ForecastBasisTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ForecastBasisTypes-update": {
        "title": "CodeList for Forecast Basis Type (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIFlatrateTypes": {
        "title": "CodeList for Flat Rate Types",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Flat rate",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIFlatrateTypes-create": {
        "title": "CodeList for Flat Rate Types (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Flat rate",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIFlatrateTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIFlatrateTypes-update": {
        "title": "CodeList for Flat Rate Types (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationUsageTypes": {
        "title": "CodeList for Usage Types of Market Location",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "marketLocationUsageCode",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationUsageTypes-create": {
        "title": "CodeList for Usage Types of Market Location (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "marketLocationUsageCode",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MarketLocationUsageTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationUsageTypes-update": {
        "title": "CodeList for Usage Types of Market Location (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ActorTypes": {
        "title": "CodeList for Actors Type",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ActorTypes-create": {
        "title": "CodeList for Actors Type (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ActorTypes-update": {
        "title": "CodeList for Actors Type (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ActorDirectionTypes": {
        "title": "CodeList for Types of Directions for Actors",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ActorDirectionTypes-create": {
        "title": "CodeList for Types of Directions for Actors (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ActorDirectionTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ActorDirectionTypes-update": {
        "title": "CodeList for Types of Directions for Actors (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessReasonTypes": {
        "title": "CodeList for Process Reasons of a ChangeProcess",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Reason",
            "maxLength": 20,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessReasonTypes-create": {
        "title": "CodeList for Process Reasons of a ChangeProcess (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Reason",
            "maxLength": 20,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessReasonTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessReasonTypes-update": {
        "title": "CodeList for Process Reasons of a ChangeProcess (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIChangeProcessTypes": {
        "title": "CodeList for Change Processes of MC Instance ",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIChangeProcessTypes-create": {
        "title": "CodeList for Change Processes of MC Instance  (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Type",
            "maxLength": 12,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIChangeProcessTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIChangeProcessTypes-update": {
        "title": "CodeList for Change Processes of MC Instance  (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableEntityTypes": {
        "title": "CodeList for Configurable Entities",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableTypes",
            "maxLength": 30,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableEntityTypes-create": {
        "title": "CodeList for Configurable Entities (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableTypes",
            "maxLength": 30,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableEntityTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableEntityTypes-update": {
        "title": "CodeList for Configurable Entities (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableCharacteristicTypes": {
        "title": "CodeList for Configurable Characteristics",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableCharacteristicTypes",
            "maxLength": 30,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableCharacteristicTypes-create": {
        "title": "CodeList for Configurable Characteristics (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableCharacteristicTypes",
            "maxLength": 30,
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ConfigurableCharacteristicTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableCharacteristicTypes-update": {
        "title": "CodeList for Configurable Characteristics (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIStatusTypes": {
        "title": "CodeList for Status of MC Instance in it's life cycle",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Instance Status",
            "maxLength": 12,
            "type": "string"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIStatusTypes-create": {
        "title": "CodeList for Status of MC Instance in it's life cycle (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Instance Status",
            "maxLength": 12,
            "type": "string"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIStatusTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIStatusTypes-update": {
        "title": "CodeList for Status of MC Instance in it's life cycle (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessStatusTypes": {
        "title": "CodeList for Process Status of MC Instance ",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Change Process Status",
            "maxLength": 30,
            "type": "string"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessStatusTypes-create": {
        "title": "CodeList for Process Status of MC Instance  (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Change Process Status",
            "maxLength": 30,
            "type": "string"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCIProcessStatusTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessStatusTypes-update": {
        "title": "CodeList for Process Status of MC Instance  (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDModelTypes": {
        "title": "CodeList for Types of Measurement Concept",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "deletable": {
            "type": "boolean",
            "nullable": true
          },
          "updateable": {
            "type": "boolean",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCDModelTypes-create": {
        "title": "CodeList for Types of Measurement Concept (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "deletable": {
            "type": "boolean",
            "nullable": true
          },
          "updateable": {
            "type": "boolean",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDModelTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCDModelTypes-update": {
        "title": "CodeList for Types of Measurement Concept (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "deletable": {
            "type": "boolean",
            "nullable": true
          },
          "updateable": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MCMService.MCDStatusTypes": {
        "title": "CodeList for Status of Measurement Concept",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "isActivate_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isActivate_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isDeactivate_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isDeactivate_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isInProgress_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isInProgress_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isEdit_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isEdit_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isCopy_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isCopy_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isDelete_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isDelete_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "code": {
            "title": "Status",
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCDStatusTypes-create": {
        "title": "CodeList for Status of Measurement Concept (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "isActivate_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isActivate_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isDeactivate_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isDeactivate_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isInProgress_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isInProgress_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isEdit_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isEdit_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isCopy_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isCopy_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isDelete_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isDelete_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "code": {
            "title": "Status",
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCDStatusTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCDStatusTypes-update": {
        "title": "CodeList for Status of Measurement Concept (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "isActivate_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isActivate_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isDeactivate_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isDeactivate_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isInProgress_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isInProgress_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isEdit_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isEdit_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isCopy_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isCopy_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "isDelete_allowed": {
            "type": "boolean",
            "nullable": true
          },
          "isDelete_hidden": {
            "type": "boolean",
            "nullable": true
          },
          "criticality": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDRepeatableOperandMappings": {
        "title": "Mapping of malo formulas operands to metering locations / Formel Operanden Zuordnung zu Messlokationen ",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedAt": {
            "title": "Changed At",
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdAt": {
            "title": "Created At",
            "type": "string",
            "description": "Timestamp of creation.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdBy": {
            "title": "Created By",
            "maxLength": 255,
            "type": "string",
            "description": "User which created the entity.",
            "nullable": true
          },
          "modifiedBy": {
            "title": "Changed By",
            "maxLength": 255,
            "type": "string",
            "description": "User which modified the entity lastly.",
            "nullable": true
          },
          "createdByUuid": {
            "title": "Created By (SAPGlobalUserID)",
            "type": "string",
            "description": "SAP Global User ID which created the entity.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedByUuid": {
            "title": "Changed By (SAPGlobalUserID)",
            "type": "string",
            "description": "SAP Global User ID which modified the entity lastly.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
              }
            ],
            "nullable": true
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isInvalid": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MCMService.MCDRepeatableOperandMappings-create": {
        "title": "Mapping of malo formulas operands to metering locations / Formel Operanden Zuordnung zu Messlokationen  (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels-create"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDRepeatableOperandMappings-update": {
        "title": "Mapping of malo formulas operands to metering locations / Formel Operanden Zuordnung zu Messlokationen  (for update)",
        "type": "object",
        "properties": {
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "operand": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMeteringLocationPurposes": {
        "title": "Aspect to capture changes by user and name.",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedAt": {
            "title": "Changed At",
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdAt": {
            "title": "Created At",
            "type": "string",
            "description": "Timestamp of creation.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdBy": {
            "title": "Created By",
            "maxLength": 255,
            "type": "string",
            "description": "User which created the entity.",
            "nullable": true
          },
          "modifiedBy": {
            "title": "Changed By",
            "maxLength": 255,
            "type": "string",
            "description": "User which modified the entity lastly.",
            "nullable": true
          },
          "createdByUuid": {
            "title": "Created By (SAPGlobalUserID)",
            "type": "string",
            "description": "SAP Global User ID which created the entity.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedByUuid": {
            "title": "Changed By (SAPGlobalUserID)",
            "type": "string",
            "description": "SAP Global User ID which modified the entity lastly.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "purpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes"
              }
            ],
            "nullable": true
          },
          "purpose_code": {
            "maxLength": 3,
            "type": "string",
            "default": "SC",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMeteringLocationPurposes-create": {
        "title": "Aspect to capture changes by user and name. (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "measurementConceptModel": {
            "$ref": "#/components/schemas/MCMService.MeasurementConceptModels-create"
          },
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation": {
            "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "purpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MeteringLocationPurposeTypes-create"
              }
            ],
            "nullable": true
          },
          "purpose_code": {
            "maxLength": 3,
            "type": "string",
            "default": "SC",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCDMeteringLocationPurposes-update": {
        "title": "Aspect to capture changes by user and name. (for update)",
        "type": "object",
        "properties": {
          "measurementConceptModel_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "meteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "purpose_code": {
            "maxLength": 3,
            "type": "string",
            "default": "SC",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MCMService.MCClassTypes": {
        "title": "CodeList for Types of Measurement Concept Classes",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "deletable": {
            "type": "boolean",
            "nullable": true
          },
          "updateable": {
            "type": "boolean",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCClassTypes_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCClassTypes-create": {
        "title": "CodeList for Types of Measurement Concept Classes (for create)",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "deletable": {
            "type": "boolean",
            "nullable": true
          },
          "updateable": {
            "type": "boolean",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.MCClassTypes_texts-create"
            }
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCClassTypes_texts-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.MCClassTypes-update": {
        "title": "CodeList for Types of Measurement Concept Classes (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "deletable": {
            "type": "boolean",
            "nullable": true
          },
          "updateable": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MCMService.MCCNodeConnections": {
        "title": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur",
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedAt": {
            "title": "Changed At",
            "type": "string",
            "description": "Timestamp of last modification.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdAt": {
            "title": "Created At",
            "type": "string",
            "description": "Timestamp of creation.",
            "format": "date-time",
            "nullable": true,
            "example": "2017-04-13T15:51:04.0000000+00:00"
          },
          "createdBy": {
            "title": "Created By",
            "maxLength": 255,
            "type": "string",
            "description": "User which created the entity.",
            "nullable": true
          },
          "modifiedBy": {
            "title": "Changed By",
            "maxLength": 255,
            "type": "string",
            "description": "User which modified the entity lastly.",
            "nullable": true
          },
          "createdByUuid": {
            "title": "Created By (SAPGlobalUserID)",
            "type": "string",
            "description": "SAP Global User ID which created the entity.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "modifiedByUuid": {
            "title": "Changed By (SAPGlobalUserID)",
            "type": "string",
            "description": "SAP Global User ID which modified the entity lastly.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCActors"
              }
            ],
            "nullable": true
          },
          "successorActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
              }
            ],
            "nullable": true
          },
          "successorMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCActors"
              }
            ],
            "nullable": true
          },
          "referenceActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations"
              }
            ],
            "nullable": true
          },
          "referenceMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCCNodeConnections-create": {
        "title": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur (for create)",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCActors-create"
              }
            ],
            "nullable": true
          },
          "successorActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "successorMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceActor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCActors-create"
              }
            ],
            "nullable": true
          },
          "referenceActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceMeteringLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.MCCMeteringLocations-create"
              }
            ],
            "nullable": true
          },
          "referenceMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.MCCNodeConnections-update": {
        "title": "Model Connections MeLo<->Actor / MKV Messkonzeptklasse Verbindungen MeLo<->Akteur (for update)",
        "type": "object",
        "properties": {
          "successorActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "successorMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceActor_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "referenceMeteringLocation_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      },
      "MCMService.PowerRangeTypes_texts": {
        "title": "PowerRangeTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Power Range",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.PowerRangeTypes_texts-create": {
        "title": "PowerRangeTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Power Range",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.PowerRangeTypes_texts-update": {
        "title": "PowerRangeTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.EnergySourceTypes_texts": {
        "title": "EnergySourceTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Energy Source",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.EnergySourceTypes_texts-create": {
        "title": "EnergySourceTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Energy Source",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.EnergySourceTypes_texts-update": {
        "title": "EnergySourceTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.GridTypes_texts": {
        "title": "GridTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid",
            "maxLength": 40,
            "type": "string"
          }
        }
      },
      "MCMService.GridTypes_texts-create": {
        "title": "GridTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid",
            "maxLength": 40,
            "type": "string"
          }
        }
      },
      "MCMService.GridTypes_texts-update": {
        "title": "GridTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ActorExternalReferenceTypes_texts": {
        "title": "ActorExternalReferenceTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Reference Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.ActorExternalReferenceTypes_texts-create": {
        "title": "ActorExternalReferenceTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Reference Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.ActorExternalReferenceTypes_texts-update": {
        "title": "ActorExternalReferenceTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ExternalReferenceSystems_texts": {
        "title": "ExternalReferenceSystems_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Referenced IT-System",
            "maxLength": 20,
            "type": "string"
          }
        }
      },
      "MCMService.ExternalReferenceSystems_texts-create": {
        "title": "ExternalReferenceSystems_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Referenced IT-System",
            "maxLength": 20,
            "type": "string"
          }
        }
      },
      "MCMService.ExternalReferenceSystems_texts-update": {
        "title": "ExternalReferenceSystems_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasuringTypes_texts": {
        "title": "MeasuringTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Measuring device type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MeasuringTypes_texts-create": {
        "title": "MeasuringTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Measuring device type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MeasuringTypes_texts-update": {
        "title": "MeasuringTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.OrdererTypes_texts": {
        "title": "OrdererTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Orderering Party",
            "maxLength": 40,
            "type": "string"
          }
        }
      },
      "MCMService.OrdererTypes_texts-create": {
        "title": "OrdererTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Orderering Party",
            "maxLength": 40,
            "type": "string"
          }
        }
      },
      "MCMService.OrdererTypes_texts-update": {
        "title": "OrdererTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptModels_texts": {
        "title": "MeasurementConceptModels_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptModels_texts-create": {
        "title": "MeasurementConceptModels_texts (for create)",
        "required": [
          "locale",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptModels_texts-update": {
        "title": "MeasurementConceptModels_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptClasses_texts": {
        "title": "MeasurementConceptClasses_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptClasses_texts-create": {
        "title": "MeasurementConceptClasses_texts (for create)",
        "required": [
          "locale",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeasurementConceptClasses_texts-update": {
        "title": "MeasurementConceptClasses_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringLocations_texts": {
        "title": "MCCMeteringLocations_texts",
        "type": "object",
        "properties": {
          "ID_texts": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code",
            "nullable": true
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringLocations_texts-create": {
        "title": "MCCMeteringLocations_texts (for create)",
        "required": [
          "ID_texts"
        ],
        "type": "object",
        "properties": {
          "ID_texts": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code",
            "nullable": true
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCCMeteringLocations_texts-update": {
        "title": "MCCMeteringLocations_texts (for update)",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code",
            "nullable": true
          },
          "id": {
            "title": "UUID",
            "type": "string",
            "description": "Entity identifier based on Universally Unique Identifier.",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DivisionTypes_texts": {
        "title": "DivisionTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Division",
            "maxLength": 2,
            "type": "string"
          }
        }
      },
      "MCMService.DivisionTypes_texts-create": {
        "title": "DivisionTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Division",
            "maxLength": 2,
            "type": "string"
          }
        }
      },
      "MCMService.DivisionTypes_texts-update": {
        "title": "DivisionTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIOverallStatusTypes_texts": {
        "title": "MCIOverallStatusTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Overall Status",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIOverallStatusTypes_texts-create": {
        "title": "MCIOverallStatusTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Overall Status",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIOverallStatusTypes_texts-update": {
        "title": "MCIOverallStatusTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.Countries_texts": {
        "title": "Countries_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Country Code",
            "maxLength": 3,
            "type": "string"
          }
        }
      },
      "MCMService.Countries_texts-create": {
        "title": "Countries_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Country Code",
            "maxLength": 3,
            "type": "string"
          }
        }
      },
      "MCMService.Countries_texts-update": {
        "title": "Countries_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationTypes_texts": {
        "title": "MeteringLocationTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MeteringLocationTypes_texts-create": {
        "title": "MeteringLocationTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MeteringLocationTypes_texts-update": {
        "title": "MeteringLocationTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.GridLevelTypes_texts": {
        "title": "GridLevelTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid Level",
            "maxLength": 10,
            "type": "string"
          }
        }
      },
      "MCMService.GridLevelTypes_texts-create": {
        "title": "GridLevelTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Grid Level",
            "maxLength": 10,
            "type": "string"
          }
        }
      },
      "MCMService.GridLevelTypes_texts-update": {
        "title": "GridLevelTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringLocationPurposeTypes_texts": {
        "title": "MeteringLocationPurposeTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Purpose",
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          }
        }
      },
      "MCMService.MeteringLocationPurposeTypes_texts-create": {
        "title": "MeteringLocationPurposeTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Location Purpose",
            "maxLength": 3,
            "type": "string",
            "default": "SC"
          }
        }
      },
      "MCMService.MeteringLocationPurposeTypes_texts-update": {
        "title": "MeteringLocationPurposeTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DirectionTypes_texts": {
        "title": "DirectionTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          }
        }
      },
      "MCMService.DirectionTypes_texts-create": {
        "title": "DirectionTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          }
        }
      },
      "MCMService.DirectionTypes_texts-update": {
        "title": "DirectionTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringTaskTypes_texts": {
        "title": "MeteringTaskTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MeteringTaskTypes_texts-create": {
        "title": "MeteringTaskTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering Task Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MeteringTaskTypes_texts-update": {
        "title": "MeteringTaskTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MeteringProcedureTypes_texts": {
        "title": "MeteringProcedureTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string"
          }
        }
      },
      "MCMService.MeteringProcedureTypes_texts-create": {
        "title": "MeteringProcedureTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Metering procedure",
            "maxLength": 3,
            "type": "string"
          }
        }
      },
      "MCMService.MeteringProcedureTypes_texts-update": {
        "title": "MeteringProcedureTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIRateTypes_texts": {
        "title": "MCIRateTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "MCIRateType",
            "maxLength": 10,
            "type": "string"
          }
        }
      },
      "MCMService.MCIRateTypes_texts-create": {
        "title": "MCIRateTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "MCIRateType",
            "maxLength": 10,
            "type": "string"
          }
        }
      },
      "MCMService.MCIRateTypes_texts-update": {
        "title": "MCIRateTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationTypes_texts": {
        "title": "MarketLocationTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MarketLocationTypes_texts-create": {
        "title": "MarketLocationTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MarketLocationTypes_texts-update": {
        "title": "MarketLocationTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ForecastBasisTypes_texts": {
        "title": "ForecastBasisTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ForecastBasisType",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.ForecastBasisTypes_texts-create": {
        "title": "ForecastBasisTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ForecastBasisType",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.ForecastBasisTypes_texts-update": {
        "title": "ForecastBasisTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIFlatrateTypes_texts": {
        "title": "MCIFlatrateTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Flat rate",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIFlatrateTypes_texts-create": {
        "title": "MCIFlatrateTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Flat rate",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIFlatrateTypes_texts-update": {
        "title": "MCIFlatrateTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MarketLocationUsageTypes_texts": {
        "title": "MarketLocationUsageTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "marketLocationUsageCode",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MarketLocationUsageTypes_texts-create": {
        "title": "MarketLocationUsageTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "marketLocationUsageCode",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MarketLocationUsageTypes_texts-update": {
        "title": "MarketLocationUsageTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ActorTypes_texts": {
        "title": "ActorTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.ActorTypes_texts-create": {
        "title": "ActorTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Actor Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.ActorTypes_texts-update": {
        "title": "ActorTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ActorDirectionTypes_texts": {
        "title": "ActorDirectionTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          }
        }
      },
      "MCMService.ActorDirectionTypes_texts-create": {
        "title": "ActorDirectionTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Direction",
            "maxLength": 4,
            "type": "string"
          }
        }
      },
      "MCMService.ActorDirectionTypes_texts-update": {
        "title": "ActorDirectionTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessReasonTypes_texts": {
        "title": "MCIProcessReasonTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Reason",
            "maxLength": 20,
            "type": "string"
          }
        }
      },
      "MCMService.MCIProcessReasonTypes_texts-create": {
        "title": "MCIProcessReasonTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Reason",
            "maxLength": 20,
            "type": "string"
          }
        }
      },
      "MCMService.MCIProcessReasonTypes_texts-update": {
        "title": "MCIProcessReasonTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIChangeProcessTypes_texts": {
        "title": "MCIChangeProcessTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIChangeProcessTypes_texts-create": {
        "title": "MCIChangeProcessTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Process Type",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIChangeProcessTypes_texts-update": {
        "title": "MCIChangeProcessTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableEntityTypes_texts": {
        "title": "ConfigurableEntityTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableTypes",
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.ConfigurableEntityTypes_texts-create": {
        "title": "ConfigurableEntityTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableTypes",
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.ConfigurableEntityTypes_texts-update": {
        "title": "ConfigurableEntityTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ConfigurableCharacteristicTypes_texts": {
        "title": "ConfigurableCharacteristicTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableCharacteristicTypes",
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.ConfigurableCharacteristicTypes_texts-create": {
        "title": "ConfigurableCharacteristicTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "ConfigurableCharacteristicTypes",
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.ConfigurableCharacteristicTypes_texts-update": {
        "title": "ConfigurableCharacteristicTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIStatusTypes_texts": {
        "title": "MCIStatusTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Instance Status",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIStatusTypes_texts-create": {
        "title": "MCIStatusTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Instance Status",
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "MCMService.MCIStatusTypes_texts-update": {
        "title": "MCIStatusTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCIProcessStatusTypes_texts": {
        "title": "MCIProcessStatusTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Change Process Status",
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.MCIProcessStatusTypes_texts-create": {
        "title": "MCIProcessStatusTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Change Process Status",
            "maxLength": 30,
            "type": "string"
          }
        }
      },
      "MCMService.MCIProcessStatusTypes_texts-update": {
        "title": "MCIProcessStatusTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCDModelTypes_texts": {
        "title": "MCDModelTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          }
        }
      },
      "MCMService.MCDModelTypes_texts-create": {
        "title": "MCDModelTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "MODEL"
          }
        }
      },
      "MCMService.MCDModelTypes_texts-update": {
        "title": "MCDModelTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCDStatusTypes_texts": {
        "title": "MCDStatusTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Status",
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          }
        }
      },
      "MCMService.MCDStatusTypes_texts-create": {
        "title": "MCDStatusTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Status",
            "maxLength": 12,
            "type": "string",
            "default": "IN_PROGRESS"
          }
        }
      },
      "MCMService.MCDStatusTypes_texts-update": {
        "title": "MCDStatusTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.MCClassTypes_texts": {
        "title": "MCClassTypes_texts",
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          }
        }
      },
      "MCMService.MCClassTypes_texts-create": {
        "title": "MCClassTypes_texts (for create)",
        "required": [
          "locale",
          "code"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "title": "Language Code",
            "maxLength": 14,
            "type": "string",
            "description": "Type for a language code"
          },
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Type",
            "maxLength": 12,
            "type": "string",
            "default": "CLASS"
          }
        }
      },
      "MCMService.MCClassTypes_texts-update": {
        "title": "MCClassTypes_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "descr": {
            "title": "Description",
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ProcessProgress": {
        "title": "ProcessProgress",
        "type": "object",
        "properties": {
          "changeProcessId": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceIdText": {
            "type": "string"
          },
          "instanceVersion": {
            "type": "string"
          },
          "currentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ProcessProgressStatus"
              }
            ],
            "nullable": true
          },
          "nextStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ProcessProgressStatus"
              }
            ],
            "nullable": true
          },
          "failedValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ProcessProgressFailedValidation"
            }
          }
        }
      },
      "MCMService.ProcessProgress-create": {
        "title": "ProcessProgress (for create)",
        "type": "object",
        "properties": {
          "changeProcessId": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceIdText": {
            "type": "string"
          },
          "instanceVersion": {
            "type": "string"
          },
          "currentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ProcessProgressStatus-create"
              }
            ],
            "nullable": true
          },
          "nextStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ProcessProgressStatus-create"
              }
            ],
            "nullable": true
          },
          "failedValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ProcessProgressFailedValidation-create"
            }
          }
        }
      },
      "MCMService.ProcessProgress-update": {
        "title": "ProcessProgress (for update)",
        "type": "object",
        "properties": {
          "changeProcessId": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceId": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "instanceIdText": {
            "type": "string"
          },
          "instanceVersion": {
            "type": "string"
          },
          "currentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ProcessProgressStatus-update"
              }
            ],
            "nullable": true
          },
          "nextStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.ProcessProgressStatus-update"
              }
            ],
            "nullable": true
          },
          "failedValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCMService.ProcessProgressFailedValidation-update"
            }
          }
        }
      },
      "MCMService.ProcessProgressStatus": {
        "title": "ProcessProgressStatus",
        "type": "object",
        "properties": {
          "instanceStatus": {
            "type": "string",
            "nullable": true
          },
          "processStatus": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ProcessProgressStatus-create": {
        "title": "ProcessProgressStatus (for create)",
        "type": "object",
        "properties": {
          "instanceStatus": {
            "type": "string",
            "nullable": true
          },
          "processStatus": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ProcessProgressStatus-update": {
        "title": "ProcessProgressStatus (for update)",
        "type": "object",
        "properties": {
          "instanceStatus": {
            "type": "string",
            "nullable": true
          },
          "processStatus": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.ProcessProgressFailedValidation": {
        "title": "ProcessProgressFailedValidation",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MCMService.ProcessProgressFailedValidation-create": {
        "title": "ProcessProgressFailedValidation (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MCMService.ProcessProgressFailedValidation-update": {
        "title": "ProcessProgressFailedValidation (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "energySource_code": {
            "type": "string",
            "nullable": true
          },
          "gridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "isOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "powerRange_code": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorEnergySource_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorGridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorIsOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorPowerRange_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "energySource_code": {
            "type": "string",
            "nullable": true
          },
          "gridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "isOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "powerRange_code": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorEnergySource_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorGridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorIsOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorPowerRange_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIActorDifference (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "energySource_code": {
            "type": "string",
            "nullable": true
          },
          "gridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "isOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "powerRange_code": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorEnergySource_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorGridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorIsOwnConsumption": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorPowerRange_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "marketLocationId": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorMarketLocationId": {
            "type": "string",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "calculationRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "marketLocationId": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorMarketLocationId": {
            "type": "string",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "calculationRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationDifference (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "marketLocationId": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorMarketLocationId": {
            "type": "string",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "calculationRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences-update"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences (for create)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRulesDifferences (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "meteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorExpression": {
            "type": "string",
            "nullable": true
          },
          "predecessorMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "usages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "meteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorExpression": {
            "type": "string",
            "nullable": true
          },
          "predecessorMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "usages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCICalculationRuleDifference (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "meteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorExpression": {
            "type": "string",
            "nullable": true
          },
          "predecessorMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "usages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences-update"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences (for create)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsagesDifferences (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorUsage_code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorUsage_code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMarketLocationUsageDifference (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "usage_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorUsage_code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialId": {
            "type": "string",
            "nullable": true
          },
          "disconnectable": {
            "type": "boolean",
            "nullable": true
          },
          "grid_code": {
            "type": "string",
            "nullable": true
          },
          "gridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "lossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "meteringLocationId": {
            "type": "string",
            "nullable": true
          },
          "meteringLocationPurpose_code": {
            "type": "string",
            "nullable": true
          },
          "transformerRequired": {
            "type": "boolean",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorDeviceSerialId": {
            "type": "string",
            "nullable": true
          },
          "predecessorDisconnectable": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorGrid_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorGridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorLossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorAltitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorMeteringLocationId": {
            "type": "string",
            "nullable": true
          },
          "predecessorMeteringLocationPurpose_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorTransformerRequired": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "meteringTasks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialId": {
            "type": "string",
            "nullable": true
          },
          "disconnectable": {
            "type": "boolean",
            "nullable": true
          },
          "grid_code": {
            "type": "string",
            "nullable": true
          },
          "gridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "lossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "meteringLocationId": {
            "type": "string",
            "nullable": true
          },
          "meteringLocationPurpose_code": {
            "type": "string",
            "nullable": true
          },
          "transformerRequired": {
            "type": "boolean",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorDeviceSerialId": {
            "type": "string",
            "nullable": true
          },
          "predecessorDisconnectable": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorGrid_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorGridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorLossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorAltitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorMeteringLocationId": {
            "type": "string",
            "nullable": true
          },
          "predecessorMeteringLocationPurpose_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorTransformerRequired": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "meteringTasks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringLocationDifference (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "idText": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialId": {
            "type": "string",
            "nullable": true
          },
          "disconnectable": {
            "type": "boolean",
            "nullable": true
          },
          "grid_code": {
            "type": "string",
            "nullable": true
          },
          "gridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "lossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "meteringLocationId": {
            "type": "string",
            "nullable": true
          },
          "meteringLocationPurpose_code": {
            "type": "string",
            "nullable": true
          },
          "transformerRequired": {
            "type": "boolean",
            "nullable": true
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorIdText": {
            "type": "string",
            "nullable": true
          },
          "predecessorDeviceSerialId": {
            "type": "string",
            "nullable": true
          },
          "predecessorDisconnectable": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorGrid_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorGridLevel_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorLossLineDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossLineSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossTransformerDemand": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossTransformerSupply": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorAltitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorMeteringLocationId": {
            "type": "string",
            "nullable": true
          },
          "predecessorMeteringLocationPurpose_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorTransformerRequired": {
            "type": "boolean",
            "nullable": true
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "meteringTasks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences-update"
              }
            ],
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences (for create)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-create"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-create"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTasksDifferences (for update)",
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "changed": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-update"
                }
              ],
              "nullable": true
            }
          },
          "ambiguous": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-update"
                }
              ],
              "nullable": true
            }
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction_code": {
            "type": "string",
            "nullable": true
          },
          "lossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorDirection_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorLossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorPlannedMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorRegisterCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-create": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction_code": {
            "type": "string",
            "nullable": true
          },
          "lossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorDirection_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorLossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorPlannedMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorRegisterCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference-update": {
        "title": "sap_com_utilities_c4u_edom_mcm_diff_MCIMeteringTaskDifference (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "direction_code": {
            "type": "string",
            "nullable": true
          },
          "lossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "lossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "type_code": {
            "type": "string",
            "nullable": true
          },
          "plannedMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "registerCode": {
            "type": "string",
            "nullable": true
          },
          "predecessorId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "predecessorDirection_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorLossFactorTransformer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorLossFactorLine": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "predecessorType_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorPlannedMeteringProcedure_code": {
            "type": "string",
            "nullable": true
          },
          "predecessorRegisterCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_added": {
        "title": "DifferenceOnAddresses_added",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_added-create": {
        "title": "DifferenceOnAddresses_added (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries-create"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_added-update": {
        "title": "DifferenceOnAddresses_added (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_changed": {
        "title": "DifferenceOnAddresses_changed",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_changed-create": {
        "title": "DifferenceOnAddresses_changed (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries-create"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_changed-update": {
        "title": "DifferenceOnAddresses_changed (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_deleted": {
        "title": "DifferenceOnAddresses_deleted",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_deleted-create": {
        "title": "DifferenceOnAddresses_deleted (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries-create"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_deleted-update": {
        "title": "DifferenceOnAddresses_deleted (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_unchanged": {
        "title": "DifferenceOnAddresses_unchanged",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_unchanged-create": {
        "title": "DifferenceOnAddresses_unchanged (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries-create"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_unchanged-update": {
        "title": "DifferenceOnAddresses_unchanged (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_ambiguous": {
        "title": "DifferenceOnAddresses_ambiguous",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_ambiguous-create": {
        "title": "DifferenceOnAddresses_ambiguous (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country": {
            "title": "Country",
            "allOf": [
              {
                "$ref": "#/components/schemas/MCMService.Countries-create"
              }
            ],
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MCMService.DifferenceOnAddresses_ambiguous-update": {
        "title": "DifferenceOnAddresses_ambiguous (for update)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "country_code": {
            "title": "Country",
            "maxLength": 3,
            "type": "string",
            "description": "A country code as specified in ISO 3166-1",
            "nullable": true
          },
          "cityID": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          },
          "cityDistrict": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "streetID": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumberSupplement": {
            "type": "string",
            "nullable": true
          },
          "floorNumber": {
            "type": "string",
            "nullable": true
          },
          "supplement": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "format": "decimal",
            "nullable": true,
            "example": 0
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "MCMInstances"
    },
    {
      "name": "Differences2Predecessors"
    },
    {
      "name": "DifferenceOnActors"
    },
    {
      "name": "DifferenceOnMarketLocations"
    },
    {
      "name": "DifferenceOnMeteringLocations"
    },
    {
      "name": "DifferenceOnAddresses"
    },
    {
      "name": "MCMInstancesPD"
    },
    {
      "name": "ObjectAddresses"
    },
    {
      "name": "MeteringLocations"
    },
    {
      "name": "MeteringLocationsPD"
    },
    {
      "name": "MeteringTasks"
    },
    {
      "name": "MeteringTasksPD"
    },
    {
      "name": "MarketLocations"
    },
    {
      "name": "MarketLocationsPD"
    },
    {
      "name": "MCIOperandMappings"
    },
    {
      "name": "MCICalculationRules"
    },
    {
      "name": "MCICalculationRuleSteps"
    },
    {
      "name": "MCIMarketLocationUsages"
    },
    {
      "name": "Actors"
    },
    {
      "name": "MCIMarketLocationActors"
    },
    {
      "name": "ActorsPD"
    },
    {
      "name": "ActorsPDExternalReferences"
    },
    {
      "name": "CircuitPlanNodeConnections"
    },
    {
      "name": "MCIErrors"
    },
    {
      "name": "MCIChangeProcesses"
    },
    {
      "name": "MCIInstanceCharacteristics"
    },
    {
      "name": "MCIStatus"
    },
    {
      "name": "PowerRangeTypes"
    },
    {
      "name": "EnergySourceTypes"
    },
    {
      "name": "GridTypes"
    },
    {
      "name": "ActorExternalReferenceTypes"
    },
    {
      "name": "ExternalReferenceSystems"
    },
    {
      "name": "MeasuringTypes"
    },
    {
      "name": "OrdererTypes"
    },
    {
      "name": "MCMFormulaConfiguration"
    },
    {
      "name": "LocationStructureActors"
    },
    {
      "name": "LocationStructureMeteringLocations"
    },
    {
      "name": "LocationStructureMeteringTasks"
    },
    {
      "name": "MarketLocationStructure"
    },
    {
      "name": "MeasurementConceptModels"
    },
    {
      "name": "MCDMarketLocations"
    },
    {
      "name": "MCDOperandMappings"
    },
    {
      "name": "MCDCalculationRules"
    },
    {
      "name": "MCDMarketLocationActors"
    },
    {
      "name": "MCDMarketLocationUsages"
    },
    {
      "name": "MCMFormulas"
    },
    {
      "name": "MCMFormulaSteps"
    },
    {
      "name": "MeasurementConceptClasses"
    },
    {
      "name": "MCCMeteringLocations"
    },
    {
      "name": "MCCMeteringTasks"
    },
    {
      "name": "MCCMeteringProcedures"
    },
    {
      "name": "MCCActors"
    },
    {
      "name": "InputMCMInstances"
    },
    {
      "name": "InputMCMInstancesPD"
    },
    {
      "name": "InputMCIChangeProcesses"
    },
    {
      "name": "DivisionTypes"
    },
    {
      "name": "MCIOverallStatusTypes"
    },
    {
      "name": "Countries"
    },
    {
      "name": "MeteringLocationTypes"
    },
    {
      "name": "GridLevelTypes"
    },
    {
      "name": "MeteringLocationPurposeTypes"
    },
    {
      "name": "DirectionTypes"
    },
    {
      "name": "MeteringTaskTypes"
    },
    {
      "name": "MeteringProcedureTypes"
    },
    {
      "name": "MCIRateTypes"
    },
    {
      "name": "MarketLocationTypes"
    },
    {
      "name": "ForecastBasisTypes"
    },
    {
      "name": "MCIFlatrateTypes"
    },
    {
      "name": "MarketLocationUsageTypes"
    },
    {
      "name": "ActorTypes"
    },
    {
      "name": "ActorDirectionTypes"
    },
    {
      "name": "MCIProcessReasonTypes"
    },
    {
      "name": "MCIChangeProcessTypes"
    },
    {
      "name": "ConfigurableEntityTypes"
    },
    {
      "name": "ConfigurableCharacteristicTypes"
    },
    {
      "name": "MCIStatusTypes"
    },
    {
      "name": "MCIProcessStatusTypes"
    },
    {
      "name": "MCDModelTypes"
    },
    {
      "name": "MCDStatusTypes"
    },
    {
      "name": "MCDRepeatableOperandMappings"
    },
    {
      "name": "MCDMeteringLocationPurposes"
    },
    {
      "name": "MCClassTypes"
    },
    {
      "name": "MCCNodeConnections"
    },
    {
      "name": "PowerRangeTypes_texts"
    },
    {
      "name": "EnergySourceTypes_texts"
    },
    {
      "name": "GridTypes_texts"
    },
    {
      "name": "ActorExternalReferenceTypes_texts"
    },
    {
      "name": "ExternalReferenceSystems_texts"
    },
    {
      "name": "MeasuringTypes_texts"
    },
    {
      "name": "OrdererTypes_texts"
    },
    {
      "name": "MeasurementConceptModels_texts"
    },
    {
      "name": "MeasurementConceptClasses_texts"
    },
    {
      "name": "MCCMeteringLocations_texts"
    },
    {
      "name": "DivisionTypes_texts"
    },
    {
      "name": "MCIOverallStatusTypes_texts"
    },
    {
      "name": "Countries_texts"
    },
    {
      "name": "MeteringLocationTypes_texts"
    },
    {
      "name": "GridLevelTypes_texts"
    },
    {
      "name": "MeteringLocationPurposeTypes_texts"
    },
    {
      "name": "DirectionTypes_texts"
    },
    {
      "name": "MeteringTaskTypes_texts"
    },
    {
      "name": "MeteringProcedureTypes_texts"
    },
    {
      "name": "MCIRateTypes_texts"
    },
    {
      "name": "MarketLocationTypes_texts"
    },
    {
      "name": "ForecastBasisTypes_texts"
    },
    {
      "name": "MCIFlatrateTypes_texts"
    },
    {
      "name": "MarketLocationUsageTypes_texts"
    },
    {
      "name": "ActorTypes_texts"
    },
    {
      "name": "ActorDirectionTypes_texts"
    },
    {
      "name": "MCIProcessReasonTypes_texts"
    },
    {
      "name": "MCIChangeProcessTypes_texts"
    },
    {
      "name": "ConfigurableEntityTypes_texts"
    },
    {
      "name": "ConfigurableCharacteristicTypes_texts"
    },
    {
      "name": "MCIStatusTypes_texts"
    },
    {
      "name": "MCIProcessStatusTypes_texts"
    },
    {
      "name": "MCDModelTypes_texts"
    },
    {
      "name": "MCDStatusTypes_texts"
    },
    {
      "name": "MCClassTypes_texts"
    }
  ]
}