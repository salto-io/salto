/*
 * Copyright 2024 Salto Labs Ltd.
 * Licensed under the Salto Terms of Use (the "License");
 * You may not use this file except in compliance with the License.  You may obtain a copy of the License at https://www.salto.io/terms-of-use
 *
 * CERTAIN THIRD PARTY SOFTWARE MAY BE CONTAINED IN PORTIONS OF THE SOFTWARE. See NOTICE FILE AT https://github.com/salto-io/salto/blob/main/NOTICES
 */
import {
  ChangeError,
  ChangeValidator,
  getChangeData,
  isInstanceChange,
  isModificationChange,
} from '@salto-io/adapter-api'
import { values } from '@salto-io/lowerdash'
import { USER_FIELD_TYPE_NAME } from '../constants'

const { isDefined } = values

/**
 * Validate that user field keys are not modified
 */
export const userFieldKeyModificationValidator: ChangeValidator = async changes => {
  const userFieldChanges = changes
    .filter(isInstanceChange)
    .filter(isModificationChange)
    .filter(change => getChangeData(change).elemID.typeName === USER_FIELD_TYPE_NAME)

  return userFieldChanges
    .map((change): ChangeError | undefined => {
      const { before, after } = change.data
      if (before.value.key !== after.value.key) {
        return {
          elemID: change.data.after.elemID,
          severity: 'Warning',
          message: 'User field key is generated by Zendesk and cannot be modified',
          detailedMessage: 'User field key is generated by Zendesk and cannot be modified',
        }
      }
      return undefined
    })
    .filter(isDefined)
}
